<Project ToolsVersion="14.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <!-- Import the common properties to support NuGet restore -->
  <Import Project="$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props" Condition="Exists('$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props')" />
  <PropertyGroup>
    <!-- The configuration and platform will be used to determine which assemblies to include from solution and
				 project documentation sources -->
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{dcf5d52a-9135-496a-8a16-57635f8550ff}</ProjectGuid>
    <SHFBSchemaVersion>2017.9.26.0</SHFBSchemaVersion>
    <!-- AssemblyName, Name, and RootNamespace are not used by SHFB but Visual Studio adds them anyway -->
    <AssemblyName>Documentation</AssemblyName>
    <RootNamespace>Documentation</RootNamespace>
    <Name>Documentation</Name>
    <!-- SHFB properties -->
    <FrameworkVersion>Cross-platform (.NET Core/.NET Standard)</FrameworkVersion>
    <OutputPath>.\Help\</OutputPath>
    <HtmlHelpName>Documentation</HtmlHelpName>
    <Language>en-US</Language>
    <DocumentationSources>
      <DocumentationSource sourceFile="..\gray-duck-mail\gray-duck-mail.sln" />
    </DocumentationSources>
    <HelpFileFormat>Website</HelpFileFormat>
    <SyntaxFilters>C#</SyntaxFilters>
    <PresentationStyle>VS2010</PresentationStyle>
    <CleanIntermediates>False</CleanIntermediates>
    <KeepLogFile>True</KeepLogFile>
    <DisableCodeBlockComponent>False</DisableCodeBlockComponent>
    <IndentHtml>False</IndentHtml>
    <BuildAssemblerVerbosity>OnlyWarningsAndErrors</BuildAssemblerVerbosity>
    <SaveComponentCacheCapacity>100</SaveComponentCacheCapacity>
    <HelpTitle>Gray Duck Mail Code Documentation</HelpTitle>
    <HelpFileVersion>1.0.0.0</HelpFileVersion>
    <NamingMethod>MemberName</NamingMethod>
    <ContentPlacement>AboveNamespaces</ContentPlacement>
    <RootNamespaceContainer>True</RootNamespaceContainer>
    <NamespaceGrouping>False</NamespaceGrouping>
    <MaximumGroupParts>2</MaximumGroupParts>
    <Preliminary>False</Preliminary>
    <SdkLinkTarget>Blank</SdkLinkTarget>
    <PlugInConfigurations />
    <RootNamespaceTitle>Easy Mail Discussions Code Documentation</RootNamespaceTitle>
    <NamespaceSummaries>
      <NamespaceSummaryItem name="EasyMailDiscussion.Cli" isDocumented="False">A command line interface for interacting with the Easy Mail Discussions system.</NamespaceSummaryItem>
<NamespaceSummaryItem name="EasyMailDiscussion.Common" isDocumented="False">A collection of shared classes and structures used across the components that make up the Easy Mail Discussion system.</NamespaceSummaryItem>
<NamespaceSummaryItem name="(global)" isDocumented="False">The collective Easy Mail Discussions system.</NamespaceSummaryItem>
<NamespaceSummaryItem name="EasyMailDiscussion.Common.Database" isDocumented="False">A collection of objects defining and manipulating the database structure used by the Easy Mail Discussions system.</NamespaceSummaryItem>
<NamespaceSummaryItem name="EasyMailDiscussion.Web" isDocumented="False">The web server and message processing applications that power Easy Mail Discussions.</NamespaceSummaryItem>
<NamespaceSummaryItem name="EasyMailDiscussion.Web.Controllers" isDocumented="False">A collection of MVC web controllers that accept and process web requests.</NamespaceSummaryItem>
<NamespaceSummaryItem name="EasyMailDiscussion.Web.Models" isDocumented="False">A collection of MVC model calsses that describe data transactions between MVC controllers and MVC views.</NamespaceSummaryItem>
<NamespaceSummaryItem name="EasyMailDiscussion.Web.Models.Forms" isDocumented="False">A collection of MVC model calsses that represent incoming HTML forms input.</NamespaceSummaryItem>
<NamespaceSummaryItem name="EasyMailDiscussion.Web.Worker" isDocumented="False">A collection of asyncronous worker threads that power the automated features of Easy Mail Discussions.</NamespaceSummaryItem>
<NamespaceSummaryItem name="GrayDuckMail.Cli" isDocumented="True">A command line interface for interacting with the Gray Duck Mail system.</NamespaceSummaryItem>
<NamespaceSummaryItem name="GrayDuckMail.Common" isDocumented="True">A collection of shared classes and structures used across the components that make up the Gray Duck Mail system.</NamespaceSummaryItem>
<NamespaceSummaryItem name="GrayDuckMail.Common.Database" isDocumented="True">A collection of objects defining and manipulating the database structure used by the Gray Duck Mail system.</NamespaceSummaryItem>
<NamespaceSummaryItem name="GrayDuckMail.Web" isDocumented="True">The web server and message processing applications that power Gray Duck Mail.</NamespaceSummaryItem>
<NamespaceSummaryItem name="GrayDuckMail.Web.Controllers" isDocumented="True">A collection of MVC web controllers that accept and process web requests.</NamespaceSummaryItem>
<NamespaceSummaryItem name="GrayDuckMail.Web.Models" isDocumented="True">A collection of MVC model calsses that describe data transactions between MVC controllers and MVC views.</NamespaceSummaryItem>
<NamespaceSummaryItem name="GrayDuckMail.Web.Models.Forms" isDocumented="True">A collection of MVC model calsses that represent incoming HTML forms input.</NamespaceSummaryItem>
<NamespaceSummaryItem name="GrayDuckMail.Web.Worker" isDocumented="True">A collection of asyncronous worker threads that power the automated features of Gray Duck Mail.</NamespaceSummaryItem></NamespaceSummaries>
    <VisibleItems>InheritedMembers, Privates, Protected, ProtectedInternalAsProtected, NonBrowsable</VisibleItems>
    <ProjectSummary>This documentation provides detailed information on the architecture and code powering Gray Duck Mail.</ProjectSummary>
  </PropertyGroup>
  <!-- There are no properties for these groups.  AnyCPU needs to appear in order for Visual Studio to perform
			 the build.  The others are optional common platform types that may appear. -->
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|x86' ">
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|x86' ">
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|x64' ">
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|x64' ">
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|Win32' ">
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|Win32' ">
  </PropertyGroup>
  <!-- Import the common build targets during NuGet restore because before the packages are being installed, $(SHFBROOT) is not set yet -->
  <Import Project="$(MSBuildToolsPath)\Microsoft.Common.targets" Condition="'$(MSBuildRestoreSessionId)' != ''" />
  <!-- Import the SHFB build targets during build -->
  <Import Project="$(SHFBROOT)\SandcastleHelpFileBuilder.targets" Condition="'$(MSBuildRestoreSessionId)' == ''" />
  <!-- The pre-build and post-build event properties must appear *after* the targets file import in order to be
			 evaluated correctly. -->
  <PropertyGroup>
    <PreBuildEvent>
    </PreBuildEvent>
    <PostBuildEvent>
    </PostBuildEvent>
    <RunPostBuildEvent>OnBuildSuccess</RunPostBuildEvent>
  </PropertyGroup>
</Project>