<?xml version="1.0" encoding="utf-8"?>
<reflection>
  <assemblies>
    <assembly name="easy-mail-discussion-cli">
      <assemblydata version="1.0.0.0" culture="" key="" hash="SHA1" />
      <attributes>
        <attribute>
          <type api="T:System.Reflection.AssemblyFileVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>1.0.0.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyInformationalVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>1.0.0</value>
          </argument>
        </attribute>
      </attributes>
    </assembly>
    <assembly name="easy-mail-discussion-common">
      <assemblydata version="1.0.0.0" culture="" key="" hash="SHA1" />
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyFileVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>1.0.0.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyInformationalVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>1.0.0</value>
          </argument>
        </attribute>
      </attributes>
    </assembly>
    <assembly name="easy-mail-discussion-web">
      <assemblydata version="1.0.0.0" culture="" key="" hash="SHA1" />
      <attributes>
        <attribute>
          <type api="T:System.Reflection.AssemblyFileVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>1.0.0.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyInformationalVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>1.0.0</value>
          </argument>
        </attribute>
      </attributes>
    </assembly>
  </assemblies>
  <apis>
    <api id="N:EasyMailDiscussion.Cli">
      <apidata name="EasyMailDiscussion.Cli" group="namespace" />
      <elements>
        <element api="T:EasyMailDiscussion.Cli.Options" />
      </elements>
    </api>
    <api id="T:EasyMailDiscussion.Cli.Options">
      <apidata name="Options" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:EasyMailDiscussion.Cli.Options.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:EasyMailDiscussion.Cli.Options.#ctor" />
        <element api="P:EasyMailDiscussion.Cli.Options.DBPath" />
        <element api="P:EasyMailDiscussion.Cli.Options.LogPath" />
        <element api="P:EasyMailDiscussion.Cli.Options.LogLevel" />
        <element api="P:EasyMailDiscussion.Cli.Options.EmailFetchTime" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="easy-mail-discussion-cli" module="easy-mail-discussion-cli" kind="ConsoleApplication" />
        <namespace api="N:EasyMailDiscussion.Cli" />
      </containers>
    </api>
    <api id="M:EasyMailDiscussion.Cli.Options.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="easy-mail-discussion-cli" module="easy-mail-discussion-cli" kind="ConsoleApplication" />
        <namespace api="N:EasyMailDiscussion.Cli" />
        <type api="T:EasyMailDiscussion.Cli.Options" ref="true" />
      </containers>
    </api>
    <api id="P:EasyMailDiscussion.Cli.Options.DBPath">
      <apidata name="DBPath" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_DBPath" />
      <setter name="set_DBPath" />
      <returns>
        <type api="T:System.Uri" ref="true" />
      </returns>
      <containers>
        <library assembly="easy-mail-discussion-cli" module="easy-mail-discussion-cli" kind="ConsoleApplication" />
        <namespace api="N:EasyMailDiscussion.Cli" />
        <type api="T:EasyMailDiscussion.Cli.Options" ref="true" />
      </containers>
    </api>
    <api id="P:EasyMailDiscussion.Cli.Options.EmailFetchTime">
      <apidata name="EmailFetchTime" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_EmailFetchTime" />
      <setter name="set_EmailFetchTime" />
      <returns>
        <type api="T:System.TimeSpan" ref="false" />
      </returns>
      <containers>
        <library assembly="easy-mail-discussion-cli" module="easy-mail-discussion-cli" kind="ConsoleApplication" />
        <namespace api="N:EasyMailDiscussion.Cli" />
        <type api="T:EasyMailDiscussion.Cli.Options" ref="true" />
      </containers>
    </api>
    <api id="P:EasyMailDiscussion.Cli.Options.LogLevel">
      <apidata name="LogLevel" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_LogLevel" />
      <setter name="set_LogLevel" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="easy-mail-discussion-cli" module="easy-mail-discussion-cli" kind="ConsoleApplication" />
        <namespace api="N:EasyMailDiscussion.Cli" />
        <type api="T:EasyMailDiscussion.Cli.Options" ref="true" />
      </containers>
    </api>
    <api id="P:EasyMailDiscussion.Cli.Options.LogPath">
      <apidata name="LogPath" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_LogPath" />
      <setter name="set_LogPath" />
      <returns>
        <type api="T:System.Uri" ref="true" />
      </returns>
      <containers>
        <library assembly="easy-mail-discussion-cli" module="easy-mail-discussion-cli" kind="ConsoleApplication" />
        <namespace api="N:EasyMailDiscussion.Cli" />
        <type api="T:EasyMailDiscussion.Cli.Options" ref="true" />
      </containers>
    </api>
    <api id="N:EasyMailDiscussion.Common">
      <apidata name="EasyMailDiscussion.Common" group="namespace" />
      <elements>
        <element api="T:EasyMailDiscussion.Common.EmailAliasHelper" />
        <element api="T:EasyMailDiscussion.Common.EmailHelper" />
        <element api="T:EasyMailDiscussion.Common.HTMLCleaner" />
        <element api="T:EasyMailDiscussion.Common.IndexedMimeMessage" />
        <element api="T:EasyMailDiscussion.Common.LINQExtensions" />
        <element api="T:EasyMailDiscussion.Common.NLogConfiguration" />
      </elements>
    </api>
    <api id="T:EasyMailDiscussion.Common.EmailAliasHelper">
      <apidata name="EmailAliasHelper" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:EasyMailDiscussion.Common.EmailAliasHelper.GetSubscribeAlias(EasyMailDiscussion.Common.Database.DiscussionList)" />
        <element api="M:EasyMailDiscussion.Common.EmailAliasHelper.GetSubscribeAlias(System.String)" />
        <element api="M:EasyMailDiscussion.Common.EmailAliasHelper.GetUnsubscribeAlias(EasyMailDiscussion.Common.Database.DiscussionList)" />
        <element api="M:EasyMailDiscussion.Common.EmailAliasHelper.GetUnsubscribeAlias(System.String)" />
        <element api="M:EasyMailDiscussion.Common.EmailAliasHelper.GetRequestAlias(EasyMailDiscussion.Common.Database.DiscussionList)" />
        <element api="M:EasyMailDiscussion.Common.EmailAliasHelper.GetRequestAlias(System.String)" />
        <element api="M:EasyMailDiscussion.Common.EmailAliasHelper.GetOwnerAlias(EasyMailDiscussion.Common.Database.DiscussionList)" />
        <element api="M:EasyMailDiscussion.Common.EmailAliasHelper.GetOwnerAlias(System.String)" />
        <element api="M:EasyMailDiscussion.Common.EmailAliasHelper.GetBounceAlias(EasyMailDiscussion.Common.Database.DiscussionList)" />
        <element api="M:EasyMailDiscussion.Common.EmailAliasHelper.GetBounceAlias(System.String)" />
      </elements>
      <containers>
        <library assembly="easy-mail-discussion-common" module="easy-mail-discussion-common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:EasyMailDiscussion.Common" />
      </containers>
    </api>
    <api id="M:EasyMailDiscussion.Common.EmailAliasHelper.GetBounceAlias(EasyMailDiscussion.Common.Database.DiscussionList)">
      <apidata name="GetBounceAlias" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="discussionList">
          <type api="T:EasyMailDiscussion.Common.Database.DiscussionList" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="easy-mail-discussion-common" module="easy-mail-discussion-common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:EasyMailDiscussion.Common" />
        <type api="T:EasyMailDiscussion.Common.EmailAliasHelper" ref="true" />
      </containers>
    </api>
    <api id="M:EasyMailDiscussion.Common.EmailAliasHelper.GetBounceAlias(System.String)">
      <apidata name="GetBounceAlias" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="baseEmailAddress">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="easy-mail-discussion-common" module="easy-mail-discussion-common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:EasyMailDiscussion.Common" />
        <type api="T:EasyMailDiscussion.Common.EmailAliasHelper" ref="true" />
      </containers>
    </api>
    <api id="M:EasyMailDiscussion.Common.EmailAliasHelper.GetOwnerAlias(EasyMailDiscussion.Common.Database.DiscussionList)">
      <apidata name="GetOwnerAlias" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="discussionList">
          <type api="T:EasyMailDiscussion.Common.Database.DiscussionList" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="easy-mail-discussion-common" module="easy-mail-discussion-common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:EasyMailDiscussion.Common" />
        <type api="T:EasyMailDiscussion.Common.EmailAliasHelper" ref="true" />
      </containers>
    </api>
    <api id="M:EasyMailDiscussion.Common.EmailAliasHelper.GetOwnerAlias(System.String)">
      <apidata name="GetOwnerAlias" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="baseEmailAddress">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="easy-mail-discussion-common" module="easy-mail-discussion-common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:EasyMailDiscussion.Common" />
        <type api="T:EasyMailDiscussion.Common.EmailAliasHelper" ref="true" />
      </containers>
    </api>
    <api id="M:EasyMailDiscussion.Common.EmailAliasHelper.GetRequestAlias(EasyMailDiscussion.Common.Database.DiscussionList)">
      <apidata name="GetRequestAlias" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="discussionList">
          <type api="T:EasyMailDiscussion.Common.Database.DiscussionList" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="easy-mail-discussion-common" module="easy-mail-discussion-common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:EasyMailDiscussion.Common" />
        <type api="T:EasyMailDiscussion.Common.EmailAliasHelper" ref="true" />
      </containers>
    </api>
    <api id="M:EasyMailDiscussion.Common.EmailAliasHelper.GetRequestAlias(System.String)">
      <apidata name="GetRequestAlias" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="baseEmailAddress">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="easy-mail-discussion-common" module="easy-mail-discussion-common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:EasyMailDiscussion.Common" />
        <type api="T:EasyMailDiscussion.Common.EmailAliasHelper" ref="true" />
      </containers>
    </api>
    <api id="M:EasyMailDiscussion.Common.EmailAliasHelper.GetSubscribeAlias(EasyMailDiscussion.Common.Database.DiscussionList)">
      <apidata name="GetSubscribeAlias" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="discussionList">
          <type api="T:EasyMailDiscussion.Common.Database.DiscussionList" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="easy-mail-discussion-common" module="easy-mail-discussion-common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:EasyMailDiscussion.Common" />
        <type api="T:EasyMailDiscussion.Common.EmailAliasHelper" ref="true" />
      </containers>
    </api>
    <api id="M:EasyMailDiscussion.Common.EmailAliasHelper.GetSubscribeAlias(System.String)">
      <apidata name="GetSubscribeAlias" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="baseEmailAddress">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="easy-mail-discussion-common" module="easy-mail-discussion-common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:EasyMailDiscussion.Common" />
        <type api="T:EasyMailDiscussion.Common.EmailAliasHelper" ref="true" />
      </containers>
    </api>
    <api id="M:EasyMailDiscussion.Common.EmailAliasHelper.GetUnsubscribeAlias(EasyMailDiscussion.Common.Database.DiscussionList)">
      <apidata name="GetUnsubscribeAlias" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="discussionList">
          <type api="T:EasyMailDiscussion.Common.Database.DiscussionList" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="easy-mail-discussion-common" module="easy-mail-discussion-common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:EasyMailDiscussion.Common" />
        <type api="T:EasyMailDiscussion.Common.EmailAliasHelper" ref="true" />
      </containers>
    </api>
    <api id="M:EasyMailDiscussion.Common.EmailAliasHelper.GetUnsubscribeAlias(System.String)">
      <apidata name="GetUnsubscribeAlias" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="baseEmailAddress">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="easy-mail-discussion-common" module="easy-mail-discussion-common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:EasyMailDiscussion.Common" />
        <type api="T:EasyMailDiscussion.Common.EmailAliasHelper" ref="true" />
      </containers>
    </api>
    <api id="T:EasyMailDiscussion.Common.EmailHelper">
      <apidata name="EmailHelper" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="F:EasyMailDiscussion.Common.EmailHelper.STATUS_GROUP_ACTION_FAILED" />
        <element api="F:EasyMailDiscussion.Common.EmailHelper.STATUS_GROUP_ACTION_DELAYED" />
        <element api="M:EasyMailDiscussion.Common.EmailHelper.FillMainTemplate(System.String,System.String,System.String,System.String,EasyMailDiscussion.Common.Database.DiscussionList)" />
        <element api="M:EasyMailDiscussion.Common.EmailHelper.IsAuthorizedForMailDistribution(EasyMailDiscussion.Common.Database.DiscussionList,EasyMailDiscussion.Common.Database.Contact)" />
        <element api="M:EasyMailDiscussion.Common.EmailHelper.IsAssignable(EasyMailDiscussion.Common.Database.DiscussionList,EasyMailDiscussion.Common.Database.Contact)" />
        <element api="M:EasyMailDiscussion.Common.EmailHelper.RelayEmail(EasyMailDiscussion.Common.Database.DiscussionList,EasyMailDiscussion.Common.Database.Contact,EasyMailDiscussion.Common.Database.Message,EasyMailDiscussion.Common.Database.SqliteDatabase,MailKit.Net.Smtp.SmtpClient,System.Threading.CancellationToken)" />
        <element api="M:EasyMailDiscussion.Common.EmailHelper.SendOnboardingEmail(EasyMailDiscussion.Common.Database.DiscussionList,EasyMailDiscussion.Common.Database.Contact,MailKit.Net.Smtp.SmtpClient,System.Threading.CancellationToken)" />
        <element api="M:EasyMailDiscussion.Common.EmailHelper.SendSubscriptionConfirmationEmail(EasyMailDiscussion.Common.Database.DiscussionList,EasyMailDiscussion.Common.Database.Contact,MailKit.Net.Smtp.SmtpClient,System.Threading.CancellationToken)" />
        <element api="M:EasyMailDiscussion.Common.EmailHelper.SendUnsubscriptionConfirmationEmail(EasyMailDiscussion.Common.Database.DiscussionList,EasyMailDiscussion.Common.Database.Contact,MailKit.Net.Smtp.SmtpClient,System.Threading.CancellationToken)" />
        <element api="M:EasyMailDiscussion.Common.EmailHelper.SendEmail(EasyMailDiscussion.Common.Database.DiscussionList,EasyMailDiscussion.Common.Database.Contact,System.String,System.String,System.Func{MimeKit.MimeEntity},MailKit.Net.Smtp.SmtpClient,System.Threading.CancellationToken)" />
        <element api="M:EasyMailDiscussion.Common.EmailHelper.IsBouncedMessage(EasyMailDiscussion.Common.IndexedMimeMessage)" />
        <element api="M:EasyMailDiscussion.Common.EmailHelper.GetBouncedMessageRecipient(EasyMailDiscussion.Common.IndexedMimeMessage)" />
        <element api="P:EasyMailDiscussion.Common.EmailHelper.ContactAuthorizedStatuses" />
        <element api="P:EasyMailDiscussion.Common.EmailHelper.ContactAssociatedStatuses" />
        <element api="P:EasyMailDiscussion.Common.EmailHelper.ContactUnassignableStatuses" />
        <element api="P:EasyMailDiscussion.Common.EmailHelper.BouncedEmailStatusGroupActions" />
        <element api="P:EasyMailDiscussion.Common.EmailHelper.MailEmailTemplate" />
      </elements>
      <containers>
        <library assembly="easy-mail-discussion-common" module="easy-mail-discussion-common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:EasyMailDiscussion.Common" />
      </containers>
    </api>
    <api id="P:EasyMailDiscussion.Common.EmailHelper.BouncedEmailStatusGroupActions">
      <apidata name="BouncedEmailStatusGroupActions" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_BouncedEmailStatusGroupActions" />
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="easy-mail-discussion-common" module="easy-mail-discussion-common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:EasyMailDiscussion.Common" />
        <type api="T:EasyMailDiscussion.Common.EmailHelper" ref="true" />
      </containers>
    </api>
    <api id="P:EasyMailDiscussion.Common.EmailHelper.ContactAssociatedStatuses">
      <apidata name="ContactAssociatedStatuses" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ContactAssociatedStatuses" />
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:EasyMailDiscussion.Common.Database.SubscriptionStatus" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="easy-mail-discussion-common" module="easy-mail-discussion-common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:EasyMailDiscussion.Common" />
        <type api="T:EasyMailDiscussion.Common.EmailHelper" ref="true" />
      </containers>
    </api>
    <api id="P:EasyMailDiscussion.Common.EmailHelper.ContactAuthorizedStatuses">
      <apidata name="ContactAuthorizedStatuses" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ContactAuthorizedStatuses" />
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:EasyMailDiscussion.Common.Database.SubscriptionStatus" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="easy-mail-discussion-common" module="easy-mail-discussion-common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:EasyMailDiscussion.Common" />
        <type api="T:EasyMailDiscussion.Common.EmailHelper" ref="true" />
      </containers>
    </api>
    <api id="P:EasyMailDiscussion.Common.EmailHelper.ContactUnassignableStatuses">
      <apidata name="ContactUnassignableStatuses" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ContactUnassignableStatuses" />
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:EasyMailDiscussion.Common.Database.SubscriptionStatus" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="easy-mail-discussion-common" module="easy-mail-discussion-common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:EasyMailDiscussion.Common" />
        <type api="T:EasyMailDiscussion.Common.EmailHelper" ref="true" />
      </containers>
    </api>
    <api id="M:EasyMailDiscussion.Common.EmailHelper.FillMainTemplate(System.String,System.String,System.String,System.String,EasyMailDiscussion.Common.Database.DiscussionList)">
      <apidata name="FillMainTemplate" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="heading">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="subheading">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="body">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="footer">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="discussionList">
          <type api="T:EasyMailDiscussion.Common.Database.DiscussionList" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="easy-mail-discussion-common" module="easy-mail-discussion-common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:EasyMailDiscussion.Common" />
        <type api="T:EasyMailDiscussion.Common.EmailHelper" ref="true" />
      </containers>
    </api>
    <api id="M:EasyMailDiscussion.Common.EmailHelper.GetBouncedMessageRecipient(EasyMailDiscussion.Common.IndexedMimeMessage)">
      <apidata name="GetBouncedMessageRecipient" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="message">
          <type api="T:EasyMailDiscussion.Common.IndexedMimeMessage" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="easy-mail-discussion-common" module="easy-mail-discussion-common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:EasyMailDiscussion.Common" />
        <type api="T:EasyMailDiscussion.Common.EmailHelper" ref="true" />
      </containers>
    </api>
    <api id="M:EasyMailDiscussion.Common.EmailHelper.IsAssignable(EasyMailDiscussion.Common.Database.DiscussionList,EasyMailDiscussion.Common.Database.Contact)">
      <apidata name="IsAssignable" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="discussionList">
          <type api="T:EasyMailDiscussion.Common.Database.DiscussionList" ref="true" />
        </parameter>
        <parameter name="contact">
          <type api="T:EasyMailDiscussion.Common.Database.Contact" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="easy-mail-discussion-common" module="easy-mail-discussion-common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:EasyMailDiscussion.Common" />
        <type api="T:EasyMailDiscussion.Common.EmailHelper" ref="true" />
      </containers>
    </api>
    <api id="M:EasyMailDiscussion.Common.EmailHelper.IsAuthorizedForMailDistribution(EasyMailDiscussion.Common.Database.DiscussionList,EasyMailDiscussion.Common.Database.Contact)">
      <apidata name="IsAuthorizedForMailDistribution" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="discussionList">
          <type api="T:EasyMailDiscussion.Common.Database.DiscussionList" ref="true" />
        </parameter>
        <parameter name="contact">
          <type api="T:EasyMailDiscussion.Common.Database.Contact" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="easy-mail-discussion-common" module="easy-mail-discussion-common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:EasyMailDiscussion.Common" />
        <type api="T:EasyMailDiscussion.Common.EmailHelper" ref="true" />
      </containers>
    </api>
    <api id="M:EasyMailDiscussion.Common.EmailHelper.IsBouncedMessage(EasyMailDiscussion.Common.IndexedMimeMessage)">
      <apidata name="IsBouncedMessage" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="message">
          <type api="T:EasyMailDiscussion.Common.IndexedMimeMessage" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="easy-mail-discussion-common" module="easy-mail-discussion-common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:EasyMailDiscussion.Common" />
        <type api="T:EasyMailDiscussion.Common.EmailHelper" ref="true" />
      </containers>
    </api>
    <api id="P:EasyMailDiscussion.Common.EmailHelper.MailEmailTemplate">
      <apidata name="MailEmailTemplate" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_MailEmailTemplate" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="easy-mail-discussion-common" module="easy-mail-discussion-common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:EasyMailDiscussion.Common" />
        <type api="T:EasyMailDiscussion.Common.EmailHelper" ref="true" />
      </containers>
    </api>
    <api id="M:EasyMailDiscussion.Common.EmailHelper.RelayEmail(EasyMailDiscussion.Common.Database.DiscussionList,EasyMailDiscussion.Common.Database.Contact,EasyMailDiscussion.Common.Database.Message,EasyMailDiscussion.Common.Database.SqliteDatabase,MailKit.Net.Smtp.SmtpClient,System.Threading.CancellationToken)">
      <apidata name="RelayEmail" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="discussionList">
          <type api="T:EasyMailDiscussion.Common.Database.DiscussionList" ref="true" />
        </parameter>
        <parameter name="recipient">
          <type api="T:EasyMailDiscussion.Common.Database.Contact" ref="true" />
        </parameter>
        <parameter name="message">
          <type api="T:EasyMailDiscussion.Common.Database.Message" ref="true" />
        </parameter>
        <parameter name="database">
          <type api="T:EasyMailDiscussion.Common.Database.SqliteDatabase" ref="true" />
        </parameter>
        <parameter name="client">
          <type api="T:MailKit.Net.Smtp.SmtpClient" ref="true" />
        </parameter>
        <parameter name="stoppingToken" optional="true">
          <type api="T:System.Threading.CancellationToken" ref="false" />
          <argument>
            <type api="T:System.Threading.CancellationToken" ref="false" />
            <defaultValue />
          </argument>
        </parameter>
      </parameters>
      <containers>
        <library assembly="easy-mail-discussion-common" module="easy-mail-discussion-common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:EasyMailDiscussion.Common" />
        <type api="T:EasyMailDiscussion.Common.EmailHelper" ref="true" />
      </containers>
    </api>
    <api id="M:EasyMailDiscussion.Common.EmailHelper.SendEmail(EasyMailDiscussion.Common.Database.DiscussionList,EasyMailDiscussion.Common.Database.Contact,System.String,System.String,System.Func{MimeKit.MimeEntity},MailKit.Net.Smtp.SmtpClient,System.Threading.CancellationToken)">
      <apidata name="SendEmail" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="discussionList">
          <type api="T:EasyMailDiscussion.Common.Database.DiscussionList" ref="true" />
        </parameter>
        <parameter name="recipient">
          <type api="T:EasyMailDiscussion.Common.Database.Contact" ref="true" />
        </parameter>
        <parameter name="subject">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="replyTo">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="bodyGenerator">
          <type api="T:System.Func`1" ref="true">
            <specialization>
              <type api="T:MimeKit.MimeEntity" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="client">
          <type api="T:MailKit.Net.Smtp.SmtpClient" ref="true" />
        </parameter>
        <parameter name="cancellationToken" optional="true">
          <type api="T:System.Threading.CancellationToken" ref="false" />
          <argument>
            <type api="T:System.Threading.CancellationToken" ref="false" />
            <defaultValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:MimeKit.MimeMessage" ref="true" />
      </returns>
      <containers>
        <library assembly="easy-mail-discussion-common" module="easy-mail-discussion-common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:EasyMailDiscussion.Common" />
        <type api="T:EasyMailDiscussion.Common.EmailHelper" ref="true" />
      </containers>
    </api>
    <api id="M:EasyMailDiscussion.Common.EmailHelper.SendOnboardingEmail(EasyMailDiscussion.Common.Database.DiscussionList,EasyMailDiscussion.Common.Database.Contact,MailKit.Net.Smtp.SmtpClient,System.Threading.CancellationToken)">
      <apidata name="SendOnboardingEmail" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="discussionList">
          <type api="T:EasyMailDiscussion.Common.Database.DiscussionList" ref="true" />
        </parameter>
        <parameter name="recipient">
          <type api="T:EasyMailDiscussion.Common.Database.Contact" ref="true" />
        </parameter>
        <parameter name="client">
          <type api="T:MailKit.Net.Smtp.SmtpClient" ref="true" />
        </parameter>
        <parameter name="cancellationToken" optional="true">
          <type api="T:System.Threading.CancellationToken" ref="false" />
          <argument>
            <type api="T:System.Threading.CancellationToken" ref="false" />
            <defaultValue />
          </argument>
        </parameter>
      </parameters>
      <containers>
        <library assembly="easy-mail-discussion-common" module="easy-mail-discussion-common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:EasyMailDiscussion.Common" />
        <type api="T:EasyMailDiscussion.Common.EmailHelper" ref="true" />
      </containers>
    </api>
    <api id="M:EasyMailDiscussion.Common.EmailHelper.SendSubscriptionConfirmationEmail(EasyMailDiscussion.Common.Database.DiscussionList,EasyMailDiscussion.Common.Database.Contact,MailKit.Net.Smtp.SmtpClient,System.Threading.CancellationToken)">
      <apidata name="SendSubscriptionConfirmationEmail" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="discussionList">
          <type api="T:EasyMailDiscussion.Common.Database.DiscussionList" ref="true" />
        </parameter>
        <parameter name="recipient">
          <type api="T:EasyMailDiscussion.Common.Database.Contact" ref="true" />
        </parameter>
        <parameter name="client">
          <type api="T:MailKit.Net.Smtp.SmtpClient" ref="true" />
        </parameter>
        <parameter name="cancellationToken" optional="true">
          <type api="T:System.Threading.CancellationToken" ref="false" />
          <argument>
            <type api="T:System.Threading.CancellationToken" ref="false" />
            <defaultValue />
          </argument>
        </parameter>
      </parameters>
      <containers>
        <library assembly="easy-mail-discussion-common" module="easy-mail-discussion-common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:EasyMailDiscussion.Common" />
        <type api="T:EasyMailDiscussion.Common.EmailHelper" ref="true" />
      </containers>
    </api>
    <api id="M:EasyMailDiscussion.Common.EmailHelper.SendUnsubscriptionConfirmationEmail(EasyMailDiscussion.Common.Database.DiscussionList,EasyMailDiscussion.Common.Database.Contact,MailKit.Net.Smtp.SmtpClient,System.Threading.CancellationToken)">
      <apidata name="SendUnsubscriptionConfirmationEmail" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="discussionList">
          <type api="T:EasyMailDiscussion.Common.Database.DiscussionList" ref="true" />
        </parameter>
        <parameter name="recipient">
          <type api="T:EasyMailDiscussion.Common.Database.Contact" ref="true" />
        </parameter>
        <parameter name="client">
          <type api="T:MailKit.Net.Smtp.SmtpClient" ref="true" />
        </parameter>
        <parameter name="cancellationToken" optional="true">
          <type api="T:System.Threading.CancellationToken" ref="false" />
          <argument>
            <type api="T:System.Threading.CancellationToken" ref="false" />
            <defaultValue />
          </argument>
        </parameter>
      </parameters>
      <containers>
        <library assembly="easy-mail-discussion-common" module="easy-mail-discussion-common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:EasyMailDiscussion.Common" />
        <type api="T:EasyMailDiscussion.Common.EmailHelper" ref="true" />
      </containers>
    </api>
    <api id="F:EasyMailDiscussion.Common.EmailHelper.STATUS_GROUP_ACTION_DELAYED">
      <apidata name="STATUS_GROUP_ACTION_DELAYED" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <value>delayed</value>
      <containers>
        <library assembly="easy-mail-discussion-common" module="easy-mail-discussion-common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:EasyMailDiscussion.Common" />
        <type api="T:EasyMailDiscussion.Common.EmailHelper" ref="true" />
      </containers>
    </api>
    <api id="F:EasyMailDiscussion.Common.EmailHelper.STATUS_GROUP_ACTION_FAILED">
      <apidata name="STATUS_GROUP_ACTION_FAILED" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <value>failed</value>
      <containers>
        <library assembly="easy-mail-discussion-common" module="easy-mail-discussion-common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:EasyMailDiscussion.Common" />
        <type api="T:EasyMailDiscussion.Common.EmailHelper" ref="true" />
      </containers>
    </api>
    <api id="T:EasyMailDiscussion.Common.HTMLCleaner">
      <apidata name="HTMLCleaner" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:EasyMailDiscussion.Common.HTMLCleaner.RemoveInlineCSS(System.String)" />
      </elements>
      <containers>
        <library assembly="easy-mail-discussion-common" module="easy-mail-discussion-common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:EasyMailDiscussion.Common" />
      </containers>
    </api>
    <api id="M:EasyMailDiscussion.Common.HTMLCleaner.RemoveInlineCSS(System.String)">
      <apidata name="RemoveInlineCSS" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="html">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="easy-mail-discussion-common" module="easy-mail-discussion-common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:EasyMailDiscussion.Common" />
        <type api="T:EasyMailDiscussion.Common.HTMLCleaner" ref="true" />
      </containers>
    </api>
    <api id="T:EasyMailDiscussion.Common.IndexedMimeMessage">
      <apidata name="IndexedMimeMessage" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:EasyMailDiscussion.Common.IndexedMimeMessage.IndexMimeMessage(System.Int32,MimeKit.MimeMessage)" />
        <element api="M:EasyMailDiscussion.Common.IndexedMimeMessage.Equals(System.Object)" />
        <element api="M:EasyMailDiscussion.Common.IndexedMimeMessage.GetHashCode" />
        <element api="P:EasyMailDiscussion.Common.IndexedMimeMessage.Index" />
        <element api="P:EasyMailDiscussion.Common.IndexedMimeMessage.Message" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="easy-mail-discussion-common" module="easy-mail-discussion-common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:EasyMailDiscussion.Common" />
      </containers>
    </api>
    <api id="M:EasyMailDiscussion.Common.IndexedMimeMessage.Equals(System.Object)">
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.Equals(System.Object)">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="obj">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="easy-mail-discussion-common" module="easy-mail-discussion-common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:EasyMailDiscussion.Common" />
        <type api="T:EasyMailDiscussion.Common.IndexedMimeMessage" ref="true" />
      </containers>
    </api>
    <api id="M:EasyMailDiscussion.Common.IndexedMimeMessage.GetHashCode">
      <apidata name="GetHashCode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.GetHashCode">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="easy-mail-discussion-common" module="easy-mail-discussion-common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:EasyMailDiscussion.Common" />
        <type api="T:EasyMailDiscussion.Common.IndexedMimeMessage" ref="true" />
      </containers>
    </api>
    <api id="P:EasyMailDiscussion.Common.IndexedMimeMessage.Index">
      <apidata name="Index" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Index" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="easy-mail-discussion-common" module="easy-mail-discussion-common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:EasyMailDiscussion.Common" />
        <type api="T:EasyMailDiscussion.Common.IndexedMimeMessage" ref="true" />
      </containers>
    </api>
    <api id="M:EasyMailDiscussion.Common.IndexedMimeMessage.IndexMimeMessage(System.Int32,MimeKit.MimeMessage)">
      <apidata name="IndexMimeMessage" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="originalMessage">
          <type api="T:MimeKit.MimeMessage" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:EasyMailDiscussion.Common.IndexedMimeMessage" ref="true" />
      </returns>
      <containers>
        <library assembly="easy-mail-discussion-common" module="easy-mail-discussion-common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:EasyMailDiscussion.Common" />
        <type api="T:EasyMailDiscussion.Common.IndexedMimeMessage" ref="true" />
      </containers>
    </api>
    <api id="P:EasyMailDiscussion.Common.IndexedMimeMessage.Message">
      <apidata name="Message" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Message" />
      <returns>
        <type api="T:MimeKit.MimeMessage" ref="true" />
      </returns>
      <containers>
        <library assembly="easy-mail-discussion-common" module="easy-mail-discussion-common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:EasyMailDiscussion.Common" />
        <type api="T:EasyMailDiscussion.Common.IndexedMimeMessage" ref="true" />
      </containers>
    </api>
    <api id="T:EasyMailDiscussion.Common.LINQExtensions">
      <apidata name="LINQExtensions" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:EasyMailDiscussion.Common.LINQExtensions.Page``1(System.Collections.Generic.IEnumerable{``0},System.Int32,System.Int32)" />
        <element api="M:EasyMailDiscussion.Common.LINQExtensions.Page``1(System.Linq.IQueryable{``0},System.Int32,System.Int32)" />
        <element api="M:EasyMailDiscussion.Common.LINQExtensions.PageCount``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" />
        <element api="M:EasyMailDiscussion.Common.LINQExtensions.PageCount``1(System.Linq.IQueryable{``0},System.Int32)" />
      </elements>
      <containers>
        <library assembly="easy-mail-discussion-common" module="easy-mail-discussion-common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:EasyMailDiscussion.Common" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:EasyMailDiscussion.Common.LINQExtensions.Page``1(System.Collections.Generic.IEnumerable{``0},System.Int32,System.Int32)">
      <apidata name="Page" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="T" index="0" api="M:EasyMailDiscussion.Common.LINQExtensions.Page``1(System.Collections.Generic.IEnumerable{``0},System.Int32,System.Int32)" />
            </specialization>
          </type>
        </parameter>
        <parameter name="pageNumber">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="pageSize">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <template name="T" index="0" api="M:EasyMailDiscussion.Common.LINQExtensions.Page``1(System.Collections.Generic.IEnumerable{``0},System.Int32,System.Int32)" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="easy-mail-discussion-common" module="easy-mail-discussion-common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:EasyMailDiscussion.Common" />
        <type api="T:EasyMailDiscussion.Common.LINQExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:EasyMailDiscussion.Common.LINQExtensions.Page``1(System.Linq.IQueryable{``0},System.Int32,System.Int32)">
      <apidata name="Page" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Linq.IQueryable`1" ref="true">
            <specialization>
              <template name="T" index="0" api="M:EasyMailDiscussion.Common.LINQExtensions.Page``1(System.Linq.IQueryable{``0},System.Int32,System.Int32)" />
            </specialization>
          </type>
        </parameter>
        <parameter name="pageNumber">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="pageSize">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.IQueryable`1" ref="true">
          <specialization>
            <template name="T" index="0" api="M:EasyMailDiscussion.Common.LINQExtensions.Page``1(System.Linq.IQueryable{``0},System.Int32,System.Int32)" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="easy-mail-discussion-common" module="easy-mail-discussion-common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:EasyMailDiscussion.Common" />
        <type api="T:EasyMailDiscussion.Common.LINQExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:EasyMailDiscussion.Common.LINQExtensions.PageCount``1(System.Collections.Generic.IEnumerable{``0},System.Int32)">
      <apidata name="PageCount" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="T" index="0" api="M:EasyMailDiscussion.Common.LINQExtensions.PageCount``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" />
            </specialization>
          </type>
        </parameter>
        <parameter name="pageSize">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="easy-mail-discussion-common" module="easy-mail-discussion-common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:EasyMailDiscussion.Common" />
        <type api="T:EasyMailDiscussion.Common.LINQExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:EasyMailDiscussion.Common.LINQExtensions.PageCount``1(System.Linq.IQueryable{``0},System.Int32)">
      <apidata name="PageCount" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Linq.IQueryable`1" ref="true">
            <specialization>
              <template name="T" index="0" api="M:EasyMailDiscussion.Common.LINQExtensions.PageCount``1(System.Linq.IQueryable{``0},System.Int32)" />
            </specialization>
          </type>
        </parameter>
        <parameter name="pageSize">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="easy-mail-discussion-common" module="easy-mail-discussion-common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:EasyMailDiscussion.Common" />
        <type api="T:EasyMailDiscussion.Common.LINQExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="T:EasyMailDiscussion.Common.NLogConfiguration">
      <apidata name="NLogConfiguration" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:EasyMailDiscussion.Common.NLogConfiguration.GetConfiguration(System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="easy-mail-discussion-common" module="easy-mail-discussion-common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:EasyMailDiscussion.Common" />
      </containers>
    </api>
    <api id="M:EasyMailDiscussion.Common.NLogConfiguration.GetConfiguration(System.String,System.String)">
      <apidata name="GetConfiguration" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="logLevel">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="logFilePath">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:NLog.Config.LoggingConfiguration" ref="true" />
      </returns>
      <containers>
        <library assembly="easy-mail-discussion-common" module="easy-mail-discussion-common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:EasyMailDiscussion.Common" />
        <type api="T:EasyMailDiscussion.Common.NLogConfiguration" ref="true" />
      </containers>
    </api>
    <api id="N:EasyMailDiscussion.Common.Database">
      <apidata name="EasyMailDiscussion.Common.Database" group="namespace" />
      <elements>
        <element api="T:EasyMailDiscussion.Common.Database.Contact" />
        <element api="T:EasyMailDiscussion.Common.Database.ContactSubscription" />
        <element api="T:EasyMailDiscussion.Common.Database.DiscussionList" />
        <element api="T:EasyMailDiscussion.Common.Database.Message" />
        <element api="T:EasyMailDiscussion.Common.Database.RelayIdentifier" />
        <element api="T:EasyMailDiscussion.Common.Database.SqliteDatabase" />
        <element api="T:EasyMailDiscussion.Common.Database.SubscriptionStatus" />
      </elements>
    </api>
    <api id="T:EasyMailDiscussion.Common.Database.Contact">
      <apidata name="Contact" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:EasyMailDiscussion.Common.Database.Contact.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:EasyMailDiscussion.Common.Database.Contact.#ctor" />
        <element api="P:EasyMailDiscussion.Common.Database.Contact.ID" />
        <element api="P:EasyMailDiscussion.Common.Database.Contact.Name" />
        <element api="P:EasyMailDiscussion.Common.Database.Contact.Email" />
        <element api="P:EasyMailDiscussion.Common.Database.Contact.Activated" />
        <element api="P:EasyMailDiscussion.Common.Database.Contact.ContactSubscriptions" />
        <element api="P:EasyMailDiscussion.Common.Database.Contact.Messages" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="easy-mail-discussion-common" module="easy-mail-discussion-common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:EasyMailDiscussion.Common.Database" />
      </containers>
    </api>
    <api id="M:EasyMailDiscussion.Common.Database.Contact.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="easy-mail-discussion-common" module="easy-mail-discussion-common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:EasyMailDiscussion.Common.Database" />
        <type api="T:EasyMailDiscussion.Common.Database.Contact" ref="true" />
      </containers>
    </api>
    <api id="P:EasyMailDiscussion.Common.Database.Contact.Activated">
      <apidata name="Activated" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Activated" />
      <setter name="set_Activated" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="easy-mail-discussion-common" module="easy-mail-discussion-common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:EasyMailDiscussion.Common.Database" />
        <type api="T:EasyMailDiscussion.Common.Database.Contact" ref="true" />
      </containers>
    </api>
    <api id="P:EasyMailDiscussion.Common.Database.Contact.ContactSubscriptions">
      <apidata name="ContactSubscriptions" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_ContactSubscriptions" />
      <setter name="set_ContactSubscriptions" />
      <returns>
        <type api="T:System.Collections.Generic.ICollection`1" ref="true">
          <specialization>
            <type api="T:EasyMailDiscussion.Common.Database.ContactSubscription" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="easy-mail-discussion-common" module="easy-mail-discussion-common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:EasyMailDiscussion.Common.Database" />
        <type api="T:EasyMailDiscussion.Common.Database.Contact" ref="true" />
      </containers>
    </api>
    <api id="P:EasyMailDiscussion.Common.Database.Contact.Email">
      <apidata name="Email" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Email" />
      <setter name="set_Email" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="easy-mail-discussion-common" module="easy-mail-discussion-common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:EasyMailDiscussion.Common.Database" />
        <type api="T:EasyMailDiscussion.Common.Database.Contact" ref="true" />
      </containers>
    </api>
    <api id="P:EasyMailDiscussion.Common.Database.Contact.ID">
      <apidata name="ID" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ID" />
      <setter name="set_ID" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="easy-mail-discussion-common" module="easy-mail-discussion-common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:EasyMailDiscussion.Common.Database" />
        <type api="T:EasyMailDiscussion.Common.Database.Contact" ref="true" />
      </containers>
    </api>
    <api id="P:EasyMailDiscussion.Common.Database.Contact.Messages">
      <apidata name="Messages" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_Messages" />
      <setter name="set_Messages" />
      <returns>
        <type api="T:System.Collections.Generic.ICollection`1" ref="true">
          <specialization>
            <type api="T:EasyMailDiscussion.Common.Database.Message" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="easy-mail-discussion-common" module="easy-mail-discussion-common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:EasyMailDiscussion.Common.Database" />
        <type api="T:EasyMailDiscussion.Common.Database.Contact" ref="true" />
      </containers>
    </api>
    <api id="P:EasyMailDiscussion.Common.Database.Contact.Name">
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Name" />
      <setter name="set_Name" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="easy-mail-discussion-common" module="easy-mail-discussion-common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:EasyMailDiscussion.Common.Database" />
        <type api="T:EasyMailDiscussion.Common.Database.Contact" ref="true" />
      </containers>
    </api>
    <api id="T:EasyMailDiscussion.Common.Database.ContactSubscription">
      <apidata name="ContactSubscription" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:EasyMailDiscussion.Common.Database.ContactSubscription.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:EasyMailDiscussion.Common.Database.ContactSubscription.#ctor" />
        <element api="P:EasyMailDiscussion.Common.Database.ContactSubscription.ID" />
        <element api="P:EasyMailDiscussion.Common.Database.ContactSubscription.DiscussionListID" />
        <element api="P:EasyMailDiscussion.Common.Database.ContactSubscription.ContactID" />
        <element api="P:EasyMailDiscussion.Common.Database.ContactSubscription.Contact" />
        <element api="P:EasyMailDiscussion.Common.Database.ContactSubscription.Status" />
        <element api="P:EasyMailDiscussion.Common.Database.ContactSubscription.DiscussionList" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="easy-mail-discussion-common" module="easy-mail-discussion-common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:EasyMailDiscussion.Common.Database" />
      </containers>
    </api>
    <api id="M:EasyMailDiscussion.Common.Database.ContactSubscription.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="easy-mail-discussion-common" module="easy-mail-discussion-common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:EasyMailDiscussion.Common.Database" />
        <type api="T:EasyMailDiscussion.Common.Database.ContactSubscription" ref="true" />
      </containers>
    </api>
    <api id="P:EasyMailDiscussion.Common.Database.ContactSubscription.Contact">
      <apidata name="Contact" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_Contact" />
      <setter name="set_Contact" />
      <returns>
        <type api="T:EasyMailDiscussion.Common.Database.Contact" ref="true" />
      </returns>
      <containers>
        <library assembly="easy-mail-discussion-common" module="easy-mail-discussion-common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:EasyMailDiscussion.Common.Database" />
        <type api="T:EasyMailDiscussion.Common.Database.ContactSubscription" ref="true" />
      </containers>
    </api>
    <api id="P:EasyMailDiscussion.Common.Database.ContactSubscription.ContactID">
      <apidata name="ContactID" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ContactID" />
      <setter name="set_ContactID" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="easy-mail-discussion-common" module="easy-mail-discussion-common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:EasyMailDiscussion.Common.Database" />
        <type api="T:EasyMailDiscussion.Common.Database.ContactSubscription" ref="true" />
      </containers>
    </api>
    <api id="P:EasyMailDiscussion.Common.Database.ContactSubscription.DiscussionList">
      <apidata name="DiscussionList" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_DiscussionList" />
      <setter name="set_DiscussionList" />
      <returns>
        <type api="T:EasyMailDiscussion.Common.Database.DiscussionList" ref="true" />
      </returns>
      <containers>
        <library assembly="easy-mail-discussion-common" module="easy-mail-discussion-common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:EasyMailDiscussion.Common.Database" />
        <type api="T:EasyMailDiscussion.Common.Database.ContactSubscription" ref="true" />
      </containers>
    </api>
    <api id="P:EasyMailDiscussion.Common.Database.ContactSubscription.DiscussionListID">
      <apidata name="DiscussionListID" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_DiscussionListID" />
      <setter name="set_DiscussionListID" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="easy-mail-discussion-common" module="easy-mail-discussion-common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:EasyMailDiscussion.Common.Database" />
        <type api="T:EasyMailDiscussion.Common.Database.ContactSubscription" ref="true" />
      </containers>
    </api>
    <api id="P:EasyMailDiscussion.Common.Database.ContactSubscription.ID">
      <apidata name="ID" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ID" />
      <setter name="set_ID" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="easy-mail-discussion-common" module="easy-mail-discussion-common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:EasyMailDiscussion.Common.Database" />
        <type api="T:EasyMailDiscussion.Common.Database.ContactSubscription" ref="true" />
      </containers>
    </api>
    <api id="P:EasyMailDiscussion.Common.Database.ContactSubscription.Status">
      <apidata name="Status" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Status" />
      <setter name="set_Status" />
      <returns>
        <type api="T:EasyMailDiscussion.Common.Database.SubscriptionStatus" ref="false" />
      </returns>
      <containers>
        <library assembly="easy-mail-discussion-common" module="easy-mail-discussion-common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:EasyMailDiscussion.Common.Database" />
        <type api="T:EasyMailDiscussion.Common.Database.ContactSubscription" ref="true" />
      </containers>
    </api>
    <api id="T:EasyMailDiscussion.Common.Database.DiscussionList">
      <apidata name="DiscussionList" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:EasyMailDiscussion.Common.Database.DiscussionList.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:EasyMailDiscussion.Common.Database.DiscussionList.#ctor" />
        <element api="P:EasyMailDiscussion.Common.Database.DiscussionList.ID" />
        <element api="P:EasyMailDiscussion.Common.Database.DiscussionList.Name" />
        <element api="P:EasyMailDiscussion.Common.Database.DiscussionList.Description" />
        <element api="P:EasyMailDiscussion.Common.Database.DiscussionList.BaseEmailAddress" />
        <element api="P:EasyMailDiscussion.Common.Database.DiscussionList.UserName" />
        <element api="P:EasyMailDiscussion.Common.Database.DiscussionList.Password" />
        <element api="P:EasyMailDiscussion.Common.Database.DiscussionList.IncomingMailServer" />
        <element api="P:EasyMailDiscussion.Common.Database.DiscussionList.IncomingMailPort" />
        <element api="P:EasyMailDiscussion.Common.Database.DiscussionList.OutgoingMailServer" />
        <element api="P:EasyMailDiscussion.Common.Database.DiscussionList.OutgoingMailPort" />
        <element api="P:EasyMailDiscussion.Common.Database.DiscussionList.UseSSL" />
        <element api="P:EasyMailDiscussion.Common.Database.DiscussionList.Subscriptions" />
        <element api="P:EasyMailDiscussion.Common.Database.DiscussionList.Messages" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="easy-mail-discussion-common" module="easy-mail-discussion-common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:EasyMailDiscussion.Common.Database" />
      </containers>
    </api>
    <api id="M:EasyMailDiscussion.Common.Database.DiscussionList.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="easy-mail-discussion-common" module="easy-mail-discussion-common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:EasyMailDiscussion.Common.Database" />
        <type api="T:EasyMailDiscussion.Common.Database.DiscussionList" ref="true" />
      </containers>
    </api>
    <api id="P:EasyMailDiscussion.Common.Database.DiscussionList.BaseEmailAddress">
      <apidata name="BaseEmailAddress" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_BaseEmailAddress" />
      <setter name="set_BaseEmailAddress" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="easy-mail-discussion-common" module="easy-mail-discussion-common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:EasyMailDiscussion.Common.Database" />
        <type api="T:EasyMailDiscussion.Common.Database.DiscussionList" ref="true" />
      </containers>
    </api>
    <api id="P:EasyMailDiscussion.Common.Database.DiscussionList.Description">
      <apidata name="Description" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Description" />
      <setter name="set_Description" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="easy-mail-discussion-common" module="easy-mail-discussion-common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:EasyMailDiscussion.Common.Database" />
        <type api="T:EasyMailDiscussion.Common.Database.DiscussionList" ref="true" />
      </containers>
    </api>
    <api id="P:EasyMailDiscussion.Common.Database.DiscussionList.ID">
      <apidata name="ID" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ID" />
      <setter name="set_ID" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="easy-mail-discussion-common" module="easy-mail-discussion-common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:EasyMailDiscussion.Common.Database" />
        <type api="T:EasyMailDiscussion.Common.Database.DiscussionList" ref="true" />
      </containers>
    </api>
    <api id="P:EasyMailDiscussion.Common.Database.DiscussionList.IncomingMailPort">
      <apidata name="IncomingMailPort" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_IncomingMailPort" />
      <setter name="set_IncomingMailPort" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="easy-mail-discussion-common" module="easy-mail-discussion-common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:EasyMailDiscussion.Common.Database" />
        <type api="T:EasyMailDiscussion.Common.Database.DiscussionList" ref="true" />
      </containers>
    </api>
    <api id="P:EasyMailDiscussion.Common.Database.DiscussionList.IncomingMailServer">
      <apidata name="IncomingMailServer" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_IncomingMailServer" />
      <setter name="set_IncomingMailServer" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="easy-mail-discussion-common" module="easy-mail-discussion-common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:EasyMailDiscussion.Common.Database" />
        <type api="T:EasyMailDiscussion.Common.Database.DiscussionList" ref="true" />
      </containers>
    </api>
    <api id="P:EasyMailDiscussion.Common.Database.DiscussionList.Messages">
      <apidata name="Messages" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_Messages" />
      <setter name="set_Messages" />
      <returns>
        <type api="T:System.Collections.Generic.ICollection`1" ref="true">
          <specialization>
            <type api="T:EasyMailDiscussion.Common.Database.Message" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="easy-mail-discussion-common" module="easy-mail-discussion-common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:EasyMailDiscussion.Common.Database" />
        <type api="T:EasyMailDiscussion.Common.Database.DiscussionList" ref="true" />
      </containers>
    </api>
    <api id="P:EasyMailDiscussion.Common.Database.DiscussionList.Name">
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Name" />
      <setter name="set_Name" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="easy-mail-discussion-common" module="easy-mail-discussion-common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:EasyMailDiscussion.Common.Database" />
        <type api="T:EasyMailDiscussion.Common.Database.DiscussionList" ref="true" />
      </containers>
    </api>
    <api id="P:EasyMailDiscussion.Common.Database.DiscussionList.OutgoingMailPort">
      <apidata name="OutgoingMailPort" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_OutgoingMailPort" />
      <setter name="set_OutgoingMailPort" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="easy-mail-discussion-common" module="easy-mail-discussion-common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:EasyMailDiscussion.Common.Database" />
        <type api="T:EasyMailDiscussion.Common.Database.DiscussionList" ref="true" />
      </containers>
    </api>
    <api id="P:EasyMailDiscussion.Common.Database.DiscussionList.OutgoingMailServer">
      <apidata name="OutgoingMailServer" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_OutgoingMailServer" />
      <setter name="set_OutgoingMailServer" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="easy-mail-discussion-common" module="easy-mail-discussion-common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:EasyMailDiscussion.Common.Database" />
        <type api="T:EasyMailDiscussion.Common.Database.DiscussionList" ref="true" />
      </containers>
    </api>
    <api id="P:EasyMailDiscussion.Common.Database.DiscussionList.Password">
      <apidata name="Password" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Password" />
      <setter name="set_Password" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="easy-mail-discussion-common" module="easy-mail-discussion-common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:EasyMailDiscussion.Common.Database" />
        <type api="T:EasyMailDiscussion.Common.Database.DiscussionList" ref="true" />
      </containers>
    </api>
    <api id="P:EasyMailDiscussion.Common.Database.DiscussionList.Subscriptions">
      <apidata name="Subscriptions" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_Subscriptions" />
      <setter name="set_Subscriptions" />
      <returns>
        <type api="T:System.Collections.Generic.ICollection`1" ref="true">
          <specialization>
            <type api="T:EasyMailDiscussion.Common.Database.ContactSubscription" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="easy-mail-discussion-common" module="easy-mail-discussion-common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:EasyMailDiscussion.Common.Database" />
        <type api="T:EasyMailDiscussion.Common.Database.DiscussionList" ref="true" />
      </containers>
    </api>
    <api id="P:EasyMailDiscussion.Common.Database.DiscussionList.UserName">
      <apidata name="UserName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_UserName" />
      <setter name="set_UserName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="easy-mail-discussion-common" module="easy-mail-discussion-common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:EasyMailDiscussion.Common.Database" />
        <type api="T:EasyMailDiscussion.Common.Database.DiscussionList" ref="true" />
      </containers>
    </api>
    <api id="P:EasyMailDiscussion.Common.Database.DiscussionList.UseSSL">
      <apidata name="UseSSL" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_UseSSL" />
      <setter name="set_UseSSL" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="easy-mail-discussion-common" module="easy-mail-discussion-common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:EasyMailDiscussion.Common.Database" />
        <type api="T:EasyMailDiscussion.Common.Database.DiscussionList" ref="true" />
      </containers>
    </api>
    <api id="T:EasyMailDiscussion.Common.Database.Message">
      <apidata name="Message" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:EasyMailDiscussion.Common.Database.Message.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:EasyMailDiscussion.Common.Database.Message.#ctor" />
        <element api="P:EasyMailDiscussion.Common.Database.Message.ID" />
        <element api="P:EasyMailDiscussion.Common.Database.Message.EmailID" />
        <element api="P:EasyMailDiscussion.Common.Database.Message.ParentID" />
        <element api="P:EasyMailDiscussion.Common.Database.Message.DiscussionListID" />
        <element api="P:EasyMailDiscussion.Common.Database.Message.Raw" />
        <element api="P:EasyMailDiscussion.Common.Database.Message.Subject" />
        <element api="P:EasyMailDiscussion.Common.Database.Message.BodyRaw" />
        <element api="P:EasyMailDiscussion.Common.Database.Message.BodyHTML" />
        <element api="P:EasyMailDiscussion.Common.Database.Message.BodyText" />
        <element api="P:EasyMailDiscussion.Common.Database.Message.Recieved" />
        <element api="P:EasyMailDiscussion.Common.Database.Message.OriginatorContactID" />
        <element api="P:EasyMailDiscussion.Common.Database.Message.Parent" />
        <element api="P:EasyMailDiscussion.Common.Database.Message.Children" />
        <element api="P:EasyMailDiscussion.Common.Database.Message.RelayIdentifiers" />
        <element api="P:EasyMailDiscussion.Common.Database.Message.OriginatorContact" />
        <element api="P:EasyMailDiscussion.Common.Database.Message.DiscussionList" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="easy-mail-discussion-common" module="easy-mail-discussion-common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:EasyMailDiscussion.Common.Database" />
      </containers>
    </api>
    <api id="M:EasyMailDiscussion.Common.Database.Message.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="easy-mail-discussion-common" module="easy-mail-discussion-common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:EasyMailDiscussion.Common.Database" />
        <type api="T:EasyMailDiscussion.Common.Database.Message" ref="true" />
      </containers>
    </api>
    <api id="P:EasyMailDiscussion.Common.Database.Message.BodyHTML">
      <apidata name="BodyHTML" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_BodyHTML" />
      <setter name="set_BodyHTML" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="easy-mail-discussion-common" module="easy-mail-discussion-common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:EasyMailDiscussion.Common.Database" />
        <type api="T:EasyMailDiscussion.Common.Database.Message" ref="true" />
      </containers>
    </api>
    <api id="P:EasyMailDiscussion.Common.Database.Message.BodyRaw">
      <apidata name="BodyRaw" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_BodyRaw" />
      <setter name="set_BodyRaw" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="easy-mail-discussion-common" module="easy-mail-discussion-common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:EasyMailDiscussion.Common.Database" />
        <type api="T:EasyMailDiscussion.Common.Database.Message" ref="true" />
      </containers>
    </api>
    <api id="P:EasyMailDiscussion.Common.Database.Message.BodyText">
      <apidata name="BodyText" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_BodyText" />
      <setter name="set_BodyText" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="easy-mail-discussion-common" module="easy-mail-discussion-common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:EasyMailDiscussion.Common.Database" />
        <type api="T:EasyMailDiscussion.Common.Database.Message" ref="true" />
      </containers>
    </api>
    <api id="P:EasyMailDiscussion.Common.Database.Message.Children">
      <apidata name="Children" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_Children" />
      <setter name="set_Children" />
      <returns>
        <type api="T:System.Collections.Generic.ICollection`1" ref="true">
          <specialization>
            <type api="T:EasyMailDiscussion.Common.Database.Message" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="easy-mail-discussion-common" module="easy-mail-discussion-common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:EasyMailDiscussion.Common.Database" />
        <type api="T:EasyMailDiscussion.Common.Database.Message" ref="true" />
      </containers>
    </api>
    <api id="P:EasyMailDiscussion.Common.Database.Message.DiscussionList">
      <apidata name="DiscussionList" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_DiscussionList" />
      <setter name="set_DiscussionList" />
      <returns>
        <type api="T:EasyMailDiscussion.Common.Database.DiscussionList" ref="true" />
      </returns>
      <containers>
        <library assembly="easy-mail-discussion-common" module="easy-mail-discussion-common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:EasyMailDiscussion.Common.Database" />
        <type api="T:EasyMailDiscussion.Common.Database.Message" ref="true" />
      </containers>
    </api>
    <api id="P:EasyMailDiscussion.Common.Database.Message.DiscussionListID">
      <apidata name="DiscussionListID" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_DiscussionListID" />
      <setter name="set_DiscussionListID" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="easy-mail-discussion-common" module="easy-mail-discussion-common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:EasyMailDiscussion.Common.Database" />
        <type api="T:EasyMailDiscussion.Common.Database.Message" ref="true" />
      </containers>
    </api>
    <api id="P:EasyMailDiscussion.Common.Database.Message.EmailID">
      <apidata name="EmailID" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_EmailID" />
      <setter name="set_EmailID" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="easy-mail-discussion-common" module="easy-mail-discussion-common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:EasyMailDiscussion.Common.Database" />
        <type api="T:EasyMailDiscussion.Common.Database.Message" ref="true" />
      </containers>
    </api>
    <api id="P:EasyMailDiscussion.Common.Database.Message.ID">
      <apidata name="ID" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ID" />
      <setter name="set_ID" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="easy-mail-discussion-common" module="easy-mail-discussion-common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:EasyMailDiscussion.Common.Database" />
        <type api="T:EasyMailDiscussion.Common.Database.Message" ref="true" />
      </containers>
    </api>
    <api id="P:EasyMailDiscussion.Common.Database.Message.OriginatorContact">
      <apidata name="OriginatorContact" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_OriginatorContact" />
      <setter name="set_OriginatorContact" />
      <returns>
        <type api="T:EasyMailDiscussion.Common.Database.Contact" ref="true" />
      </returns>
      <containers>
        <library assembly="easy-mail-discussion-common" module="easy-mail-discussion-common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:EasyMailDiscussion.Common.Database" />
        <type api="T:EasyMailDiscussion.Common.Database.Message" ref="true" />
      </containers>
    </api>
    <api id="P:EasyMailDiscussion.Common.Database.Message.OriginatorContactID">
      <apidata name="OriginatorContactID" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_OriginatorContactID" />
      <setter name="set_OriginatorContactID" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="easy-mail-discussion-common" module="easy-mail-discussion-common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:EasyMailDiscussion.Common.Database" />
        <type api="T:EasyMailDiscussion.Common.Database.Message" ref="true" />
      </containers>
    </api>
    <api id="P:EasyMailDiscussion.Common.Database.Message.Parent">
      <apidata name="Parent" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_Parent" />
      <setter name="set_Parent" />
      <returns>
        <type api="T:EasyMailDiscussion.Common.Database.Message" ref="true" />
      </returns>
      <containers>
        <library assembly="easy-mail-discussion-common" module="easy-mail-discussion-common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:EasyMailDiscussion.Common.Database" />
        <type api="T:EasyMailDiscussion.Common.Database.Message" ref="true" />
      </containers>
    </api>
    <api id="P:EasyMailDiscussion.Common.Database.Message.ParentID">
      <apidata name="ParentID" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ParentID" />
      <setter name="set_ParentID" />
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.Int32" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="easy-mail-discussion-common" module="easy-mail-discussion-common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:EasyMailDiscussion.Common.Database" />
        <type api="T:EasyMailDiscussion.Common.Database.Message" ref="true" />
      </containers>
    </api>
    <api id="P:EasyMailDiscussion.Common.Database.Message.Raw">
      <apidata name="Raw" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Raw" />
      <setter name="set_Raw" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="easy-mail-discussion-common" module="easy-mail-discussion-common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:EasyMailDiscussion.Common.Database" />
        <type api="T:EasyMailDiscussion.Common.Database.Message" ref="true" />
      </containers>
    </api>
    <api id="P:EasyMailDiscussion.Common.Database.Message.Recieved">
      <apidata name="Recieved" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Recieved" />
      <setter name="set_Recieved" />
      <returns>
        <type api="T:System.DateTime" ref="false" />
      </returns>
      <containers>
        <library assembly="easy-mail-discussion-common" module="easy-mail-discussion-common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:EasyMailDiscussion.Common.Database" />
        <type api="T:EasyMailDiscussion.Common.Database.Message" ref="true" />
      </containers>
    </api>
    <api id="P:EasyMailDiscussion.Common.Database.Message.RelayIdentifiers">
      <apidata name="RelayIdentifiers" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_RelayIdentifiers" />
      <setter name="set_RelayIdentifiers" />
      <returns>
        <type api="T:System.Collections.Generic.ICollection`1" ref="true">
          <specialization>
            <type api="T:EasyMailDiscussion.Common.Database.RelayIdentifier" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="easy-mail-discussion-common" module="easy-mail-discussion-common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:EasyMailDiscussion.Common.Database" />
        <type api="T:EasyMailDiscussion.Common.Database.Message" ref="true" />
      </containers>
    </api>
    <api id="P:EasyMailDiscussion.Common.Database.Message.Subject">
      <apidata name="Subject" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Subject" />
      <setter name="set_Subject" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="easy-mail-discussion-common" module="easy-mail-discussion-common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:EasyMailDiscussion.Common.Database" />
        <type api="T:EasyMailDiscussion.Common.Database.Message" ref="true" />
      </containers>
    </api>
    <api id="T:EasyMailDiscussion.Common.Database.RelayIdentifier">
      <apidata name="RelayIdentifier" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:EasyMailDiscussion.Common.Database.RelayIdentifier.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:EasyMailDiscussion.Common.Database.RelayIdentifier.#ctor" />
        <element api="P:EasyMailDiscussion.Common.Database.RelayIdentifier.ID" />
        <element api="P:EasyMailDiscussion.Common.Database.RelayIdentifier.MessageID" />
        <element api="P:EasyMailDiscussion.Common.Database.RelayIdentifier.RelayEmailID" />
        <element api="P:EasyMailDiscussion.Common.Database.RelayIdentifier.Message" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="easy-mail-discussion-common" module="easy-mail-discussion-common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:EasyMailDiscussion.Common.Database" />
      </containers>
    </api>
    <api id="M:EasyMailDiscussion.Common.Database.RelayIdentifier.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="easy-mail-discussion-common" module="easy-mail-discussion-common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:EasyMailDiscussion.Common.Database" />
        <type api="T:EasyMailDiscussion.Common.Database.RelayIdentifier" ref="true" />
      </containers>
    </api>
    <api id="P:EasyMailDiscussion.Common.Database.RelayIdentifier.ID">
      <apidata name="ID" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ID" />
      <setter name="set_ID" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="easy-mail-discussion-common" module="easy-mail-discussion-common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:EasyMailDiscussion.Common.Database" />
        <type api="T:EasyMailDiscussion.Common.Database.RelayIdentifier" ref="true" />
      </containers>
    </api>
    <api id="P:EasyMailDiscussion.Common.Database.RelayIdentifier.Message">
      <apidata name="Message" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_Message" />
      <setter name="set_Message" />
      <returns>
        <type api="T:EasyMailDiscussion.Common.Database.Message" ref="true" />
      </returns>
      <containers>
        <library assembly="easy-mail-discussion-common" module="easy-mail-discussion-common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:EasyMailDiscussion.Common.Database" />
        <type api="T:EasyMailDiscussion.Common.Database.RelayIdentifier" ref="true" />
      </containers>
    </api>
    <api id="P:EasyMailDiscussion.Common.Database.RelayIdentifier.MessageID">
      <apidata name="MessageID" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_MessageID" />
      <setter name="set_MessageID" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="easy-mail-discussion-common" module="easy-mail-discussion-common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:EasyMailDiscussion.Common.Database" />
        <type api="T:EasyMailDiscussion.Common.Database.RelayIdentifier" ref="true" />
      </containers>
    </api>
    <api id="P:EasyMailDiscussion.Common.Database.RelayIdentifier.RelayEmailID">
      <apidata name="RelayEmailID" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_RelayEmailID" />
      <setter name="set_RelayEmailID" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="easy-mail-discussion-common" module="easy-mail-discussion-common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:EasyMailDiscussion.Common.Database" />
        <type api="T:EasyMailDiscussion.Common.Database.RelayIdentifier" ref="true" />
      </containers>
    </api>
    <api id="T:EasyMailDiscussion.Common.Database.SqliteDatabase">
      <apidata name="SqliteDatabase" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:Microsoft.EntityFrameworkCore.DbContext" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:EasyMailDiscussion.Common.Database.SqliteDatabase.#ctor(System.String)" />
        <element api="M:EasyMailDiscussion.Common.Database.SqliteDatabase.OnConfiguring(Microsoft.EntityFrameworkCore.DbContextOptionsBuilder)" />
        <element api="M:EasyMailDiscussion.Common.Database.SqliteDatabase.OnModelCreating(Microsoft.EntityFrameworkCore.ModelBuilder)" />
        <element api="P:EasyMailDiscussion.Common.Database.SqliteDatabase.DiscussionLists" />
        <element api="P:EasyMailDiscussion.Common.Database.SqliteDatabase.Contacts" />
        <element api="P:EasyMailDiscussion.Common.Database.SqliteDatabase.ContactSubscriptions" />
        <element api="P:EasyMailDiscussion.Common.Database.SqliteDatabase.Messages" />
        <element api="P:EasyMailDiscussion.Common.Database.SqliteDatabase.RelayIdentifiers" />
        <element api="M:Microsoft.EntityFrameworkCore.DbContext.Set``1">
          <apidata name="Set" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <templates>
            <template name="TEntity">
              <constrained ref="true" />
            </template>
          </templates>
          <returns>
            <type api="T:Microsoft.EntityFrameworkCore.DbSet`1" ref="true">
              <specialization>
                <template name="TEntity" index="0" api="M:Microsoft.EntityFrameworkCore.DbContext.Set``1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="Microsoft.EntityFrameworkCore" module="Microsoft.EntityFrameworkCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Microsoft.EntityFrameworkCore" />
            <type api="T:Microsoft.EntityFrameworkCore.DbContext" ref="true" />
          </containers>
        </element>
        <element api="M:Microsoft.EntityFrameworkCore.DbContext.Set``1(System.String)">
          <apidata name="Set" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <templates>
            <template name="TEntity">
              <constrained ref="true" />
            </template>
          </templates>
          <parameters>
            <parameter name="name">
              <type api="T:System.String" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:Microsoft.EntityFrameworkCore.DbSet`1" ref="true">
              <specialization>
                <template name="TEntity" index="0" api="M:Microsoft.EntityFrameworkCore.DbContext.Set``1(System.String)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="Microsoft.EntityFrameworkCore" module="Microsoft.EntityFrameworkCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Microsoft.EntityFrameworkCore" />
            <type api="T:Microsoft.EntityFrameworkCore.DbContext" ref="true" />
          </containers>
        </element>
        <element api="M:Microsoft.EntityFrameworkCore.DbContext.SaveChanges">
          <apidata name="SaveChanges" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="Microsoft.EntityFrameworkCore" module="Microsoft.EntityFrameworkCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Microsoft.EntityFrameworkCore" />
            <type api="T:Microsoft.EntityFrameworkCore.DbContext" ref="true" />
          </containers>
        </element>
        <element api="M:Microsoft.EntityFrameworkCore.DbContext.SaveChanges(System.Boolean)">
          <apidata name="SaveChanges" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="acceptAllChangesOnSuccess">
              <type api="T:System.Boolean" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="Microsoft.EntityFrameworkCore" module="Microsoft.EntityFrameworkCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Microsoft.EntityFrameworkCore" />
            <type api="T:Microsoft.EntityFrameworkCore.DbContext" ref="true" />
          </containers>
        </element>
        <element api="M:Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(System.Threading.CancellationToken)">
          <apidata name="SaveChangesAsync" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="cancellationToken" optional="true">
              <type api="T:System.Threading.CancellationToken" ref="false" />
              <argument>
                <type api="T:System.Threading.CancellationToken" ref="false" />
                <defaultValue />
              </argument>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Threading.Tasks.Task`1" ref="true">
              <specialization>
                <type api="T:System.Int32" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="Microsoft.EntityFrameworkCore" module="Microsoft.EntityFrameworkCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Microsoft.EntityFrameworkCore" />
            <type api="T:Microsoft.EntityFrameworkCore.DbContext" ref="true" />
          </containers>
        </element>
        <element api="M:Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(System.Boolean,System.Threading.CancellationToken)">
          <apidata name="SaveChangesAsync" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="acceptAllChangesOnSuccess">
              <type api="T:System.Boolean" ref="false" />
            </parameter>
            <parameter name="cancellationToken" optional="true">
              <type api="T:System.Threading.CancellationToken" ref="false" />
              <argument>
                <type api="T:System.Threading.CancellationToken" ref="false" />
                <defaultValue />
              </argument>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Threading.Tasks.Task`1" ref="true">
              <specialization>
                <type api="T:System.Int32" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="Microsoft.EntityFrameworkCore" module="Microsoft.EntityFrameworkCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Microsoft.EntityFrameworkCore" />
            <type api="T:Microsoft.EntityFrameworkCore.DbContext" ref="true" />
          </containers>
        </element>
        <element api="M:Microsoft.EntityFrameworkCore.DbContext.Dispose">
          <apidata name="Dispose" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <implements>
            <member api="M:System.IDisposable.Dispose">
              <type api="T:System.IDisposable" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Microsoft.EntityFrameworkCore" module="Microsoft.EntityFrameworkCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Microsoft.EntityFrameworkCore" />
            <type api="T:Microsoft.EntityFrameworkCore.DbContext" ref="true" />
          </containers>
        </element>
        <element api="M:Microsoft.EntityFrameworkCore.DbContext.DisposeAsync">
          <apidata name="DisposeAsync" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Threading.Tasks.ValueTask" ref="false" />
          </returns>
          <containers>
            <library assembly="Microsoft.EntityFrameworkCore" module="Microsoft.EntityFrameworkCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Microsoft.EntityFrameworkCore" />
            <type api="T:Microsoft.EntityFrameworkCore.DbContext" ref="true" />
          </containers>
        </element>
        <element api="M:Microsoft.EntityFrameworkCore.DbContext.Entry``1(``0)">
          <apidata name="Entry" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <templates>
            <template name="TEntity">
              <constrained ref="true" />
            </template>
          </templates>
          <parameters>
            <parameter name="entity">
              <template name="TEntity" index="0" api="M:Microsoft.EntityFrameworkCore.DbContext.Entry``1(``0)" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry`1" ref="true">
              <specialization>
                <template name="TEntity" index="0" api="M:Microsoft.EntityFrameworkCore.DbContext.Entry``1(``0)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="Microsoft.EntityFrameworkCore" module="Microsoft.EntityFrameworkCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Microsoft.EntityFrameworkCore" />
            <type api="T:Microsoft.EntityFrameworkCore.DbContext" ref="true" />
          </containers>
        </element>
        <element api="M:Microsoft.EntityFrameworkCore.DbContext.Entry(System.Object)">
          <apidata name="Entry" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="entity">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry" ref="true" />
          </returns>
          <containers>
            <library assembly="Microsoft.EntityFrameworkCore" module="Microsoft.EntityFrameworkCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Microsoft.EntityFrameworkCore" />
            <type api="T:Microsoft.EntityFrameworkCore.DbContext" ref="true" />
          </containers>
        </element>
        <element api="M:Microsoft.EntityFrameworkCore.DbContext.Add``1(``0)">
          <apidata name="Add" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <templates>
            <template name="TEntity">
              <constrained ref="true" />
            </template>
          </templates>
          <parameters>
            <parameter name="entity">
              <template name="TEntity" index="0" api="M:Microsoft.EntityFrameworkCore.DbContext.Add``1(``0)" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry`1" ref="true">
              <specialization>
                <template name="TEntity" index="0" api="M:Microsoft.EntityFrameworkCore.DbContext.Add``1(``0)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="Microsoft.EntityFrameworkCore" module="Microsoft.EntityFrameworkCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Microsoft.EntityFrameworkCore" />
            <type api="T:Microsoft.EntityFrameworkCore.DbContext" ref="true" />
          </containers>
        </element>
        <element api="M:Microsoft.EntityFrameworkCore.DbContext.Add(System.Object)">
          <apidata name="Add" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="entity">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry" ref="true" />
          </returns>
          <containers>
            <library assembly="Microsoft.EntityFrameworkCore" module="Microsoft.EntityFrameworkCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Microsoft.EntityFrameworkCore" />
            <type api="T:Microsoft.EntityFrameworkCore.DbContext" ref="true" />
          </containers>
        </element>
        <element api="M:Microsoft.EntityFrameworkCore.DbContext.AddAsync``1(System.Void,Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry{``0})">
          <apidata name="AddAsync" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <templates>
            <template name="TEntity">
              <constrained ref="true" />
            </template>
          </templates>
          <parameters>
            <parameter name="entity">
              <type api="T:System.Void" ref="false" />
            </parameter>
            <parameter name="cancellationToken" optional="true">
              <type api="T:Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry`1" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="M:Microsoft.EntityFrameworkCore.DbContext.AddAsync``1(System.Void,Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry{``0})" />
                </specialization>
              </type>
              <argument>
                <type api="T:System.Object" ref="true" />
                <nullValue />
              </argument>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Threading.Tasks.ValueTask`1" ref="false" />
          </returns>
          <containers>
            <library assembly="Microsoft.EntityFrameworkCore" module="Microsoft.EntityFrameworkCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Microsoft.EntityFrameworkCore" />
            <type api="T:Microsoft.EntityFrameworkCore.DbContext" ref="true" />
          </containers>
        </element>
        <element api="M:Microsoft.EntityFrameworkCore.DbContext.AddAsync(System.Void,Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry)">
          <apidata name="AddAsync" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="entity">
              <type api="T:System.Void" ref="false" />
            </parameter>
            <parameter name="cancellationToken" optional="true">
              <type api="T:Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry" ref="true" />
              <argument>
                <type api="T:System.Object" ref="true" />
                <nullValue />
              </argument>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Threading.Tasks.ValueTask`1" ref="false" />
          </returns>
          <containers>
            <library assembly="Microsoft.EntityFrameworkCore" module="Microsoft.EntityFrameworkCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Microsoft.EntityFrameworkCore" />
            <type api="T:Microsoft.EntityFrameworkCore.DbContext" ref="true" />
          </containers>
        </element>
        <element api="M:Microsoft.EntityFrameworkCore.DbContext.Attach``1(``0)">
          <apidata name="Attach" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <templates>
            <template name="TEntity">
              <constrained ref="true" />
            </template>
          </templates>
          <parameters>
            <parameter name="entity">
              <template name="TEntity" index="0" api="M:Microsoft.EntityFrameworkCore.DbContext.Attach``1(``0)" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry`1" ref="true">
              <specialization>
                <template name="TEntity" index="0" api="M:Microsoft.EntityFrameworkCore.DbContext.Attach``1(``0)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="Microsoft.EntityFrameworkCore" module="Microsoft.EntityFrameworkCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Microsoft.EntityFrameworkCore" />
            <type api="T:Microsoft.EntityFrameworkCore.DbContext" ref="true" />
          </containers>
        </element>
        <element api="M:Microsoft.EntityFrameworkCore.DbContext.Attach(System.Object)">
          <apidata name="Attach" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="entity">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry" ref="true" />
          </returns>
          <containers>
            <library assembly="Microsoft.EntityFrameworkCore" module="Microsoft.EntityFrameworkCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Microsoft.EntityFrameworkCore" />
            <type api="T:Microsoft.EntityFrameworkCore.DbContext" ref="true" />
          </containers>
        </element>
        <element api="M:Microsoft.EntityFrameworkCore.DbContext.Update``1(``0)">
          <apidata name="Update" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <templates>
            <template name="TEntity">
              <constrained ref="true" />
            </template>
          </templates>
          <parameters>
            <parameter name="entity">
              <template name="TEntity" index="0" api="M:Microsoft.EntityFrameworkCore.DbContext.Update``1(``0)" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry`1" ref="true">
              <specialization>
                <template name="TEntity" index="0" api="M:Microsoft.EntityFrameworkCore.DbContext.Update``1(``0)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="Microsoft.EntityFrameworkCore" module="Microsoft.EntityFrameworkCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Microsoft.EntityFrameworkCore" />
            <type api="T:Microsoft.EntityFrameworkCore.DbContext" ref="true" />
          </containers>
        </element>
        <element api="M:Microsoft.EntityFrameworkCore.DbContext.Update(System.Object)">
          <apidata name="Update" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="entity">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry" ref="true" />
          </returns>
          <containers>
            <library assembly="Microsoft.EntityFrameworkCore" module="Microsoft.EntityFrameworkCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Microsoft.EntityFrameworkCore" />
            <type api="T:Microsoft.EntityFrameworkCore.DbContext" ref="true" />
          </containers>
        </element>
        <element api="M:Microsoft.EntityFrameworkCore.DbContext.Remove``1(``0)">
          <apidata name="Remove" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <templates>
            <template name="TEntity">
              <constrained ref="true" />
            </template>
          </templates>
          <parameters>
            <parameter name="entity">
              <template name="TEntity" index="0" api="M:Microsoft.EntityFrameworkCore.DbContext.Remove``1(``0)" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry`1" ref="true">
              <specialization>
                <template name="TEntity" index="0" api="M:Microsoft.EntityFrameworkCore.DbContext.Remove``1(``0)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="Microsoft.EntityFrameworkCore" module="Microsoft.EntityFrameworkCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Microsoft.EntityFrameworkCore" />
            <type api="T:Microsoft.EntityFrameworkCore.DbContext" ref="true" />
          </containers>
        </element>
        <element api="M:Microsoft.EntityFrameworkCore.DbContext.Remove(System.Object)">
          <apidata name="Remove" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="entity">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry" ref="true" />
          </returns>
          <containers>
            <library assembly="Microsoft.EntityFrameworkCore" module="Microsoft.EntityFrameworkCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Microsoft.EntityFrameworkCore" />
            <type api="T:Microsoft.EntityFrameworkCore.DbContext" ref="true" />
          </containers>
        </element>
        <element api="M:Microsoft.EntityFrameworkCore.DbContext.AddRange(System.Object[])">
          <apidata name="AddRange" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="entities" params="true">
              <arrayOf rank="1">
                <type api="T:System.Object" ref="true" />
              </arrayOf>
            </parameter>
          </parameters>
          <containers>
            <library assembly="Microsoft.EntityFrameworkCore" module="Microsoft.EntityFrameworkCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Microsoft.EntityFrameworkCore" />
            <type api="T:Microsoft.EntityFrameworkCore.DbContext" ref="true" />
          </containers>
        </element>
        <element api="M:Microsoft.EntityFrameworkCore.DbContext.AddRange(System.Collections.Generic.IEnumerable{System.Object})">
          <apidata name="AddRange" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="entities">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Object" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <containers>
            <library assembly="Microsoft.EntityFrameworkCore" module="Microsoft.EntityFrameworkCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Microsoft.EntityFrameworkCore" />
            <type api="T:Microsoft.EntityFrameworkCore.DbContext" ref="true" />
          </containers>
        </element>
        <element api="M:Microsoft.EntityFrameworkCore.DbContext.AddRangeAsync(System.Object[])">
          <apidata name="AddRangeAsync" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="entities" params="true">
              <arrayOf rank="1">
                <type api="T:System.Object" ref="true" />
              </arrayOf>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Threading.Tasks.Task" ref="true" />
          </returns>
          <containers>
            <library assembly="Microsoft.EntityFrameworkCore" module="Microsoft.EntityFrameworkCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Microsoft.EntityFrameworkCore" />
            <type api="T:Microsoft.EntityFrameworkCore.DbContext" ref="true" />
          </containers>
        </element>
        <element api="M:Microsoft.EntityFrameworkCore.DbContext.AddRangeAsync(System.Collections.Generic.IEnumerable{System.Object},System.Threading.CancellationToken)">
          <apidata name="AddRangeAsync" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="entities">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Object" ref="true" />
                </specialization>
              </type>
            </parameter>
            <parameter name="cancellationToken" optional="true">
              <type api="T:System.Threading.CancellationToken" ref="false" />
              <argument>
                <type api="T:System.Threading.CancellationToken" ref="false" />
                <defaultValue />
              </argument>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Threading.Tasks.Task" ref="true" />
          </returns>
          <containers>
            <library assembly="Microsoft.EntityFrameworkCore" module="Microsoft.EntityFrameworkCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Microsoft.EntityFrameworkCore" />
            <type api="T:Microsoft.EntityFrameworkCore.DbContext" ref="true" />
          </containers>
        </element>
        <element api="M:Microsoft.EntityFrameworkCore.DbContext.AttachRange(System.Object[])">
          <apidata name="AttachRange" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="entities" params="true">
              <arrayOf rank="1">
                <type api="T:System.Object" ref="true" />
              </arrayOf>
            </parameter>
          </parameters>
          <containers>
            <library assembly="Microsoft.EntityFrameworkCore" module="Microsoft.EntityFrameworkCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Microsoft.EntityFrameworkCore" />
            <type api="T:Microsoft.EntityFrameworkCore.DbContext" ref="true" />
          </containers>
        </element>
        <element api="M:Microsoft.EntityFrameworkCore.DbContext.AttachRange(System.Collections.Generic.IEnumerable{System.Object})">
          <apidata name="AttachRange" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="entities">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Object" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <containers>
            <library assembly="Microsoft.EntityFrameworkCore" module="Microsoft.EntityFrameworkCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Microsoft.EntityFrameworkCore" />
            <type api="T:Microsoft.EntityFrameworkCore.DbContext" ref="true" />
          </containers>
        </element>
        <element api="M:Microsoft.EntityFrameworkCore.DbContext.UpdateRange(System.Object[])">
          <apidata name="UpdateRange" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="entities" params="true">
              <arrayOf rank="1">
                <type api="T:System.Object" ref="true" />
              </arrayOf>
            </parameter>
          </parameters>
          <containers>
            <library assembly="Microsoft.EntityFrameworkCore" module="Microsoft.EntityFrameworkCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Microsoft.EntityFrameworkCore" />
            <type api="T:Microsoft.EntityFrameworkCore.DbContext" ref="true" />
          </containers>
        </element>
        <element api="M:Microsoft.EntityFrameworkCore.DbContext.UpdateRange(System.Collections.Generic.IEnumerable{System.Object})">
          <apidata name="UpdateRange" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="entities">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Object" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <containers>
            <library assembly="Microsoft.EntityFrameworkCore" module="Microsoft.EntityFrameworkCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Microsoft.EntityFrameworkCore" />
            <type api="T:Microsoft.EntityFrameworkCore.DbContext" ref="true" />
          </containers>
        </element>
        <element api="M:Microsoft.EntityFrameworkCore.DbContext.RemoveRange(System.Object[])">
          <apidata name="RemoveRange" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="entities" params="true">
              <arrayOf rank="1">
                <type api="T:System.Object" ref="true" />
              </arrayOf>
            </parameter>
          </parameters>
          <containers>
            <library assembly="Microsoft.EntityFrameworkCore" module="Microsoft.EntityFrameworkCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Microsoft.EntityFrameworkCore" />
            <type api="T:Microsoft.EntityFrameworkCore.DbContext" ref="true" />
          </containers>
        </element>
        <element api="M:Microsoft.EntityFrameworkCore.DbContext.RemoveRange(System.Collections.Generic.IEnumerable{System.Object})">
          <apidata name="RemoveRange" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="entities">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Object" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <containers>
            <library assembly="Microsoft.EntityFrameworkCore" module="Microsoft.EntityFrameworkCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Microsoft.EntityFrameworkCore" />
            <type api="T:Microsoft.EntityFrameworkCore.DbContext" ref="true" />
          </containers>
        </element>
        <element api="M:Microsoft.EntityFrameworkCore.DbContext.Find(System.Type,System.Object[])">
          <apidata name="Find" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="entityType">
              <type api="T:System.Type" ref="true" />
            </parameter>
            <parameter name="keyValues" params="true">
              <arrayOf rank="1">
                <type api="T:System.Object" ref="true" />
              </arrayOf>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="Microsoft.EntityFrameworkCore" module="Microsoft.EntityFrameworkCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Microsoft.EntityFrameworkCore" />
            <type api="T:Microsoft.EntityFrameworkCore.DbContext" ref="true" />
          </containers>
        </element>
        <element api="M:Microsoft.EntityFrameworkCore.DbContext.Find``1(System.Object[])">
          <apidata name="Find" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <templates>
            <template name="TEntity">
              <constrained ref="true" />
            </template>
          </templates>
          <parameters>
            <parameter name="keyValues" params="true">
              <arrayOf rank="1">
                <type api="T:System.Object" ref="true" />
              </arrayOf>
            </parameter>
          </parameters>
          <returns>
            <template name="TEntity" index="0" api="M:Microsoft.EntityFrameworkCore.DbContext.Find``1(System.Object[])" />
          </returns>
          <containers>
            <library assembly="Microsoft.EntityFrameworkCore" module="Microsoft.EntityFrameworkCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Microsoft.EntityFrameworkCore" />
            <type api="T:Microsoft.EntityFrameworkCore.DbContext" ref="true" />
          </containers>
        </element>
        <element api="M:Microsoft.EntityFrameworkCore.DbContext.FindAsync(System.Void,System.Object)">
          <apidata name="FindAsync" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="entityType">
              <type api="T:System.Void" ref="false" />
            </parameter>
            <parameter name="keyValues" params="true">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Threading.Tasks.ValueTask`1" ref="false" />
          </returns>
          <containers>
            <library assembly="Microsoft.EntityFrameworkCore" module="Microsoft.EntityFrameworkCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Microsoft.EntityFrameworkCore" />
            <type api="T:Microsoft.EntityFrameworkCore.DbContext" ref="true" />
          </containers>
        </element>
        <element api="M:Microsoft.EntityFrameworkCore.DbContext.FindAsync(System.Void,System.Object,System.Type)">
          <apidata name="FindAsync" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="entityType">
              <type api="T:System.Void" ref="false" />
            </parameter>
            <parameter name="keyValues">
              <type api="T:System.Object" ref="true" />
            </parameter>
            <parameter name="cancellationToken">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Threading.Tasks.ValueTask`1" ref="false" />
          </returns>
          <containers>
            <library assembly="Microsoft.EntityFrameworkCore" module="Microsoft.EntityFrameworkCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Microsoft.EntityFrameworkCore" />
            <type api="T:Microsoft.EntityFrameworkCore.DbContext" ref="true" />
          </containers>
        </element>
        <element api="M:Microsoft.EntityFrameworkCore.DbContext.FindAsync``1(System.Void)">
          <apidata name="FindAsync" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <templates>
            <template name="TEntity">
              <constrained ref="true" />
            </template>
          </templates>
          <parameters>
            <parameter name="keyValues" params="true">
              <type api="T:System.Void" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Threading.Tasks.ValueTask`1" ref="false" />
          </returns>
          <containers>
            <library assembly="Microsoft.EntityFrameworkCore" module="Microsoft.EntityFrameworkCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Microsoft.EntityFrameworkCore" />
            <type api="T:Microsoft.EntityFrameworkCore.DbContext" ref="true" />
          </containers>
        </element>
        <element api="M:Microsoft.EntityFrameworkCore.DbContext.FindAsync``1(System.Void,``0)">
          <apidata name="FindAsync" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <templates>
            <template name="TEntity">
              <constrained ref="true" />
            </template>
          </templates>
          <parameters>
            <parameter name="keyValues">
              <type api="T:System.Void" ref="false" />
            </parameter>
            <parameter name="cancellationToken">
              <template name="TEntity" index="0" api="M:Microsoft.EntityFrameworkCore.DbContext.FindAsync``1(System.Void,``0)" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Threading.Tasks.ValueTask`1" ref="false" />
          </returns>
          <containers>
            <library assembly="Microsoft.EntityFrameworkCore" module="Microsoft.EntityFrameworkCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Microsoft.EntityFrameworkCore" />
            <type api="T:Microsoft.EntityFrameworkCore.DbContext" ref="true" />
          </containers>
        </element>
        <element api="M:Microsoft.EntityFrameworkCore.DbContext.FromExpression``1(System.Void)">
          <apidata name="FromExpression" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <templates>
            <template name="TResult" />
          </templates>
          <parameters>
            <parameter name="expression">
              <type api="T:System.Void" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IQueryable`1" ref="true" />
          </returns>
          <containers>
            <library assembly="Microsoft.EntityFrameworkCore" module="Microsoft.EntityFrameworkCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Microsoft.EntityFrameworkCore" />
            <type api="T:Microsoft.EntityFrameworkCore.DbContext" ref="true" />
          </containers>
        </element>
        <element api="P:Microsoft.EntityFrameworkCore.DbContext.Database">
          <apidata name="Database" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_Database" />
          <returns>
            <type api="T:Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade" ref="true" />
          </returns>
          <containers>
            <library assembly="Microsoft.EntityFrameworkCore" module="Microsoft.EntityFrameworkCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Microsoft.EntityFrameworkCore" />
            <type api="T:Microsoft.EntityFrameworkCore.DbContext" ref="true" />
          </containers>
        </element>
        <element api="P:Microsoft.EntityFrameworkCore.DbContext.ChangeTracker">
          <apidata name="ChangeTracker" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_ChangeTracker" />
          <returns>
            <type api="T:Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker" ref="true" />
          </returns>
          <containers>
            <library assembly="Microsoft.EntityFrameworkCore" module="Microsoft.EntityFrameworkCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Microsoft.EntityFrameworkCore" />
            <type api="T:Microsoft.EntityFrameworkCore.DbContext" ref="true" />
          </containers>
        </element>
        <element api="P:Microsoft.EntityFrameworkCore.DbContext.Model">
          <apidata name="Model" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_Model" />
          <returns>
            <type api="T:Microsoft.EntityFrameworkCore.Metadata.IModel" ref="true" />
          </returns>
          <implements>
            <member api="P:Microsoft.EntityFrameworkCore.Internal.IDbContextDependencies.Model">
              <type api="T:Microsoft.EntityFrameworkCore.Internal.IDbContextDependencies" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="Microsoft.EntityFrameworkCore" module="Microsoft.EntityFrameworkCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Microsoft.EntityFrameworkCore" />
            <type api="T:Microsoft.EntityFrameworkCore.DbContext" ref="true" />
          </containers>
        </element>
        <element api="P:Microsoft.EntityFrameworkCore.DbContext.ContextId">
          <apidata name="ContextId" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_ContextId" />
          <returns>
            <type api="T:Microsoft.EntityFrameworkCore.DbContextId" ref="false" />
          </returns>
          <containers>
            <library assembly="Microsoft.EntityFrameworkCore" module="Microsoft.EntityFrameworkCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Microsoft.EntityFrameworkCore" />
            <type api="T:Microsoft.EntityFrameworkCore.DbContext" ref="true" />
          </containers>
        </element>
        <element api="E:Microsoft.EntityFrameworkCore.DbContext.SavingChanges">
          <apidata name="SavingChanges" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_SavingChanges" />
          <remover name="remove_SavingChanges" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:Microsoft.EntityFrameworkCore.SavingChangesEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:Microsoft.EntityFrameworkCore.SavingChangesEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="Microsoft.EntityFrameworkCore" module="Microsoft.EntityFrameworkCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Microsoft.EntityFrameworkCore" />
            <type api="T:Microsoft.EntityFrameworkCore.DbContext" ref="true" />
          </containers>
        </element>
        <element api="E:Microsoft.EntityFrameworkCore.DbContext.SavedChanges">
          <apidata name="SavedChanges" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_SavedChanges" />
          <remover name="remove_SavedChanges" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:Microsoft.EntityFrameworkCore.SavedChangesEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:Microsoft.EntityFrameworkCore.SavedChangesEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="Microsoft.EntityFrameworkCore" module="Microsoft.EntityFrameworkCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Microsoft.EntityFrameworkCore" />
            <type api="T:Microsoft.EntityFrameworkCore.DbContext" ref="true" />
          </containers>
        </element>
        <element api="E:Microsoft.EntityFrameworkCore.DbContext.SaveChangesFailed">
          <apidata name="SaveChangesFailed" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_SaveChangesFailed" />
          <remover name="remove_SaveChangesFailed" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:Microsoft.EntityFrameworkCore.SaveChangesFailedEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:Microsoft.EntityFrameworkCore.SaveChangesFailedEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="Microsoft.EntityFrameworkCore" module="Microsoft.EntityFrameworkCore" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:Microsoft.EntityFrameworkCore" />
            <type api="T:Microsoft.EntityFrameworkCore.DbContext" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="easy-mail-discussion-common" module="easy-mail-discussion-common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:EasyMailDiscussion.Common.Database" />
      </containers>
    </api>
    <api id="M:EasyMailDiscussion.Common.Database.SqliteDatabase.#ctor(System.String)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="databaseFilePath">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="easy-mail-discussion-common" module="easy-mail-discussion-common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:EasyMailDiscussion.Common.Database" />
        <type api="T:EasyMailDiscussion.Common.Database.SqliteDatabase" ref="true" />
      </containers>
    </api>
    <api id="P:EasyMailDiscussion.Common.Database.SqliteDatabase.Contacts">
      <apidata name="Contacts" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Contacts" />
      <setter name="set_Contacts" />
      <returns>
        <type api="T:Microsoft.EntityFrameworkCore.DbSet`1" ref="true">
          <specialization>
            <type api="T:EasyMailDiscussion.Common.Database.Contact" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="easy-mail-discussion-common" module="easy-mail-discussion-common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:EasyMailDiscussion.Common.Database" />
        <type api="T:EasyMailDiscussion.Common.Database.SqliteDatabase" ref="true" />
      </containers>
    </api>
    <api id="P:EasyMailDiscussion.Common.Database.SqliteDatabase.ContactSubscriptions">
      <apidata name="ContactSubscriptions" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ContactSubscriptions" />
      <setter name="set_ContactSubscriptions" />
      <returns>
        <type api="T:Microsoft.EntityFrameworkCore.DbSet`1" ref="true">
          <specialization>
            <type api="T:EasyMailDiscussion.Common.Database.ContactSubscription" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="easy-mail-discussion-common" module="easy-mail-discussion-common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:EasyMailDiscussion.Common.Database" />
        <type api="T:EasyMailDiscussion.Common.Database.SqliteDatabase" ref="true" />
      </containers>
    </api>
    <api id="P:EasyMailDiscussion.Common.Database.SqliteDatabase.DiscussionLists">
      <apidata name="DiscussionLists" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_DiscussionLists" />
      <setter name="set_DiscussionLists" />
      <returns>
        <type api="T:Microsoft.EntityFrameworkCore.DbSet`1" ref="true">
          <specialization>
            <type api="T:EasyMailDiscussion.Common.Database.DiscussionList" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="easy-mail-discussion-common" module="easy-mail-discussion-common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:EasyMailDiscussion.Common.Database" />
        <type api="T:EasyMailDiscussion.Common.Database.SqliteDatabase" ref="true" />
      </containers>
    </api>
    <api id="P:EasyMailDiscussion.Common.Database.SqliteDatabase.Messages">
      <apidata name="Messages" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Messages" />
      <setter name="set_Messages" />
      <returns>
        <type api="T:Microsoft.EntityFrameworkCore.DbSet`1" ref="true">
          <specialization>
            <type api="T:EasyMailDiscussion.Common.Database.Message" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="easy-mail-discussion-common" module="easy-mail-discussion-common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:EasyMailDiscussion.Common.Database" />
        <type api="T:EasyMailDiscussion.Common.Database.SqliteDatabase" ref="true" />
      </containers>
    </api>
    <api id="M:EasyMailDiscussion.Common.Database.SqliteDatabase.OnConfiguring(Microsoft.EntityFrameworkCore.DbContextOptionsBuilder)">
      <apidata name="OnConfiguring" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Microsoft.EntityFrameworkCore.DbContext.OnConfiguring(Microsoft.EntityFrameworkCore.DbContextOptionsBuilder)">
          <type api="T:Microsoft.EntityFrameworkCore.DbContext" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="optionsBuilder">
          <type api="T:Microsoft.EntityFrameworkCore.DbContextOptionsBuilder" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="easy-mail-discussion-common" module="easy-mail-discussion-common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:EasyMailDiscussion.Common.Database" />
        <type api="T:EasyMailDiscussion.Common.Database.SqliteDatabase" ref="true" />
      </containers>
    </api>
    <api id="M:EasyMailDiscussion.Common.Database.SqliteDatabase.OnModelCreating(Microsoft.EntityFrameworkCore.ModelBuilder)">
      <apidata name="OnModelCreating" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Microsoft.EntityFrameworkCore.DbContext.OnModelCreating(Microsoft.EntityFrameworkCore.ModelBuilder)">
          <type api="T:Microsoft.EntityFrameworkCore.DbContext" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="modelBuilder">
          <type api="T:Microsoft.EntityFrameworkCore.ModelBuilder" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="easy-mail-discussion-common" module="easy-mail-discussion-common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:EasyMailDiscussion.Common.Database" />
        <type api="T:EasyMailDiscussion.Common.Database.SqliteDatabase" ref="true" />
      </containers>
    </api>
    <api id="P:EasyMailDiscussion.Common.Database.SqliteDatabase.RelayIdentifiers">
      <apidata name="RelayIdentifiers" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_RelayIdentifiers" />
      <setter name="set_RelayIdentifiers" />
      <returns>
        <type api="T:Microsoft.EntityFrameworkCore.DbSet`1" ref="true">
          <specialization>
            <type api="T:EasyMailDiscussion.Common.Database.RelayIdentifier" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="easy-mail-discussion-common" module="easy-mail-discussion-common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:EasyMailDiscussion.Common.Database" />
        <type api="T:EasyMailDiscussion.Common.Database.SqliteDatabase" ref="true" />
      </containers>
    </api>
    <api id="T:EasyMailDiscussion.Common.Database.SubscriptionStatus">
      <apidata name="SubscriptionStatus" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:EasyMailDiscussion.Common.Database.SubscriptionStatus.Unknown" />
        <element api="F:EasyMailDiscussion.Common.Database.SubscriptionStatus.Created" />
        <element api="F:EasyMailDiscussion.Common.Database.SubscriptionStatus.AwaitingConfirmation" />
        <element api="F:EasyMailDiscussion.Common.Database.SubscriptionStatus.Subscribed" />
        <element api="F:EasyMailDiscussion.Common.Database.SubscriptionStatus.Unsubscribed" />
        <element api="F:EasyMailDiscussion.Common.Database.SubscriptionStatus.Requested" />
        <element api="F:EasyMailDiscussion.Common.Database.SubscriptionStatus.Denied" />
        <element api="F:EasyMailDiscussion.Common.Database.SubscriptionStatus.Bounced" />
      </elements>
      <containers>
        <library assembly="easy-mail-discussion-common" module="easy-mail-discussion-common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:EasyMailDiscussion.Common.Database" />
      </containers>
    </api>
    <api id="F:EasyMailDiscussion.Common.Database.SubscriptionStatus.AwaitingConfirmation">
      <apidata name="AwaitingConfirmation" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:EasyMailDiscussion.Common.Database.SubscriptionStatus" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="easy-mail-discussion-common" module="easy-mail-discussion-common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:EasyMailDiscussion.Common.Database" />
        <type api="T:EasyMailDiscussion.Common.Database.SubscriptionStatus" ref="false" />
      </containers>
    </api>
    <api id="F:EasyMailDiscussion.Common.Database.SubscriptionStatus.Bounced">
      <apidata name="Bounced" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:EasyMailDiscussion.Common.Database.SubscriptionStatus" ref="false" />
      </returns>
      <value>7</value>
      <containers>
        <library assembly="easy-mail-discussion-common" module="easy-mail-discussion-common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:EasyMailDiscussion.Common.Database" />
        <type api="T:EasyMailDiscussion.Common.Database.SubscriptionStatus" ref="false" />
      </containers>
    </api>
    <api id="F:EasyMailDiscussion.Common.Database.SubscriptionStatus.Created">
      <apidata name="Created" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:EasyMailDiscussion.Common.Database.SubscriptionStatus" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="easy-mail-discussion-common" module="easy-mail-discussion-common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:EasyMailDiscussion.Common.Database" />
        <type api="T:EasyMailDiscussion.Common.Database.SubscriptionStatus" ref="false" />
      </containers>
    </api>
    <api id="F:EasyMailDiscussion.Common.Database.SubscriptionStatus.Denied">
      <apidata name="Denied" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:EasyMailDiscussion.Common.Database.SubscriptionStatus" ref="false" />
      </returns>
      <value>6</value>
      <containers>
        <library assembly="easy-mail-discussion-common" module="easy-mail-discussion-common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:EasyMailDiscussion.Common.Database" />
        <type api="T:EasyMailDiscussion.Common.Database.SubscriptionStatus" ref="false" />
      </containers>
    </api>
    <api id="F:EasyMailDiscussion.Common.Database.SubscriptionStatus.Requested">
      <apidata name="Requested" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:EasyMailDiscussion.Common.Database.SubscriptionStatus" ref="false" />
      </returns>
      <value>5</value>
      <containers>
        <library assembly="easy-mail-discussion-common" module="easy-mail-discussion-common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:EasyMailDiscussion.Common.Database" />
        <type api="T:EasyMailDiscussion.Common.Database.SubscriptionStatus" ref="false" />
      </containers>
    </api>
    <api id="F:EasyMailDiscussion.Common.Database.SubscriptionStatus.Subscribed">
      <apidata name="Subscribed" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:EasyMailDiscussion.Common.Database.SubscriptionStatus" ref="false" />
      </returns>
      <value>3</value>
      <containers>
        <library assembly="easy-mail-discussion-common" module="easy-mail-discussion-common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:EasyMailDiscussion.Common.Database" />
        <type api="T:EasyMailDiscussion.Common.Database.SubscriptionStatus" ref="false" />
      </containers>
    </api>
    <api id="F:EasyMailDiscussion.Common.Database.SubscriptionStatus.Unknown">
      <apidata name="Unknown" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:EasyMailDiscussion.Common.Database.SubscriptionStatus" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="easy-mail-discussion-common" module="easy-mail-discussion-common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:EasyMailDiscussion.Common.Database" />
        <type api="T:EasyMailDiscussion.Common.Database.SubscriptionStatus" ref="false" />
      </containers>
    </api>
    <api id="F:EasyMailDiscussion.Common.Database.SubscriptionStatus.Unsubscribed">
      <apidata name="Unsubscribed" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:EasyMailDiscussion.Common.Database.SubscriptionStatus" ref="false" />
      </returns>
      <value>4</value>
      <containers>
        <library assembly="easy-mail-discussion-common" module="easy-mail-discussion-common" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:EasyMailDiscussion.Common.Database" />
        <type api="T:EasyMailDiscussion.Common.Database.SubscriptionStatus" ref="false" />
      </containers>
    </api>
    <api id="N:EasyMailDiscussion.Web">
      <apidata name="EasyMailDiscussion.Web" group="namespace" />
      <elements>
        <element api="T:EasyMailDiscussion.Web.ApplicationSettings" />
        <element api="T:EasyMailDiscussion.Web.DockerEnvironmentVariables" />
        <element api="T:EasyMailDiscussion.Web.Program" />
        <element api="T:EasyMailDiscussion.Web.Startup" />
      </elements>
    </api>
    <api id="T:EasyMailDiscussion.Web.ApplicationSettings">
      <apidata name="ApplicationSettings" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="F:EasyMailDiscussion.Web.ApplicationSettings.SECTION_DATABASE" />
        <element api="F:EasyMailDiscussion.Web.ApplicationSettings.DATABASE_PATH" />
        <element api="F:EasyMailDiscussion.Web.ApplicationSettings.SECTION_LOG" />
        <element api="F:EasyMailDiscussion.Web.ApplicationSettings.LOG_PATH" />
        <element api="P:EasyMailDiscussion.Web.ApplicationSettings.DatabaseFilePath" />
        <element api="P:EasyMailDiscussion.Web.ApplicationSettings.LogFilePath" />
      </elements>
      <containers>
        <library assembly="easy-mail-discussion-web" module="easy-mail-discussion-web" kind="ConsoleApplication" />
        <namespace api="N:EasyMailDiscussion.Web" />
      </containers>
    </api>
    <api id="F:EasyMailDiscussion.Web.ApplicationSettings.DATABASE_PATH">
      <apidata name="DATABASE_PATH" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <value>Path</value>
      <containers>
        <library assembly="easy-mail-discussion-web" module="easy-mail-discussion-web" kind="ConsoleApplication" />
        <namespace api="N:EasyMailDiscussion.Web" />
        <type api="T:EasyMailDiscussion.Web.ApplicationSettings" ref="true" />
      </containers>
    </api>
    <api id="P:EasyMailDiscussion.Web.ApplicationSettings.DatabaseFilePath">
      <apidata name="DatabaseFilePath" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_DatabaseFilePath" />
      <setter name="set_DatabaseFilePath" />
      <returns>
        <type api="T:System.Uri" ref="true" />
      </returns>
      <containers>
        <library assembly="easy-mail-discussion-web" module="easy-mail-discussion-web" kind="ConsoleApplication" />
        <namespace api="N:EasyMailDiscussion.Web" />
        <type api="T:EasyMailDiscussion.Web.ApplicationSettings" ref="true" />
      </containers>
    </api>
    <api id="F:EasyMailDiscussion.Web.ApplicationSettings.LOG_PATH">
      <apidata name="LOG_PATH" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <value>Path</value>
      <containers>
        <library assembly="easy-mail-discussion-web" module="easy-mail-discussion-web" kind="ConsoleApplication" />
        <namespace api="N:EasyMailDiscussion.Web" />
        <type api="T:EasyMailDiscussion.Web.ApplicationSettings" ref="true" />
      </containers>
    </api>
    <api id="P:EasyMailDiscussion.Web.ApplicationSettings.LogFilePath">
      <apidata name="LogFilePath" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_LogFilePath" />
      <setter name="set_LogFilePath" />
      <returns>
        <type api="T:System.Uri" ref="true" />
      </returns>
      <containers>
        <library assembly="easy-mail-discussion-web" module="easy-mail-discussion-web" kind="ConsoleApplication" />
        <namespace api="N:EasyMailDiscussion.Web" />
        <type api="T:EasyMailDiscussion.Web.ApplicationSettings" ref="true" />
      </containers>
    </api>
    <api id="F:EasyMailDiscussion.Web.ApplicationSettings.SECTION_DATABASE">
      <apidata name="SECTION_DATABASE" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <value>Database</value>
      <containers>
        <library assembly="easy-mail-discussion-web" module="easy-mail-discussion-web" kind="ConsoleApplication" />
        <namespace api="N:EasyMailDiscussion.Web" />
        <type api="T:EasyMailDiscussion.Web.ApplicationSettings" ref="true" />
      </containers>
    </api>
    <api id="F:EasyMailDiscussion.Web.ApplicationSettings.SECTION_LOG">
      <apidata name="SECTION_LOG" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <value>Log</value>
      <containers>
        <library assembly="easy-mail-discussion-web" module="easy-mail-discussion-web" kind="ConsoleApplication" />
        <namespace api="N:EasyMailDiscussion.Web" />
        <type api="T:EasyMailDiscussion.Web.ApplicationSettings" ref="true" />
      </containers>
    </api>
    <api id="T:EasyMailDiscussion.Web.DockerEnvironmentVariables">
      <apidata name="DockerEnvironmentVariables" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="P:EasyMailDiscussion.Web.DockerEnvironmentVariables.FetchTime" />
        <element api="P:EasyMailDiscussion.Web.DockerEnvironmentVariables.LogLevel" />
        <element api="P:EasyMailDiscussion.Web.DockerEnvironmentVariables.PageSize" />
      </elements>
      <containers>
        <library assembly="easy-mail-discussion-web" module="easy-mail-discussion-web" kind="ConsoleApplication" />
        <namespace api="N:EasyMailDiscussion.Web" />
      </containers>
    </api>
    <api id="P:EasyMailDiscussion.Web.DockerEnvironmentVariables.FetchTime">
      <apidata name="FetchTime" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_FetchTime" />
      <returns>
        <type api="T:System.TimeSpan" ref="false" />
      </returns>
      <containers>
        <library assembly="easy-mail-discussion-web" module="easy-mail-discussion-web" kind="ConsoleApplication" />
        <namespace api="N:EasyMailDiscussion.Web" />
        <type api="T:EasyMailDiscussion.Web.DockerEnvironmentVariables" ref="true" />
      </containers>
    </api>
    <api id="P:EasyMailDiscussion.Web.DockerEnvironmentVariables.LogLevel">
      <apidata name="LogLevel" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_LogLevel" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="easy-mail-discussion-web" module="easy-mail-discussion-web" kind="ConsoleApplication" />
        <namespace api="N:EasyMailDiscussion.Web" />
        <type api="T:EasyMailDiscussion.Web.DockerEnvironmentVariables" ref="true" />
      </containers>
    </api>
    <api id="P:EasyMailDiscussion.Web.DockerEnvironmentVariables.PageSize">
      <apidata name="PageSize" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_PageSize" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="easy-mail-discussion-web" module="easy-mail-discussion-web" kind="ConsoleApplication" />
        <namespace api="N:EasyMailDiscussion.Web" />
        <type api="T:EasyMailDiscussion.Web.DockerEnvironmentVariables" ref="true" />
      </containers>
    </api>
    <api id="T:EasyMailDiscussion.Web.Program">
      <apidata name="Program" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:EasyMailDiscussion.Web.Program.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:EasyMailDiscussion.Web.Program.Main(System.String[])" />
        <element api="M:EasyMailDiscussion.Web.Program.CreateHostBuilder(System.String[])" />
        <element api="M:EasyMailDiscussion.Web.Program.#ctor" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="easy-mail-discussion-web" module="easy-mail-discussion-web" kind="ConsoleApplication" />
        <namespace api="N:EasyMailDiscussion.Web" />
      </containers>
    </api>
    <api id="M:EasyMailDiscussion.Web.Program.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="easy-mail-discussion-web" module="easy-mail-discussion-web" kind="ConsoleApplication" />
        <namespace api="N:EasyMailDiscussion.Web" />
        <type api="T:EasyMailDiscussion.Web.Program" ref="true" />
      </containers>
    </api>
    <api id="M:EasyMailDiscussion.Web.Program.CreateHostBuilder(System.String[])">
      <apidata name="CreateHostBuilder" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="args">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.Extensions.Hosting.IHostBuilder" ref="true" />
      </returns>
      <containers>
        <library assembly="easy-mail-discussion-web" module="easy-mail-discussion-web" kind="ConsoleApplication" />
        <namespace api="N:EasyMailDiscussion.Web" />
        <type api="T:EasyMailDiscussion.Web.Program" ref="true" />
      </containers>
    </api>
    <api id="M:EasyMailDiscussion.Web.Program.Main(System.String[])">
      <apidata name="Main" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="args">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="easy-mail-discussion-web" module="easy-mail-discussion-web" kind="ConsoleApplication" />
        <namespace api="N:EasyMailDiscussion.Web" />
        <type api="T:EasyMailDiscussion.Web.Program" ref="true" />
      </containers>
    </api>
    <api id="T:EasyMailDiscussion.Web.Startup">
      <apidata name="Startup" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:EasyMailDiscussion.Web.Startup.#ctor(Microsoft.Extensions.Configuration.IConfiguration)" />
        <element api="M:EasyMailDiscussion.Web.Startup.ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)" />
        <element api="M:EasyMailDiscussion.Web.Startup.Configure(Microsoft.AspNetCore.Builder.IApplicationBuilder,Microsoft.AspNetCore.Hosting.IWebHostEnvironment)" />
        <element api="P:EasyMailDiscussion.Web.Startup.Configuration" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="easy-mail-discussion-web" module="easy-mail-discussion-web" kind="ConsoleApplication" />
        <namespace api="N:EasyMailDiscussion.Web" />
      </containers>
    </api>
    <api id="M:EasyMailDiscussion.Web.Startup.#ctor(Microsoft.Extensions.Configuration.IConfiguration)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="configuration">
          <type api="T:Microsoft.Extensions.Configuration.IConfiguration" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="easy-mail-discussion-web" module="easy-mail-discussion-web" kind="ConsoleApplication" />
        <namespace api="N:EasyMailDiscussion.Web" />
        <type api="T:EasyMailDiscussion.Web.Startup" ref="true" />
      </containers>
    </api>
    <api id="P:EasyMailDiscussion.Web.Startup.Configuration">
      <apidata name="Configuration" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Configuration" />
      <returns>
        <type api="T:Microsoft.Extensions.Configuration.IConfiguration" ref="true" />
      </returns>
      <containers>
        <library assembly="easy-mail-discussion-web" module="easy-mail-discussion-web" kind="ConsoleApplication" />
        <namespace api="N:EasyMailDiscussion.Web" />
        <type api="T:EasyMailDiscussion.Web.Startup" ref="true" />
      </containers>
    </api>
    <api id="M:EasyMailDiscussion.Web.Startup.Configure(Microsoft.AspNetCore.Builder.IApplicationBuilder,Microsoft.AspNetCore.Hosting.IWebHostEnvironment)">
      <apidata name="Configure" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="app">
          <type api="T:Microsoft.AspNetCore.Builder.IApplicationBuilder" ref="true" />
        </parameter>
        <parameter name="env">
          <type api="T:Microsoft.AspNetCore.Hosting.IWebHostEnvironment" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="easy-mail-discussion-web" module="easy-mail-discussion-web" kind="ConsoleApplication" />
        <namespace api="N:EasyMailDiscussion.Web" />
        <type api="T:EasyMailDiscussion.Web.Startup" ref="true" />
      </containers>
    </api>
    <api id="M:EasyMailDiscussion.Web.Startup.ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
      <apidata name="ConfigureServices" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="services">
          <type api="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="easy-mail-discussion-web" module="easy-mail-discussion-web" kind="ConsoleApplication" />
        <namespace api="N:EasyMailDiscussion.Web" />
        <type api="T:EasyMailDiscussion.Web.Startup" ref="true" />
      </containers>
    </api>
    <api id="N:EasyMailDiscussion.Web.Controllers">
      <apidata name="EasyMailDiscussion.Web.Controllers" group="namespace" />
      <elements>
        <element api="T:EasyMailDiscussion.Web.Controllers.BaseController" />
        <element api="T:EasyMailDiscussion.Web.Controllers.ContactController" />
        <element api="T:EasyMailDiscussion.Web.Controllers.HomeController" />
        <element api="T:EasyMailDiscussion.Web.Controllers.ListController" />
      </elements>
    </api>
    <api id="T:EasyMailDiscussion.Web.Controllers.BaseController">
      <apidata name="BaseController" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:EasyMailDiscussion.Web.Controllers.BaseController.#ctor" />
      <family>
        <ancestors>
          <type api="T:Microsoft.AspNetCore.Mvc.Controller" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:EasyMailDiscussion.Web.Controllers.ContactController" ref="true" />
          <type api="T:EasyMailDiscussion.Web.Controllers.HomeController" ref="true" />
          <type api="T:EasyMailDiscussion.Web.Controllers.ListController" ref="true" />
        </descendents>
      </family>
      <elements>
        <element api="M:EasyMailDiscussion.Web.Controllers.BaseController.OnActionExecuting(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext)" />
        <element api="M:EasyMailDiscussion.Web.Controllers.BaseController.#ctor" />
        <element api="P:EasyMailDiscussion.Web.Controllers.BaseController.SqliteDatabase" />
      </elements>
      <containers>
        <library assembly="easy-mail-discussion-web" module="easy-mail-discussion-web" kind="ConsoleApplication" />
        <namespace api="N:EasyMailDiscussion.Web.Controllers" />
      </containers>
    </api>
    <api id="M:EasyMailDiscussion.Web.Controllers.BaseController.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="easy-mail-discussion-web" module="easy-mail-discussion-web" kind="ConsoleApplication" />
        <namespace api="N:EasyMailDiscussion.Web.Controllers" />
        <type api="T:EasyMailDiscussion.Web.Controllers.BaseController" ref="true" />
      </containers>
    </api>
    <api id="M:EasyMailDiscussion.Web.Controllers.BaseController.OnActionExecuting(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext)">
      <apidata name="OnActionExecuting" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="context">
          <type api="T:Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="easy-mail-discussion-web" module="easy-mail-discussion-web" kind="ConsoleApplication" />
        <namespace api="N:EasyMailDiscussion.Web.Controllers" />
        <type api="T:EasyMailDiscussion.Web.Controllers.BaseController" ref="true" />
      </containers>
    </api>
    <api id="P:EasyMailDiscussion.Web.Controllers.BaseController.SqliteDatabase">
      <apidata name="SqliteDatabase" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_SqliteDatabase" />
      <returns>
        <type api="T:EasyMailDiscussion.Common.Database.SqliteDatabase" ref="true" />
      </returns>
      <containers>
        <library assembly="easy-mail-discussion-web" module="easy-mail-discussion-web" kind="ConsoleApplication" />
        <namespace api="N:EasyMailDiscussion.Web.Controllers" />
        <type api="T:EasyMailDiscussion.Web.Controllers.BaseController" ref="true" />
      </containers>
    </api>
    <api id="T:EasyMailDiscussion.Web.Controllers.ContactController">
      <apidata name="ContactController" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:EasyMailDiscussion.Web.Controllers.ContactController.#ctor" />
      <family>
        <ancestors>
          <type api="T:EasyMailDiscussion.Web.Controllers.BaseController" ref="true" />
          <type api="T:Microsoft.AspNetCore.Mvc.Controller" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:EasyMailDiscussion.Web.Controllers.ContactController.Index" />
        <element api="M:EasyMailDiscussion.Web.Controllers.ContactController.New" />
        <element api="M:EasyMailDiscussion.Web.Controllers.ContactController.Edit(System.Int32)" />
        <element api="M:EasyMailDiscussion.Web.Controllers.ContactController.Edit(EasyMailDiscussion.Web.Models.Forms.ContactForm)" />
        <element api="M:EasyMailDiscussion.Web.Controllers.ContactController.Remove(System.Int32)" />
        <element api="M:EasyMailDiscussion.Web.Controllers.ContactController.ConfirmRemove(System.Int32)" />
        <element api="M:EasyMailDiscussion.Web.Controllers.ContactController.Create(EasyMailDiscussion.Web.Models.Forms.ContactForm)" />
        <element api="M:EasyMailDiscussion.Web.Controllers.ContactController.#ctor" />
        <element api="M:EasyMailDiscussion.Web.Controllers.BaseController.OnActionExecuting(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext)" />
        <element api="P:EasyMailDiscussion.Web.Controllers.BaseController.SqliteDatabase" />
      </elements>
      <containers>
        <library assembly="easy-mail-discussion-web" module="easy-mail-discussion-web" kind="ConsoleApplication" />
        <namespace api="N:EasyMailDiscussion.Web.Controllers" />
      </containers>
    </api>
    <api id="M:EasyMailDiscussion.Web.Controllers.ContactController.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="easy-mail-discussion-web" module="easy-mail-discussion-web" kind="ConsoleApplication" />
        <namespace api="N:EasyMailDiscussion.Web.Controllers" />
        <type api="T:EasyMailDiscussion.Web.Controllers.ContactController" ref="true" />
      </containers>
    </api>
    <api id="M:EasyMailDiscussion.Web.Controllers.ContactController.ConfirmRemove(System.Int32)">
      <apidata name="ConfirmRemove" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="id">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.AspNetCore.Mvc.IActionResult" ref="true" />
      </returns>
      <containers>
        <library assembly="easy-mail-discussion-web" module="easy-mail-discussion-web" kind="ConsoleApplication" />
        <namespace api="N:EasyMailDiscussion.Web.Controllers" />
        <type api="T:EasyMailDiscussion.Web.Controllers.ContactController" ref="true" />
      </containers>
    </api>
    <api id="M:EasyMailDiscussion.Web.Controllers.ContactController.Create(EasyMailDiscussion.Web.Models.Forms.ContactForm)">
      <apidata name="Create" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="formInput">
          <type api="T:EasyMailDiscussion.Web.Models.Forms.ContactForm" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.AspNetCore.Mvc.IActionResult" ref="true" />
      </returns>
      <containers>
        <library assembly="easy-mail-discussion-web" module="easy-mail-discussion-web" kind="ConsoleApplication" />
        <namespace api="N:EasyMailDiscussion.Web.Controllers" />
        <type api="T:EasyMailDiscussion.Web.Controllers.ContactController" ref="true" />
      </containers>
    </api>
    <api id="M:EasyMailDiscussion.Web.Controllers.ContactController.Edit(EasyMailDiscussion.Web.Models.Forms.ContactForm)">
      <apidata name="Edit" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="formInput">
          <type api="T:EasyMailDiscussion.Web.Models.Forms.ContactForm" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.AspNetCore.Mvc.IActionResult" ref="true" />
      </returns>
      <containers>
        <library assembly="easy-mail-discussion-web" module="easy-mail-discussion-web" kind="ConsoleApplication" />
        <namespace api="N:EasyMailDiscussion.Web.Controllers" />
        <type api="T:EasyMailDiscussion.Web.Controllers.ContactController" ref="true" />
      </containers>
    </api>
    <api id="M:EasyMailDiscussion.Web.Controllers.ContactController.Edit(System.Int32)">
      <apidata name="Edit" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="id">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.AspNetCore.Mvc.IActionResult" ref="true" />
      </returns>
      <containers>
        <library assembly="easy-mail-discussion-web" module="easy-mail-discussion-web" kind="ConsoleApplication" />
        <namespace api="N:EasyMailDiscussion.Web.Controllers" />
        <type api="T:EasyMailDiscussion.Web.Controllers.ContactController" ref="true" />
      </containers>
    </api>
    <api id="M:EasyMailDiscussion.Web.Controllers.ContactController.Index">
      <apidata name="Index" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:Microsoft.AspNetCore.Mvc.IActionResult" ref="true" />
      </returns>
      <containers>
        <library assembly="easy-mail-discussion-web" module="easy-mail-discussion-web" kind="ConsoleApplication" />
        <namespace api="N:EasyMailDiscussion.Web.Controllers" />
        <type api="T:EasyMailDiscussion.Web.Controllers.ContactController" ref="true" />
      </containers>
    </api>
    <api id="M:EasyMailDiscussion.Web.Controllers.ContactController.New">
      <apidata name="New" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:Microsoft.AspNetCore.Mvc.IActionResult" ref="true" />
      </returns>
      <containers>
        <library assembly="easy-mail-discussion-web" module="easy-mail-discussion-web" kind="ConsoleApplication" />
        <namespace api="N:EasyMailDiscussion.Web.Controllers" />
        <type api="T:EasyMailDiscussion.Web.Controllers.ContactController" ref="true" />
      </containers>
    </api>
    <api id="M:EasyMailDiscussion.Web.Controllers.ContactController.Remove(System.Int32)">
      <apidata name="Remove" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="id">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.AspNetCore.Mvc.IActionResult" ref="true" />
      </returns>
      <containers>
        <library assembly="easy-mail-discussion-web" module="easy-mail-discussion-web" kind="ConsoleApplication" />
        <namespace api="N:EasyMailDiscussion.Web.Controllers" />
        <type api="T:EasyMailDiscussion.Web.Controllers.ContactController" ref="true" />
      </containers>
    </api>
    <api id="T:EasyMailDiscussion.Web.Controllers.HomeController">
      <apidata name="HomeController" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:EasyMailDiscussion.Web.Controllers.HomeController.#ctor" />
      <family>
        <ancestors>
          <type api="T:EasyMailDiscussion.Web.Controllers.BaseController" ref="true" />
          <type api="T:Microsoft.AspNetCore.Mvc.Controller" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:EasyMailDiscussion.Web.Controllers.HomeController.Index" />
        <element api="M:EasyMailDiscussion.Web.Controllers.HomeController.Error" />
        <element api="M:EasyMailDiscussion.Web.Controllers.HomeController.#ctor" />
        <element api="M:EasyMailDiscussion.Web.Controllers.BaseController.OnActionExecuting(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext)" />
        <element api="P:EasyMailDiscussion.Web.Controllers.BaseController.SqliteDatabase" />
      </elements>
      <containers>
        <library assembly="easy-mail-discussion-web" module="easy-mail-discussion-web" kind="ConsoleApplication" />
        <namespace api="N:EasyMailDiscussion.Web.Controllers" />
      </containers>
    </api>
    <api id="M:EasyMailDiscussion.Web.Controllers.HomeController.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="easy-mail-discussion-web" module="easy-mail-discussion-web" kind="ConsoleApplication" />
        <namespace api="N:EasyMailDiscussion.Web.Controllers" />
        <type api="T:EasyMailDiscussion.Web.Controllers.HomeController" ref="true" />
      </containers>
    </api>
    <api id="M:EasyMailDiscussion.Web.Controllers.HomeController.Error">
      <apidata name="Error" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:Microsoft.AspNetCore.Mvc.IActionResult" ref="true" />
      </returns>
      <containers>
        <library assembly="easy-mail-discussion-web" module="easy-mail-discussion-web" kind="ConsoleApplication" />
        <namespace api="N:EasyMailDiscussion.Web.Controllers" />
        <type api="T:EasyMailDiscussion.Web.Controllers.HomeController" ref="true" />
      </containers>
    </api>
    <api id="M:EasyMailDiscussion.Web.Controllers.HomeController.Index">
      <apidata name="Index" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:Microsoft.AspNetCore.Mvc.IActionResult" ref="true" />
      </returns>
      <containers>
        <library assembly="easy-mail-discussion-web" module="easy-mail-discussion-web" kind="ConsoleApplication" />
        <namespace api="N:EasyMailDiscussion.Web.Controllers" />
        <type api="T:EasyMailDiscussion.Web.Controllers.HomeController" ref="true" />
      </containers>
    </api>
    <api id="T:EasyMailDiscussion.Web.Controllers.ListController">
      <apidata name="ListController" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:EasyMailDiscussion.Web.Controllers.ListController.#ctor" />
      <family>
        <ancestors>
          <type api="T:EasyMailDiscussion.Web.Controllers.BaseController" ref="true" />
          <type api="T:Microsoft.AspNetCore.Mvc.Controller" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:EasyMailDiscussion.Web.Controllers.ListController.Index" />
        <element api="M:EasyMailDiscussion.Web.Controllers.ListController.New" />
        <element api="M:EasyMailDiscussion.Web.Controllers.ListController.Edit(System.Int32)" />
        <element api="M:EasyMailDiscussion.Web.Controllers.ListController.Edit(EasyMailDiscussion.Web.Models.Forms.DiscussionListForm)" />
        <element api="M:EasyMailDiscussion.Web.Controllers.ListController.Remove(System.Int32)" />
        <element api="M:EasyMailDiscussion.Web.Controllers.ListController.ConfirmRemove(System.Int32)" />
        <element api="M:EasyMailDiscussion.Web.Controllers.ListController.Create(EasyMailDiscussion.Web.Models.Forms.DiscussionListForm)" />
        <element api="M:EasyMailDiscussion.Web.Controllers.ListController.Assign(System.Int32)" />
        <element api="M:EasyMailDiscussion.Web.Controllers.ListController.Assign(EasyMailDiscussion.Web.Models.Forms.DiscussionListAssignForm)" />
        <element api="M:EasyMailDiscussion.Web.Controllers.ListController.Archive(System.Int32,System.Int32)" />
        <element api="M:EasyMailDiscussion.Web.Controllers.ListController.Message(System.Int32,System.Int32)" />
        <element api="M:EasyMailDiscussion.Web.Controllers.ListController.#ctor" />
        <element api="M:EasyMailDiscussion.Web.Controllers.BaseController.OnActionExecuting(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext)" />
        <element api="P:EasyMailDiscussion.Web.Controllers.BaseController.SqliteDatabase" />
      </elements>
      <containers>
        <library assembly="easy-mail-discussion-web" module="easy-mail-discussion-web" kind="ConsoleApplication" />
        <namespace api="N:EasyMailDiscussion.Web.Controllers" />
      </containers>
    </api>
    <api id="M:EasyMailDiscussion.Web.Controllers.ListController.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="easy-mail-discussion-web" module="easy-mail-discussion-web" kind="ConsoleApplication" />
        <namespace api="N:EasyMailDiscussion.Web.Controllers" />
        <type api="T:EasyMailDiscussion.Web.Controllers.ListController" ref="true" />
      </containers>
    </api>
    <api id="M:EasyMailDiscussion.Web.Controllers.ListController.Archive(System.Int32,System.Int32)">
      <apidata name="Archive" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="id">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="pageNumber" optional="true">
          <type api="T:System.Int32" ref="false" />
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>1</value>
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.AspNetCore.Mvc.IActionResult" ref="true" />
      </returns>
      <containers>
        <library assembly="easy-mail-discussion-web" module="easy-mail-discussion-web" kind="ConsoleApplication" />
        <namespace api="N:EasyMailDiscussion.Web.Controllers" />
        <type api="T:EasyMailDiscussion.Web.Controllers.ListController" ref="true" />
      </containers>
    </api>
    <api id="M:EasyMailDiscussion.Web.Controllers.ListController.Assign(EasyMailDiscussion.Web.Models.Forms.DiscussionListAssignForm)">
      <apidata name="Assign" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="formInput">
          <type api="T:EasyMailDiscussion.Web.Models.Forms.DiscussionListAssignForm" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.AspNetCore.Mvc.IActionResult" ref="true" />
      </returns>
      <containers>
        <library assembly="easy-mail-discussion-web" module="easy-mail-discussion-web" kind="ConsoleApplication" />
        <namespace api="N:EasyMailDiscussion.Web.Controllers" />
        <type api="T:EasyMailDiscussion.Web.Controllers.ListController" ref="true" />
      </containers>
    </api>
    <api id="M:EasyMailDiscussion.Web.Controllers.ListController.Assign(System.Int32)">
      <apidata name="Assign" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="id">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.AspNetCore.Mvc.IActionResult" ref="true" />
      </returns>
      <containers>
        <library assembly="easy-mail-discussion-web" module="easy-mail-discussion-web" kind="ConsoleApplication" />
        <namespace api="N:EasyMailDiscussion.Web.Controllers" />
        <type api="T:EasyMailDiscussion.Web.Controllers.ListController" ref="true" />
      </containers>
    </api>
    <api id="M:EasyMailDiscussion.Web.Controllers.ListController.ConfirmRemove(System.Int32)">
      <apidata name="ConfirmRemove" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="id">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.AspNetCore.Mvc.IActionResult" ref="true" />
      </returns>
      <containers>
        <library assembly="easy-mail-discussion-web" module="easy-mail-discussion-web" kind="ConsoleApplication" />
        <namespace api="N:EasyMailDiscussion.Web.Controllers" />
        <type api="T:EasyMailDiscussion.Web.Controllers.ListController" ref="true" />
      </containers>
    </api>
    <api id="M:EasyMailDiscussion.Web.Controllers.ListController.Create(EasyMailDiscussion.Web.Models.Forms.DiscussionListForm)">
      <apidata name="Create" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="formInput">
          <type api="T:EasyMailDiscussion.Web.Models.Forms.DiscussionListForm" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.AspNetCore.Mvc.IActionResult" ref="true" />
      </returns>
      <containers>
        <library assembly="easy-mail-discussion-web" module="easy-mail-discussion-web" kind="ConsoleApplication" />
        <namespace api="N:EasyMailDiscussion.Web.Controllers" />
        <type api="T:EasyMailDiscussion.Web.Controllers.ListController" ref="true" />
      </containers>
    </api>
    <api id="M:EasyMailDiscussion.Web.Controllers.ListController.Edit(EasyMailDiscussion.Web.Models.Forms.DiscussionListForm)">
      <apidata name="Edit" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="formInput">
          <type api="T:EasyMailDiscussion.Web.Models.Forms.DiscussionListForm" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.AspNetCore.Mvc.IActionResult" ref="true" />
      </returns>
      <containers>
        <library assembly="easy-mail-discussion-web" module="easy-mail-discussion-web" kind="ConsoleApplication" />
        <namespace api="N:EasyMailDiscussion.Web.Controllers" />
        <type api="T:EasyMailDiscussion.Web.Controllers.ListController" ref="true" />
      </containers>
    </api>
    <api id="M:EasyMailDiscussion.Web.Controllers.ListController.Edit(System.Int32)">
      <apidata name="Edit" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="id">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.AspNetCore.Mvc.IActionResult" ref="true" />
      </returns>
      <containers>
        <library assembly="easy-mail-discussion-web" module="easy-mail-discussion-web" kind="ConsoleApplication" />
        <namespace api="N:EasyMailDiscussion.Web.Controllers" />
        <type api="T:EasyMailDiscussion.Web.Controllers.ListController" ref="true" />
      </containers>
    </api>
    <api id="M:EasyMailDiscussion.Web.Controllers.ListController.Index">
      <apidata name="Index" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:Microsoft.AspNetCore.Mvc.IActionResult" ref="true" />
      </returns>
      <containers>
        <library assembly="easy-mail-discussion-web" module="easy-mail-discussion-web" kind="ConsoleApplication" />
        <namespace api="N:EasyMailDiscussion.Web.Controllers" />
        <type api="T:EasyMailDiscussion.Web.Controllers.ListController" ref="true" />
      </containers>
    </api>
    <api id="M:EasyMailDiscussion.Web.Controllers.ListController.Message(System.Int32,System.Int32)">
      <apidata name="Message" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="id">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="pageNumber" optional="true">
          <type api="T:System.Int32" ref="false" />
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>1</value>
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.AspNetCore.Mvc.IActionResult" ref="true" />
      </returns>
      <containers>
        <library assembly="easy-mail-discussion-web" module="easy-mail-discussion-web" kind="ConsoleApplication" />
        <namespace api="N:EasyMailDiscussion.Web.Controllers" />
        <type api="T:EasyMailDiscussion.Web.Controllers.ListController" ref="true" />
      </containers>
    </api>
    <api id="M:EasyMailDiscussion.Web.Controllers.ListController.New">
      <apidata name="New" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:Microsoft.AspNetCore.Mvc.IActionResult" ref="true" />
      </returns>
      <containers>
        <library assembly="easy-mail-discussion-web" module="easy-mail-discussion-web" kind="ConsoleApplication" />
        <namespace api="N:EasyMailDiscussion.Web.Controllers" />
        <type api="T:EasyMailDiscussion.Web.Controllers.ListController" ref="true" />
      </containers>
    </api>
    <api id="M:EasyMailDiscussion.Web.Controllers.ListController.Remove(System.Int32)">
      <apidata name="Remove" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="id">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.AspNetCore.Mvc.IActionResult" ref="true" />
      </returns>
      <containers>
        <library assembly="easy-mail-discussion-web" module="easy-mail-discussion-web" kind="ConsoleApplication" />
        <namespace api="N:EasyMailDiscussion.Web.Controllers" />
        <type api="T:EasyMailDiscussion.Web.Controllers.ListController" ref="true" />
      </containers>
    </api>
    <api id="N:EasyMailDiscussion.Web.Models">
      <apidata name="EasyMailDiscussion.Web.Models" group="namespace" />
      <elements>
        <element api="T:EasyMailDiscussion.Web.Models.ArchivePageModel" />
        <element api="T:EasyMailDiscussion.Web.Models.HomepageModel" />
        <element api="T:EasyMailDiscussion.Web.Models.ContactsModel" />
        <element api="T:EasyMailDiscussion.Web.Models.DiscussionListAssignModel" />
        <element api="T:EasyMailDiscussion.Web.Models.DiscussionListsModel" />
        <element api="T:EasyMailDiscussion.Web.Models.EditContactModel" />
        <element api="T:EasyMailDiscussion.Web.Models.EditDiscussionListModel" />
        <element api="T:EasyMailDiscussion.Web.Models.ErrorViewModel" />
        <element api="T:EasyMailDiscussion.Web.Models.MessagePageModel" />
        <element api="T:EasyMailDiscussion.Web.Models.RemoveContactModel" />
        <element api="T:EasyMailDiscussion.Web.Models.RemoveDiscussionListModel" />
      </elements>
    </api>
    <api id="T:EasyMailDiscussion.Web.Models.ArchivePageModel">
      <apidata name="ArchivePageModel" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:EasyMailDiscussion.Web.Models.ArchivePageModel.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:EasyMailDiscussion.Web.Models.ArchivePageModel.#ctor" />
        <element api="P:EasyMailDiscussion.Web.Models.ArchivePageModel.DiscussionList" />
        <element api="P:EasyMailDiscussion.Web.Models.ArchivePageModel.PageNumber" />
        <element api="P:EasyMailDiscussion.Web.Models.ArchivePageModel.TotalPages" />
        <element api="P:EasyMailDiscussion.Web.Models.ArchivePageModel.Messages" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="easy-mail-discussion-web" module="easy-mail-discussion-web" kind="ConsoleApplication" />
        <namespace api="N:EasyMailDiscussion.Web.Models" />
      </containers>
    </api>
    <api id="M:EasyMailDiscussion.Web.Models.ArchivePageModel.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="easy-mail-discussion-web" module="easy-mail-discussion-web" kind="ConsoleApplication" />
        <namespace api="N:EasyMailDiscussion.Web.Models" />
        <type api="T:EasyMailDiscussion.Web.Models.ArchivePageModel" ref="true" />
      </containers>
    </api>
    <api id="P:EasyMailDiscussion.Web.Models.ArchivePageModel.DiscussionList">
      <apidata name="DiscussionList" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_DiscussionList" />
      <setter name="set_DiscussionList" />
      <returns>
        <type api="T:EasyMailDiscussion.Common.Database.DiscussionList" ref="true" />
      </returns>
      <containers>
        <library assembly="easy-mail-discussion-web" module="easy-mail-discussion-web" kind="ConsoleApplication" />
        <namespace api="N:EasyMailDiscussion.Web.Models" />
        <type api="T:EasyMailDiscussion.Web.Models.ArchivePageModel" ref="true" />
      </containers>
    </api>
    <api id="P:EasyMailDiscussion.Web.Models.ArchivePageModel.Messages">
      <apidata name="Messages" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Messages" />
      <setter name="set_Messages" />
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:EasyMailDiscussion.Common.Database.Message" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="easy-mail-discussion-web" module="easy-mail-discussion-web" kind="ConsoleApplication" />
        <namespace api="N:EasyMailDiscussion.Web.Models" />
        <type api="T:EasyMailDiscussion.Web.Models.ArchivePageModel" ref="true" />
      </containers>
    </api>
    <api id="P:EasyMailDiscussion.Web.Models.ArchivePageModel.PageNumber">
      <apidata name="PageNumber" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_PageNumber" />
      <setter name="set_PageNumber" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="easy-mail-discussion-web" module="easy-mail-discussion-web" kind="ConsoleApplication" />
        <namespace api="N:EasyMailDiscussion.Web.Models" />
        <type api="T:EasyMailDiscussion.Web.Models.ArchivePageModel" ref="true" />
      </containers>
    </api>
    <api id="P:EasyMailDiscussion.Web.Models.ArchivePageModel.TotalPages">
      <apidata name="TotalPages" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_TotalPages" />
      <setter name="set_TotalPages" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="easy-mail-discussion-web" module="easy-mail-discussion-web" kind="ConsoleApplication" />
        <namespace api="N:EasyMailDiscussion.Web.Models" />
        <type api="T:EasyMailDiscussion.Web.Models.ArchivePageModel" ref="true" />
      </containers>
    </api>
    <api id="T:EasyMailDiscussion.Web.Models.ContactsModel">
      <apidata name="ContactsModel" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:EasyMailDiscussion.Web.Models.ContactsModel.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:EasyMailDiscussion.Web.Models.ContactsModel.#ctor" />
        <element api="P:EasyMailDiscussion.Web.Models.ContactsModel.Contacts" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="easy-mail-discussion-web" module="easy-mail-discussion-web" kind="ConsoleApplication" />
        <namespace api="N:EasyMailDiscussion.Web.Models" />
      </containers>
    </api>
    <api id="M:EasyMailDiscussion.Web.Models.ContactsModel.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="easy-mail-discussion-web" module="easy-mail-discussion-web" kind="ConsoleApplication" />
        <namespace api="N:EasyMailDiscussion.Web.Models" />
        <type api="T:EasyMailDiscussion.Web.Models.ContactsModel" ref="true" />
      </containers>
    </api>
    <api id="P:EasyMailDiscussion.Web.Models.ContactsModel.Contacts">
      <apidata name="Contacts" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Contacts" />
      <setter name="set_Contacts" />
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:EasyMailDiscussion.Common.Database.Contact" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="easy-mail-discussion-web" module="easy-mail-discussion-web" kind="ConsoleApplication" />
        <namespace api="N:EasyMailDiscussion.Web.Models" />
        <type api="T:EasyMailDiscussion.Web.Models.ContactsModel" ref="true" />
      </containers>
    </api>
    <api id="T:EasyMailDiscussion.Web.Models.DiscussionListAssignModel">
      <apidata name="DiscussionListAssignModel" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:EasyMailDiscussion.Web.Models.DiscussionListAssignModel.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:EasyMailDiscussion.Web.Models.DiscussionListAssignModel.GetSubscription(System.Int32)" />
        <element api="M:EasyMailDiscussion.Web.Models.DiscussionListAssignModel.HasSubscription(System.Int32)" />
        <element api="M:EasyMailDiscussion.Web.Models.DiscussionListAssignModel.#ctor" />
        <element api="P:EasyMailDiscussion.Web.Models.DiscussionListAssignModel.DiscussionList" />
        <element api="P:EasyMailDiscussion.Web.Models.DiscussionListAssignModel.Contacts" />
        <element api="P:EasyMailDiscussion.Web.Models.DiscussionListAssignModel.Subscriptions" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="easy-mail-discussion-web" module="easy-mail-discussion-web" kind="ConsoleApplication" />
        <namespace api="N:EasyMailDiscussion.Web.Models" />
      </containers>
    </api>
    <api id="M:EasyMailDiscussion.Web.Models.DiscussionListAssignModel.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="easy-mail-discussion-web" module="easy-mail-discussion-web" kind="ConsoleApplication" />
        <namespace api="N:EasyMailDiscussion.Web.Models" />
        <type api="T:EasyMailDiscussion.Web.Models.DiscussionListAssignModel" ref="true" />
      </containers>
    </api>
    <api id="P:EasyMailDiscussion.Web.Models.DiscussionListAssignModel.Contacts">
      <apidata name="Contacts" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Contacts" />
      <setter name="set_Contacts" />
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:EasyMailDiscussion.Common.Database.Contact" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="easy-mail-discussion-web" module="easy-mail-discussion-web" kind="ConsoleApplication" />
        <namespace api="N:EasyMailDiscussion.Web.Models" />
        <type api="T:EasyMailDiscussion.Web.Models.DiscussionListAssignModel" ref="true" />
      </containers>
    </api>
    <api id="P:EasyMailDiscussion.Web.Models.DiscussionListAssignModel.DiscussionList">
      <apidata name="DiscussionList" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_DiscussionList" />
      <setter name="set_DiscussionList" />
      <returns>
        <type api="T:EasyMailDiscussion.Common.Database.DiscussionList" ref="true" />
      </returns>
      <containers>
        <library assembly="easy-mail-discussion-web" module="easy-mail-discussion-web" kind="ConsoleApplication" />
        <namespace api="N:EasyMailDiscussion.Web.Models" />
        <type api="T:EasyMailDiscussion.Web.Models.DiscussionListAssignModel" ref="true" />
      </containers>
    </api>
    <api id="M:EasyMailDiscussion.Web.Models.DiscussionListAssignModel.GetSubscription(System.Int32)">
      <apidata name="GetSubscription" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="contactID">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:EasyMailDiscussion.Common.Database.SubscriptionStatus" ref="false" />
      </returns>
      <containers>
        <library assembly="easy-mail-discussion-web" module="easy-mail-discussion-web" kind="ConsoleApplication" />
        <namespace api="N:EasyMailDiscussion.Web.Models" />
        <type api="T:EasyMailDiscussion.Web.Models.DiscussionListAssignModel" ref="true" />
      </containers>
    </api>
    <api id="M:EasyMailDiscussion.Web.Models.DiscussionListAssignModel.HasSubscription(System.Int32)">
      <apidata name="HasSubscription" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="contactID">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="easy-mail-discussion-web" module="easy-mail-discussion-web" kind="ConsoleApplication" />
        <namespace api="N:EasyMailDiscussion.Web.Models" />
        <type api="T:EasyMailDiscussion.Web.Models.DiscussionListAssignModel" ref="true" />
      </containers>
    </api>
    <api id="P:EasyMailDiscussion.Web.Models.DiscussionListAssignModel.Subscriptions">
      <apidata name="Subscriptions" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Subscriptions" />
      <setter name="set_Subscriptions" />
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:EasyMailDiscussion.Common.Database.ContactSubscription" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="easy-mail-discussion-web" module="easy-mail-discussion-web" kind="ConsoleApplication" />
        <namespace api="N:EasyMailDiscussion.Web.Models" />
        <type api="T:EasyMailDiscussion.Web.Models.DiscussionListAssignModel" ref="true" />
      </containers>
    </api>
    <api id="T:EasyMailDiscussion.Web.Models.DiscussionListsModel">
      <apidata name="DiscussionListsModel" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:EasyMailDiscussion.Web.Models.DiscussionListsModel.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:EasyMailDiscussion.Web.Models.DiscussionListsModel.#ctor" />
        <element api="P:EasyMailDiscussion.Web.Models.DiscussionListsModel.DiscussionLists" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="easy-mail-discussion-web" module="easy-mail-discussion-web" kind="ConsoleApplication" />
        <namespace api="N:EasyMailDiscussion.Web.Models" />
      </containers>
    </api>
    <api id="M:EasyMailDiscussion.Web.Models.DiscussionListsModel.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="easy-mail-discussion-web" module="easy-mail-discussion-web" kind="ConsoleApplication" />
        <namespace api="N:EasyMailDiscussion.Web.Models" />
        <type api="T:EasyMailDiscussion.Web.Models.DiscussionListsModel" ref="true" />
      </containers>
    </api>
    <api id="P:EasyMailDiscussion.Web.Models.DiscussionListsModel.DiscussionLists">
      <apidata name="DiscussionLists" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_DiscussionLists" />
      <setter name="set_DiscussionLists" />
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:EasyMailDiscussion.Common.Database.DiscussionList" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="easy-mail-discussion-web" module="easy-mail-discussion-web" kind="ConsoleApplication" />
        <namespace api="N:EasyMailDiscussion.Web.Models" />
        <type api="T:EasyMailDiscussion.Web.Models.DiscussionListsModel" ref="true" />
      </containers>
    </api>
    <api id="T:EasyMailDiscussion.Web.Models.EditContactModel">
      <apidata name="EditContactModel" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:EasyMailDiscussion.Web.Models.EditContactModel.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:EasyMailDiscussion.Web.Models.EditContactModel.#ctor" />
        <element api="P:EasyMailDiscussion.Web.Models.EditContactModel.Contact" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="easy-mail-discussion-web" module="easy-mail-discussion-web" kind="ConsoleApplication" />
        <namespace api="N:EasyMailDiscussion.Web.Models" />
      </containers>
    </api>
    <api id="M:EasyMailDiscussion.Web.Models.EditContactModel.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="easy-mail-discussion-web" module="easy-mail-discussion-web" kind="ConsoleApplication" />
        <namespace api="N:EasyMailDiscussion.Web.Models" />
        <type api="T:EasyMailDiscussion.Web.Models.EditContactModel" ref="true" />
      </containers>
    </api>
    <api id="P:EasyMailDiscussion.Web.Models.EditContactModel.Contact">
      <apidata name="Contact" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Contact" />
      <setter name="set_Contact" />
      <returns>
        <type api="T:EasyMailDiscussion.Common.Database.Contact" ref="true" />
      </returns>
      <containers>
        <library assembly="easy-mail-discussion-web" module="easy-mail-discussion-web" kind="ConsoleApplication" />
        <namespace api="N:EasyMailDiscussion.Web.Models" />
        <type api="T:EasyMailDiscussion.Web.Models.EditContactModel" ref="true" />
      </containers>
    </api>
    <api id="T:EasyMailDiscussion.Web.Models.EditDiscussionListModel">
      <apidata name="EditDiscussionListModel" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:EasyMailDiscussion.Web.Models.EditDiscussionListModel.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:EasyMailDiscussion.Web.Models.EditDiscussionListModel.#ctor" />
        <element api="P:EasyMailDiscussion.Web.Models.EditDiscussionListModel.DiscussionList" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="easy-mail-discussion-web" module="easy-mail-discussion-web" kind="ConsoleApplication" />
        <namespace api="N:EasyMailDiscussion.Web.Models" />
      </containers>
    </api>
    <api id="M:EasyMailDiscussion.Web.Models.EditDiscussionListModel.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="easy-mail-discussion-web" module="easy-mail-discussion-web" kind="ConsoleApplication" />
        <namespace api="N:EasyMailDiscussion.Web.Models" />
        <type api="T:EasyMailDiscussion.Web.Models.EditDiscussionListModel" ref="true" />
      </containers>
    </api>
    <api id="P:EasyMailDiscussion.Web.Models.EditDiscussionListModel.DiscussionList">
      <apidata name="DiscussionList" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_DiscussionList" />
      <setter name="set_DiscussionList" />
      <returns>
        <type api="T:EasyMailDiscussion.Common.Database.DiscussionList" ref="true" />
      </returns>
      <containers>
        <library assembly="easy-mail-discussion-web" module="easy-mail-discussion-web" kind="ConsoleApplication" />
        <namespace api="N:EasyMailDiscussion.Web.Models" />
        <type api="T:EasyMailDiscussion.Web.Models.EditDiscussionListModel" ref="true" />
      </containers>
    </api>
    <api id="T:EasyMailDiscussion.Web.Models.ErrorViewModel">
      <apidata name="ErrorViewModel" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:EasyMailDiscussion.Web.Models.ErrorViewModel.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:EasyMailDiscussion.Web.Models.ErrorViewModel.#ctor" />
        <element api="P:EasyMailDiscussion.Web.Models.ErrorViewModel.RequestId" />
        <element api="P:EasyMailDiscussion.Web.Models.ErrorViewModel.ShowRequestId" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="easy-mail-discussion-web" module="easy-mail-discussion-web" kind="ConsoleApplication" />
        <namespace api="N:EasyMailDiscussion.Web.Models" />
      </containers>
    </api>
    <api id="M:EasyMailDiscussion.Web.Models.ErrorViewModel.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="easy-mail-discussion-web" module="easy-mail-discussion-web" kind="ConsoleApplication" />
        <namespace api="N:EasyMailDiscussion.Web.Models" />
        <type api="T:EasyMailDiscussion.Web.Models.ErrorViewModel" ref="true" />
      </containers>
    </api>
    <api id="P:EasyMailDiscussion.Web.Models.ErrorViewModel.RequestId">
      <apidata name="RequestId" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_RequestId" />
      <setter name="set_RequestId" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="easy-mail-discussion-web" module="easy-mail-discussion-web" kind="ConsoleApplication" />
        <namespace api="N:EasyMailDiscussion.Web.Models" />
        <type api="T:EasyMailDiscussion.Web.Models.ErrorViewModel" ref="true" />
      </containers>
    </api>
    <api id="P:EasyMailDiscussion.Web.Models.ErrorViewModel.ShowRequestId">
      <apidata name="ShowRequestId" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ShowRequestId" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="easy-mail-discussion-web" module="easy-mail-discussion-web" kind="ConsoleApplication" />
        <namespace api="N:EasyMailDiscussion.Web.Models" />
        <type api="T:EasyMailDiscussion.Web.Models.ErrorViewModel" ref="true" />
      </containers>
    </api>
    <api id="T:EasyMailDiscussion.Web.Models.HomepageModel">
      <apidata name="HomepageModel" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:EasyMailDiscussion.Web.Models.HomepageModel.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:EasyMailDiscussion.Web.Models.HomepageModel.#ctor" />
        <element api="P:EasyMailDiscussion.Web.Models.HomepageModel.NumberOfDiscussionLists" />
        <element api="P:EasyMailDiscussion.Web.Models.HomepageModel.NumberOfMessages" />
        <element api="P:EasyMailDiscussion.Web.Models.HomepageModel.NumberOfContacts" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="easy-mail-discussion-web" module="easy-mail-discussion-web" kind="ConsoleApplication" />
        <namespace api="N:EasyMailDiscussion.Web.Models" />
      </containers>
    </api>
    <api id="M:EasyMailDiscussion.Web.Models.HomepageModel.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="easy-mail-discussion-web" module="easy-mail-discussion-web" kind="ConsoleApplication" />
        <namespace api="N:EasyMailDiscussion.Web.Models" />
        <type api="T:EasyMailDiscussion.Web.Models.HomepageModel" ref="true" />
      </containers>
    </api>
    <api id="P:EasyMailDiscussion.Web.Models.HomepageModel.NumberOfContacts">
      <apidata name="NumberOfContacts" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_NumberOfContacts" />
      <setter name="set_NumberOfContacts" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="easy-mail-discussion-web" module="easy-mail-discussion-web" kind="ConsoleApplication" />
        <namespace api="N:EasyMailDiscussion.Web.Models" />
        <type api="T:EasyMailDiscussion.Web.Models.HomepageModel" ref="true" />
      </containers>
    </api>
    <api id="P:EasyMailDiscussion.Web.Models.HomepageModel.NumberOfDiscussionLists">
      <apidata name="NumberOfDiscussionLists" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_NumberOfDiscussionLists" />
      <setter name="set_NumberOfDiscussionLists" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="easy-mail-discussion-web" module="easy-mail-discussion-web" kind="ConsoleApplication" />
        <namespace api="N:EasyMailDiscussion.Web.Models" />
        <type api="T:EasyMailDiscussion.Web.Models.HomepageModel" ref="true" />
      </containers>
    </api>
    <api id="P:EasyMailDiscussion.Web.Models.HomepageModel.NumberOfMessages">
      <apidata name="NumberOfMessages" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_NumberOfMessages" />
      <setter name="set_NumberOfMessages" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="easy-mail-discussion-web" module="easy-mail-discussion-web" kind="ConsoleApplication" />
        <namespace api="N:EasyMailDiscussion.Web.Models" />
        <type api="T:EasyMailDiscussion.Web.Models.HomepageModel" ref="true" />
      </containers>
    </api>
    <api id="T:EasyMailDiscussion.Web.Models.MessagePageModel">
      <apidata name="MessagePageModel" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:EasyMailDiscussion.Web.Models.MessagePageModel.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:EasyMailDiscussion.Web.Models.MessagePageModel.#ctor" />
        <element api="P:EasyMailDiscussion.Web.Models.MessagePageModel.Message" />
        <element api="P:EasyMailDiscussion.Web.Models.MessagePageModel.Children" />
        <element api="P:EasyMailDiscussion.Web.Models.MessagePageModel.PageNumber" />
        <element api="P:EasyMailDiscussion.Web.Models.MessagePageModel.TotalPages" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="easy-mail-discussion-web" module="easy-mail-discussion-web" kind="ConsoleApplication" />
        <namespace api="N:EasyMailDiscussion.Web.Models" />
      </containers>
    </api>
    <api id="M:EasyMailDiscussion.Web.Models.MessagePageModel.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="easy-mail-discussion-web" module="easy-mail-discussion-web" kind="ConsoleApplication" />
        <namespace api="N:EasyMailDiscussion.Web.Models" />
        <type api="T:EasyMailDiscussion.Web.Models.MessagePageModel" ref="true" />
      </containers>
    </api>
    <api id="P:EasyMailDiscussion.Web.Models.MessagePageModel.Children">
      <apidata name="Children" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Children" />
      <setter name="set_Children" />
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:EasyMailDiscussion.Common.Database.Message" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="easy-mail-discussion-web" module="easy-mail-discussion-web" kind="ConsoleApplication" />
        <namespace api="N:EasyMailDiscussion.Web.Models" />
        <type api="T:EasyMailDiscussion.Web.Models.MessagePageModel" ref="true" />
      </containers>
    </api>
    <api id="P:EasyMailDiscussion.Web.Models.MessagePageModel.Message">
      <apidata name="Message" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Message" />
      <setter name="set_Message" />
      <returns>
        <type api="T:EasyMailDiscussion.Common.Database.Message" ref="true" />
      </returns>
      <containers>
        <library assembly="easy-mail-discussion-web" module="easy-mail-discussion-web" kind="ConsoleApplication" />
        <namespace api="N:EasyMailDiscussion.Web.Models" />
        <type api="T:EasyMailDiscussion.Web.Models.MessagePageModel" ref="true" />
      </containers>
    </api>
    <api id="P:EasyMailDiscussion.Web.Models.MessagePageModel.PageNumber">
      <apidata name="PageNumber" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_PageNumber" />
      <setter name="set_PageNumber" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="easy-mail-discussion-web" module="easy-mail-discussion-web" kind="ConsoleApplication" />
        <namespace api="N:EasyMailDiscussion.Web.Models" />
        <type api="T:EasyMailDiscussion.Web.Models.MessagePageModel" ref="true" />
      </containers>
    </api>
    <api id="P:EasyMailDiscussion.Web.Models.MessagePageModel.TotalPages">
      <apidata name="TotalPages" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_TotalPages" />
      <setter name="set_TotalPages" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="easy-mail-discussion-web" module="easy-mail-discussion-web" kind="ConsoleApplication" />
        <namespace api="N:EasyMailDiscussion.Web.Models" />
        <type api="T:EasyMailDiscussion.Web.Models.MessagePageModel" ref="true" />
      </containers>
    </api>
    <api id="T:EasyMailDiscussion.Web.Models.RemoveContactModel">
      <apidata name="RemoveContactModel" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:EasyMailDiscussion.Web.Models.RemoveContactModel.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:EasyMailDiscussion.Web.Models.RemoveContactModel.#ctor" />
        <element api="P:EasyMailDiscussion.Web.Models.RemoveContactModel.Contact" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="easy-mail-discussion-web" module="easy-mail-discussion-web" kind="ConsoleApplication" />
        <namespace api="N:EasyMailDiscussion.Web.Models" />
      </containers>
    </api>
    <api id="M:EasyMailDiscussion.Web.Models.RemoveContactModel.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="easy-mail-discussion-web" module="easy-mail-discussion-web" kind="ConsoleApplication" />
        <namespace api="N:EasyMailDiscussion.Web.Models" />
        <type api="T:EasyMailDiscussion.Web.Models.RemoveContactModel" ref="true" />
      </containers>
    </api>
    <api id="P:EasyMailDiscussion.Web.Models.RemoveContactModel.Contact">
      <apidata name="Contact" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Contact" />
      <setter name="set_Contact" />
      <returns>
        <type api="T:EasyMailDiscussion.Common.Database.Contact" ref="true" />
      </returns>
      <containers>
        <library assembly="easy-mail-discussion-web" module="easy-mail-discussion-web" kind="ConsoleApplication" />
        <namespace api="N:EasyMailDiscussion.Web.Models" />
        <type api="T:EasyMailDiscussion.Web.Models.RemoveContactModel" ref="true" />
      </containers>
    </api>
    <api id="T:EasyMailDiscussion.Web.Models.RemoveDiscussionListModel">
      <apidata name="RemoveDiscussionListModel" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:EasyMailDiscussion.Web.Models.RemoveDiscussionListModel.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:EasyMailDiscussion.Web.Models.RemoveDiscussionListModel.#ctor" />
        <element api="P:EasyMailDiscussion.Web.Models.RemoveDiscussionListModel.DiscussionList" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="easy-mail-discussion-web" module="easy-mail-discussion-web" kind="ConsoleApplication" />
        <namespace api="N:EasyMailDiscussion.Web.Models" />
      </containers>
    </api>
    <api id="M:EasyMailDiscussion.Web.Models.RemoveDiscussionListModel.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="easy-mail-discussion-web" module="easy-mail-discussion-web" kind="ConsoleApplication" />
        <namespace api="N:EasyMailDiscussion.Web.Models" />
        <type api="T:EasyMailDiscussion.Web.Models.RemoveDiscussionListModel" ref="true" />
      </containers>
    </api>
    <api id="P:EasyMailDiscussion.Web.Models.RemoveDiscussionListModel.DiscussionList">
      <apidata name="DiscussionList" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_DiscussionList" />
      <setter name="set_DiscussionList" />
      <returns>
        <type api="T:EasyMailDiscussion.Common.Database.DiscussionList" ref="true" />
      </returns>
      <containers>
        <library assembly="easy-mail-discussion-web" module="easy-mail-discussion-web" kind="ConsoleApplication" />
        <namespace api="N:EasyMailDiscussion.Web.Models" />
        <type api="T:EasyMailDiscussion.Web.Models.RemoveDiscussionListModel" ref="true" />
      </containers>
    </api>
    <api id="N:EasyMailDiscussion.Web.Models.Forms">
      <apidata name="EasyMailDiscussion.Web.Models.Forms" group="namespace" />
      <elements>
        <element api="T:EasyMailDiscussion.Web.Models.Forms.ContactForm" />
        <element api="T:EasyMailDiscussion.Web.Models.Forms.DiscussionListAssignForm" />
        <element api="T:EasyMailDiscussion.Web.Models.Forms.DiscussionListForm" />
      </elements>
    </api>
    <api id="T:EasyMailDiscussion.Web.Models.Forms.ContactForm">
      <apidata name="ContactForm" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:EasyMailDiscussion.Web.Models.Forms.ContactForm.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:EasyMailDiscussion.Web.Models.Forms.ContactForm.#ctor" />
        <element api="P:EasyMailDiscussion.Web.Models.Forms.ContactForm.ID" />
        <element api="P:EasyMailDiscussion.Web.Models.Forms.ContactForm.Name" />
        <element api="P:EasyMailDiscussion.Web.Models.Forms.ContactForm.Email" />
        <element api="P:EasyMailDiscussion.Web.Models.Forms.ContactForm.Activated" />
        <element api="P:EasyMailDiscussion.Web.Models.Forms.ContactForm.ActivatedChecked" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="easy-mail-discussion-web" module="easy-mail-discussion-web" kind="ConsoleApplication" />
        <namespace api="N:EasyMailDiscussion.Web.Models.Forms" />
      </containers>
    </api>
    <api id="M:EasyMailDiscussion.Web.Models.Forms.ContactForm.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="easy-mail-discussion-web" module="easy-mail-discussion-web" kind="ConsoleApplication" />
        <namespace api="N:EasyMailDiscussion.Web.Models.Forms" />
        <type api="T:EasyMailDiscussion.Web.Models.Forms.ContactForm" ref="true" />
      </containers>
    </api>
    <api id="P:EasyMailDiscussion.Web.Models.Forms.ContactForm.Activated">
      <apidata name="Activated" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Activated" />
      <setter name="set_Activated" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="easy-mail-discussion-web" module="easy-mail-discussion-web" kind="ConsoleApplication" />
        <namespace api="N:EasyMailDiscussion.Web.Models.Forms" />
        <type api="T:EasyMailDiscussion.Web.Models.Forms.ContactForm" ref="true" />
      </containers>
    </api>
    <api id="P:EasyMailDiscussion.Web.Models.Forms.ContactForm.ActivatedChecked">
      <apidata name="ActivatedChecked" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ActivatedChecked" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="easy-mail-discussion-web" module="easy-mail-discussion-web" kind="ConsoleApplication" />
        <namespace api="N:EasyMailDiscussion.Web.Models.Forms" />
        <type api="T:EasyMailDiscussion.Web.Models.Forms.ContactForm" ref="true" />
      </containers>
    </api>
    <api id="P:EasyMailDiscussion.Web.Models.Forms.ContactForm.Email">
      <apidata name="Email" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Email" />
      <setter name="set_Email" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="easy-mail-discussion-web" module="easy-mail-discussion-web" kind="ConsoleApplication" />
        <namespace api="N:EasyMailDiscussion.Web.Models.Forms" />
        <type api="T:EasyMailDiscussion.Web.Models.Forms.ContactForm" ref="true" />
      </containers>
    </api>
    <api id="P:EasyMailDiscussion.Web.Models.Forms.ContactForm.ID">
      <apidata name="ID" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ID" />
      <setter name="set_ID" />
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.Int32" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="easy-mail-discussion-web" module="easy-mail-discussion-web" kind="ConsoleApplication" />
        <namespace api="N:EasyMailDiscussion.Web.Models.Forms" />
        <type api="T:EasyMailDiscussion.Web.Models.Forms.ContactForm" ref="true" />
      </containers>
    </api>
    <api id="P:EasyMailDiscussion.Web.Models.Forms.ContactForm.Name">
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Name" />
      <setter name="set_Name" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="easy-mail-discussion-web" module="easy-mail-discussion-web" kind="ConsoleApplication" />
        <namespace api="N:EasyMailDiscussion.Web.Models.Forms" />
        <type api="T:EasyMailDiscussion.Web.Models.Forms.ContactForm" ref="true" />
      </containers>
    </api>
    <api id="T:EasyMailDiscussion.Web.Models.Forms.DiscussionListAssignForm">
      <apidata name="DiscussionListAssignForm" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:EasyMailDiscussion.Web.Models.Forms.DiscussionListAssignForm.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="F:EasyMailDiscussion.Web.Models.Forms.DiscussionListAssignForm.UNCHECKED_VALUE" />
        <element api="F:EasyMailDiscussion.Web.Models.Forms.DiscussionListAssignForm.CHECKED_VALUE" />
        <element api="M:EasyMailDiscussion.Web.Models.Forms.DiscussionListAssignForm.#ctor" />
        <element api="P:EasyMailDiscussion.Web.Models.Forms.DiscussionListAssignForm.DiscussionListID" />
        <element api="P:EasyMailDiscussion.Web.Models.Forms.DiscussionListAssignForm.ContactID" />
        <element api="P:EasyMailDiscussion.Web.Models.Forms.DiscussionListAssignForm.Assigned" />
        <element api="P:EasyMailDiscussion.Web.Models.Forms.DiscussionListAssignForm.Assignments" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="easy-mail-discussion-web" module="easy-mail-discussion-web" kind="ConsoleApplication" />
        <namespace api="N:EasyMailDiscussion.Web.Models.Forms" />
      </containers>
    </api>
    <api id="M:EasyMailDiscussion.Web.Models.Forms.DiscussionListAssignForm.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="easy-mail-discussion-web" module="easy-mail-discussion-web" kind="ConsoleApplication" />
        <namespace api="N:EasyMailDiscussion.Web.Models.Forms" />
        <type api="T:EasyMailDiscussion.Web.Models.Forms.DiscussionListAssignForm" ref="true" />
      </containers>
    </api>
    <api id="P:EasyMailDiscussion.Web.Models.Forms.DiscussionListAssignForm.Assigned">
      <apidata name="Assigned" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Assigned" />
      <setter name="set_Assigned" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Int32" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="easy-mail-discussion-web" module="easy-mail-discussion-web" kind="ConsoleApplication" />
        <namespace api="N:EasyMailDiscussion.Web.Models.Forms" />
        <type api="T:EasyMailDiscussion.Web.Models.Forms.DiscussionListAssignForm" ref="true" />
      </containers>
    </api>
    <api id="P:EasyMailDiscussion.Web.Models.Forms.DiscussionListAssignForm.Assignments">
      <apidata name="Assignments" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Assignments" />
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.ValueTuple`2" ref="false">
              <specialization>
                <type elementName="ContactID" api="T:System.Int32" ref="false" />
                <type elementName="IsAssigned" api="T:System.Boolean" ref="false" />
              </specialization>
            </type>
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="easy-mail-discussion-web" module="easy-mail-discussion-web" kind="ConsoleApplication" />
        <namespace api="N:EasyMailDiscussion.Web.Models.Forms" />
        <type api="T:EasyMailDiscussion.Web.Models.Forms.DiscussionListAssignForm" ref="true" />
      </containers>
    </api>
    <api id="F:EasyMailDiscussion.Web.Models.Forms.DiscussionListAssignForm.CHECKED_VALUE">
      <apidata name="CHECKED_VALUE" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <value>Y</value>
      <containers>
        <library assembly="easy-mail-discussion-web" module="easy-mail-discussion-web" kind="ConsoleApplication" />
        <namespace api="N:EasyMailDiscussion.Web.Models.Forms" />
        <type api="T:EasyMailDiscussion.Web.Models.Forms.DiscussionListAssignForm" ref="true" />
      </containers>
    </api>
    <api id="P:EasyMailDiscussion.Web.Models.Forms.DiscussionListAssignForm.ContactID">
      <apidata name="ContactID" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ContactID" />
      <setter name="set_ContactID" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Int32" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="easy-mail-discussion-web" module="easy-mail-discussion-web" kind="ConsoleApplication" />
        <namespace api="N:EasyMailDiscussion.Web.Models.Forms" />
        <type api="T:EasyMailDiscussion.Web.Models.Forms.DiscussionListAssignForm" ref="true" />
      </containers>
    </api>
    <api id="P:EasyMailDiscussion.Web.Models.Forms.DiscussionListAssignForm.DiscussionListID">
      <apidata name="DiscussionListID" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_DiscussionListID" />
      <setter name="set_DiscussionListID" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="easy-mail-discussion-web" module="easy-mail-discussion-web" kind="ConsoleApplication" />
        <namespace api="N:EasyMailDiscussion.Web.Models.Forms" />
        <type api="T:EasyMailDiscussion.Web.Models.Forms.DiscussionListAssignForm" ref="true" />
      </containers>
    </api>
    <api id="F:EasyMailDiscussion.Web.Models.Forms.DiscussionListAssignForm.UNCHECKED_VALUE">
      <apidata name="UNCHECKED_VALUE" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <value>N</value>
      <containers>
        <library assembly="easy-mail-discussion-web" module="easy-mail-discussion-web" kind="ConsoleApplication" />
        <namespace api="N:EasyMailDiscussion.Web.Models.Forms" />
        <type api="T:EasyMailDiscussion.Web.Models.Forms.DiscussionListAssignForm" ref="true" />
      </containers>
    </api>
    <api id="T:EasyMailDiscussion.Web.Models.Forms.DiscussionListForm">
      <apidata name="DiscussionListForm" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:EasyMailDiscussion.Web.Models.Forms.DiscussionListForm.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:EasyMailDiscussion.Web.Models.Forms.DiscussionListForm.#ctor" />
        <element api="P:EasyMailDiscussion.Web.Models.Forms.DiscussionListForm.ID" />
        <element api="P:EasyMailDiscussion.Web.Models.Forms.DiscussionListForm.Name" />
        <element api="P:EasyMailDiscussion.Web.Models.Forms.DiscussionListForm.Description" />
        <element api="P:EasyMailDiscussion.Web.Models.Forms.DiscussionListForm.BaseEmailAddress" />
        <element api="P:EasyMailDiscussion.Web.Models.Forms.DiscussionListForm.UserName" />
        <element api="P:EasyMailDiscussion.Web.Models.Forms.DiscussionListForm.Password" />
        <element api="P:EasyMailDiscussion.Web.Models.Forms.DiscussionListForm.IncomingMailServer" />
        <element api="P:EasyMailDiscussion.Web.Models.Forms.DiscussionListForm.IncomingMailPort" />
        <element api="P:EasyMailDiscussion.Web.Models.Forms.DiscussionListForm.OutgoingMailServer" />
        <element api="P:EasyMailDiscussion.Web.Models.Forms.DiscussionListForm.OutgoingMailPort" />
        <element api="P:EasyMailDiscussion.Web.Models.Forms.DiscussionListForm.UseSSL" />
        <element api="P:EasyMailDiscussion.Web.Models.Forms.DiscussionListForm.UseSSLChecked" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="easy-mail-discussion-web" module="easy-mail-discussion-web" kind="ConsoleApplication" />
        <namespace api="N:EasyMailDiscussion.Web.Models.Forms" />
      </containers>
    </api>
    <api id="M:EasyMailDiscussion.Web.Models.Forms.DiscussionListForm.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="easy-mail-discussion-web" module="easy-mail-discussion-web" kind="ConsoleApplication" />
        <namespace api="N:EasyMailDiscussion.Web.Models.Forms" />
        <type api="T:EasyMailDiscussion.Web.Models.Forms.DiscussionListForm" ref="true" />
      </containers>
    </api>
    <api id="P:EasyMailDiscussion.Web.Models.Forms.DiscussionListForm.BaseEmailAddress">
      <apidata name="BaseEmailAddress" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_BaseEmailAddress" />
      <setter name="set_BaseEmailAddress" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="easy-mail-discussion-web" module="easy-mail-discussion-web" kind="ConsoleApplication" />
        <namespace api="N:EasyMailDiscussion.Web.Models.Forms" />
        <type api="T:EasyMailDiscussion.Web.Models.Forms.DiscussionListForm" ref="true" />
      </containers>
    </api>
    <api id="P:EasyMailDiscussion.Web.Models.Forms.DiscussionListForm.Description">
      <apidata name="Description" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Description" />
      <setter name="set_Description" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="easy-mail-discussion-web" module="easy-mail-discussion-web" kind="ConsoleApplication" />
        <namespace api="N:EasyMailDiscussion.Web.Models.Forms" />
        <type api="T:EasyMailDiscussion.Web.Models.Forms.DiscussionListForm" ref="true" />
      </containers>
    </api>
    <api id="P:EasyMailDiscussion.Web.Models.Forms.DiscussionListForm.ID">
      <apidata name="ID" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ID" />
      <setter name="set_ID" />
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.Int32" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="easy-mail-discussion-web" module="easy-mail-discussion-web" kind="ConsoleApplication" />
        <namespace api="N:EasyMailDiscussion.Web.Models.Forms" />
        <type api="T:EasyMailDiscussion.Web.Models.Forms.DiscussionListForm" ref="true" />
      </containers>
    </api>
    <api id="P:EasyMailDiscussion.Web.Models.Forms.DiscussionListForm.IncomingMailPort">
      <apidata name="IncomingMailPort" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_IncomingMailPort" />
      <setter name="set_IncomingMailPort" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="easy-mail-discussion-web" module="easy-mail-discussion-web" kind="ConsoleApplication" />
        <namespace api="N:EasyMailDiscussion.Web.Models.Forms" />
        <type api="T:EasyMailDiscussion.Web.Models.Forms.DiscussionListForm" ref="true" />
      </containers>
    </api>
    <api id="P:EasyMailDiscussion.Web.Models.Forms.DiscussionListForm.IncomingMailServer">
      <apidata name="IncomingMailServer" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_IncomingMailServer" />
      <setter name="set_IncomingMailServer" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="easy-mail-discussion-web" module="easy-mail-discussion-web" kind="ConsoleApplication" />
        <namespace api="N:EasyMailDiscussion.Web.Models.Forms" />
        <type api="T:EasyMailDiscussion.Web.Models.Forms.DiscussionListForm" ref="true" />
      </containers>
    </api>
    <api id="P:EasyMailDiscussion.Web.Models.Forms.DiscussionListForm.Name">
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Name" />
      <setter name="set_Name" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="easy-mail-discussion-web" module="easy-mail-discussion-web" kind="ConsoleApplication" />
        <namespace api="N:EasyMailDiscussion.Web.Models.Forms" />
        <type api="T:EasyMailDiscussion.Web.Models.Forms.DiscussionListForm" ref="true" />
      </containers>
    </api>
    <api id="P:EasyMailDiscussion.Web.Models.Forms.DiscussionListForm.OutgoingMailPort">
      <apidata name="OutgoingMailPort" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_OutgoingMailPort" />
      <setter name="set_OutgoingMailPort" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="easy-mail-discussion-web" module="easy-mail-discussion-web" kind="ConsoleApplication" />
        <namespace api="N:EasyMailDiscussion.Web.Models.Forms" />
        <type api="T:EasyMailDiscussion.Web.Models.Forms.DiscussionListForm" ref="true" />
      </containers>
    </api>
    <api id="P:EasyMailDiscussion.Web.Models.Forms.DiscussionListForm.OutgoingMailServer">
      <apidata name="OutgoingMailServer" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_OutgoingMailServer" />
      <setter name="set_OutgoingMailServer" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="easy-mail-discussion-web" module="easy-mail-discussion-web" kind="ConsoleApplication" />
        <namespace api="N:EasyMailDiscussion.Web.Models.Forms" />
        <type api="T:EasyMailDiscussion.Web.Models.Forms.DiscussionListForm" ref="true" />
      </containers>
    </api>
    <api id="P:EasyMailDiscussion.Web.Models.Forms.DiscussionListForm.Password">
      <apidata name="Password" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Password" />
      <setter name="set_Password" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="easy-mail-discussion-web" module="easy-mail-discussion-web" kind="ConsoleApplication" />
        <namespace api="N:EasyMailDiscussion.Web.Models.Forms" />
        <type api="T:EasyMailDiscussion.Web.Models.Forms.DiscussionListForm" ref="true" />
      </containers>
    </api>
    <api id="P:EasyMailDiscussion.Web.Models.Forms.DiscussionListForm.UserName">
      <apidata name="UserName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_UserName" />
      <setter name="set_UserName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="easy-mail-discussion-web" module="easy-mail-discussion-web" kind="ConsoleApplication" />
        <namespace api="N:EasyMailDiscussion.Web.Models.Forms" />
        <type api="T:EasyMailDiscussion.Web.Models.Forms.DiscussionListForm" ref="true" />
      </containers>
    </api>
    <api id="P:EasyMailDiscussion.Web.Models.Forms.DiscussionListForm.UseSSL">
      <apidata name="UseSSL" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_UseSSL" />
      <setter name="set_UseSSL" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="easy-mail-discussion-web" module="easy-mail-discussion-web" kind="ConsoleApplication" />
        <namespace api="N:EasyMailDiscussion.Web.Models.Forms" />
        <type api="T:EasyMailDiscussion.Web.Models.Forms.DiscussionListForm" ref="true" />
      </containers>
    </api>
    <api id="P:EasyMailDiscussion.Web.Models.Forms.DiscussionListForm.UseSSLChecked">
      <apidata name="UseSSLChecked" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_UseSSLChecked" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="easy-mail-discussion-web" module="easy-mail-discussion-web" kind="ConsoleApplication" />
        <namespace api="N:EasyMailDiscussion.Web.Models.Forms" />
        <type api="T:EasyMailDiscussion.Web.Models.Forms.DiscussionListForm" ref="true" />
      </containers>
    </api>
    <api id="N:EasyMailDiscussion.Web.Worker">
      <apidata name="EasyMailDiscussion.Web.Worker" group="namespace" />
      <elements>
        <element api="T:EasyMailDiscussion.Web.Worker.EmailFetcher" />
        <element api="T:EasyMailDiscussion.Web.Worker.Onboarder" />
      </elements>
    </api>
    <api id="T:EasyMailDiscussion.Web.Worker.EmailFetcher">
      <apidata name="EmailFetcher" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:EasyMailDiscussion.Web.Worker.EmailFetcher.#ctor" />
      <family>
        <ancestors>
          <type api="T:Microsoft.Extensions.Hosting.BackgroundService" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:EasyMailDiscussion.Web.Worker.EmailFetcher.ExecuteAsync(System.Threading.CancellationToken)" />
        <element api="M:EasyMailDiscussion.Web.Worker.EmailFetcher.#ctor" />
      </elements>
      <containers>
        <library assembly="easy-mail-discussion-web" module="easy-mail-discussion-web" kind="ConsoleApplication" />
        <namespace api="N:EasyMailDiscussion.Web.Worker" />
      </containers>
    </api>
    <api id="M:EasyMailDiscussion.Web.Worker.EmailFetcher.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="easy-mail-discussion-web" module="easy-mail-discussion-web" kind="ConsoleApplication" />
        <namespace api="N:EasyMailDiscussion.Web.Worker" />
        <type api="T:EasyMailDiscussion.Web.Worker.EmailFetcher" ref="true" />
      </containers>
    </api>
    <api id="M:EasyMailDiscussion.Web.Worker.EmailFetcher.ExecuteAsync(System.Threading.CancellationToken)">
      <apidata name="ExecuteAsync" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="stoppingToken">
          <type api="T:System.Threading.CancellationToken" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task" ref="true" />
      </returns>
      <containers>
        <library assembly="easy-mail-discussion-web" module="easy-mail-discussion-web" kind="ConsoleApplication" />
        <namespace api="N:EasyMailDiscussion.Web.Worker" />
        <type api="T:EasyMailDiscussion.Web.Worker.EmailFetcher" ref="true" />
      </containers>
    </api>
    <api id="T:EasyMailDiscussion.Web.Worker.Onboarder">
      <apidata name="Onboarder" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:EasyMailDiscussion.Web.Worker.Onboarder.#ctor" />
      <family>
        <ancestors>
          <type api="T:Microsoft.Extensions.Hosting.BackgroundService" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:EasyMailDiscussion.Web.Worker.Onboarder.ExecuteAsync(System.Threading.CancellationToken)" />
        <element api="M:EasyMailDiscussion.Web.Worker.Onboarder.#ctor" />
      </elements>
      <containers>
        <library assembly="easy-mail-discussion-web" module="easy-mail-discussion-web" kind="ConsoleApplication" />
        <namespace api="N:EasyMailDiscussion.Web.Worker" />
      </containers>
    </api>
    <api id="M:EasyMailDiscussion.Web.Worker.Onboarder.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="easy-mail-discussion-web" module="easy-mail-discussion-web" kind="ConsoleApplication" />
        <namespace api="N:EasyMailDiscussion.Web.Worker" />
        <type api="T:EasyMailDiscussion.Web.Worker.Onboarder" ref="true" />
      </containers>
    </api>
    <api id="M:EasyMailDiscussion.Web.Worker.Onboarder.ExecuteAsync(System.Threading.CancellationToken)">
      <apidata name="ExecuteAsync" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="stoppingToken">
          <type api="T:System.Threading.CancellationToken" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task" ref="true" />
      </returns>
      <containers>
        <library assembly="easy-mail-discussion-web" module="easy-mail-discussion-web" kind="ConsoleApplication" />
        <namespace api="N:EasyMailDiscussion.Web.Worker" />
        <type api="T:EasyMailDiscussion.Web.Worker.Onboarder" ref="true" />
      </containers>
    </api>
  </apis>
</reflection>