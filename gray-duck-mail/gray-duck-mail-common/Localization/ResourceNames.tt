<#@ template language="C#" debug="true" hostspecific="true" #>
<#@ assembly name="Microsoft.VisualStudio.Shell.Interop.8.0" #>
<#@ assembly name="EnvDTE" #>
<#@ assembly name="EnvDTE80" #>
<#@ assembly name="VSLangProj" #>
<#@ import namespace="Microsoft.VisualStudio.Shell.Interop" #>
<#@ import namespace="EnvDTE" #>
<#@ import namespace="EnvDTE80" #>
<#@ import namespace="Microsoft.VisualStudio.TextTemplating" #>
<#@ assembly name="System.Core" #>
<#@ assembly name="System.Data" #>
<#@ assembly name="System.Data.DataSetExtensions" #>
<#@ assembly name="System.Xml" #>
<#@ assembly name="System.Xml.Linq" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.Data" #>
<#@ import namespace="System.Data.SqlClient" #>
<#@ import namespace="System.Xml" #>
<#@ import namespace="System.Xml.Linq" #>
<#@ import namespace="System.IO" #>
<#@ output extension=".cs" #>
<#

var hostServiceProvider = (IServiceProvider)this.Host;
var dte = (DTE)hostServiceProvider.GetService(typeof(DTE));

var solutionFolder = Path.GetDirectoryName(dte.Solution.FullName);
var doc = XDocument.Load(solutionFolder + @"\gray-duck-mail-common\Localization\Resources.resx");
var attributes = doc.Root.Elements().Where(e => e.Name == "data").SelectMany(e => e.Attributes()).Where(a => a.Name == "name").Select(a => new { Name = a.Name, Value = a.Value });

#>

namespace GrayDuckMail.Common.Localization
{
	/// <summary> Values that represent resource names as used in <see cref="Localization.Resources" />. </summary>
    /// <remarks> This is an automatically generated class. </remarks>
	public enum ResourceName
	{
		/// <summary> The default value. </summary>
		Undefined = 0,
<#
		foreach (var a in attributes)
		{
#>
		/// <summary> <#= a.Value #> </summary>
		<#= a.Value #>,
<#
		}
#>
	}
}