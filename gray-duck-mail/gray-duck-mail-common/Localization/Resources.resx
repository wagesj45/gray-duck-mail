<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ApplicationName" xml:space="preserve">
    <value>Gray Duck Mail</value>
  </data>
  <data name="Exception_DBNotCreated" xml:space="preserve">
    <value>Could not create database file.</value>
  </data>
  <data name="Exception_FormatNotDetermined" xml:space="preserve">
    <value>Could not determine the formatting of the message.</value>
  </data>
  <data name="Exception_MalformedDatabase" xml:space="preserve">
    <value>The file upload was not in the correct SQLite file format.</value>
  </data>
  <data name="Exception_MalformedUpload" xml:space="preserve">
    <value>The file uploaded is missing or was malformed.</value>
  </data>
  <data name="Exception_NoSearchTerm" xml:space="preserve">
    <value>No search term was provided.</value>
  </data>
  <data name="Exception_PropertySelectorResolutionError" xml:space="preserve">
    <value>The property selector was unable to resolve to a property name.</value>
  </data>
  <data name="Logger_CreatingEmailWrapper" xml:space="preserve">
    <value>Creating email wrapper object.</value>
  </data>
  <data name="Logger_DeliveryStatusDetected" xml:space="preserve">
    <value>Message is a multipart message with at least one 'delivery-status' section.</value>
  </data>
  <data name="Logger_Disconnecting" xml:space="preserve">
    <value>Disconnecting.</value>
  </data>
  <data name="Logger_DisposingIMAP" xml:space="preserve">
    <value>IMAP client disposing.</value>
  </data>
  <data name="Logger_DisposingPOP3" xml:space="preserve">
    <value>POP3 Client disposing.</value>
  </data>
  <data name="Logger_DisposingWrapper" xml:space="preserve">
    <value>Disposing of the client wrapper object.</value>
  </data>
  <data name="Logger_EmptyDiscussionList" xml:space="preserve">
    <value>The discussion list is empty.</value>
  </data>
  <data name="Logger_FailedDeliveryDetected" xml:space="preserve">
    <value>A failed delivery was detected.</value>
  </data>
  <data name="Logger_FailureDetectedUnknownRecipient" xml:space="preserve">
    <value>The bounced email contains a failure report, but an unknown recipient status group.</value>
  </data>
  <data name="Logger_Format_AssigningContact" xml:space="preserve">
    <value>Assigning Contact {0} to Discussion List {1}.</value>
  </data>
  <data name="Logger_Format_AssigningMimeMessageIndex" xml:space="preserve">
    <value>Assigning index {0} to {1}.</value>
  </data>
  <data name="Logger_Format_AuthenticatingWith" xml:space="preserve">
    <value>Authenticating with {0}:{1}.</value>
  </data>
  <data name="Logger_Format_ConnectingTo" xml:space="preserve">
    <value>Connecting to {0}:{1}.</value>
  </data>
  <data name="Logger_Format_CouldNotFindContact" xml:space="preserve">
    <value>Could not find contact with ID = {0}.</value>
  </data>
  <data name="Logger_Format_CouldNotFindDiscussionList" xml:space="preserve">
    <value>Could not find discussion list with ID = {0}</value>
  </data>
  <data name="Logger_Format_CreatingDB" xml:space="preserve">
    <value>Creating db file at {0}.</value>
  </data>
  <data name="Logger_Format_DBCreated" xml:space="preserve">
    <value>Database file created at {0}.</value>
  </data>
  <data name="Logger_Format_DBNotCreated" xml:space="preserve">
    <value>Could not create database file at {0}.</value>
  </data>
  <data name="Logger_Format_DeletingMessage" xml:space="preserve">
    <value>Deleting message {0}.</value>
  </data>
  <data name="Logger_Format_FailureStatusGroupsLine" xml:space="preserve">
    <value>-- {0}: {1}</value>
  </data>
  <data name="Logger_Format_FormInputMalformed" xml:space="preserve">
    <value>Form input was malformed or missing for {0}.</value>
  </data>
  <data name="Logger_Format_InvalidUnsubscriptionContact" xml:space="preserve">
    <value>Invalid unsubscription request for non-existant contact with ID {0}.</value>
  </data>
  <data name="Logger_Format_InvalidUnsubscriptionDiscussionList" xml:space="preserve">
    <value>Invalid unsubscription request for non-existant discussion list with ID {0}.</value>
  </data>
  <data name="Logger_Format_InvalidUnsubscriptionSubscriptionStatus" xml:space="preserve">
    <value>Invalid unsubscription status for contact with ID {0} and discussion list {1} due to subscription status {2}.</value>
  </data>
  <data name="Logger_Format_LoadingAssembly" xml:space="preserve">
    <value>Loading assembly {0}.</value>
  </data>
  <data name="Logger_Format_PerformingFuzzySearch" xml:space="preserve">
    <value>Performing fuzzy search: {0}</value>
  </data>
  <data name="Logger_Format_SendingOnboardingEmail" xml:space="preserve">
    <value>Sending onboarding email to {0} ({1}).</value>
  </data>
  <data name="Logger_Format_SendingOwnerNotification" xml:space="preserve">
    <value>Sending a notication to the discussion list owner that {0} ({1}) has requested access to {2}.</value>
  </data>
  <data name="Logger_Format_SendingSubscriptionConfirmation" xml:space="preserve">
    <value>Sending the subscription confirmation email to {0} ({1}).</value>
  </data>
  <data name="Logger_Format_SendingTest" xml:space="preserve">
    <value>Sending a test Owner Notification email to discussion list {0}.</value>
  </data>
  <data name="Logger_Format_SendingUnsubscriptionConfirmation" xml:space="preserve">
    <value>Sending the subscription confirmation email to {0} ({1}).</value>
  </data>
  <data name="Logger_Format_ServingPage" xml:space="preserve">
    <value>Serving page '{0}'</value>
  </data>
  <data name="Logger_Format_TemplateProcessed" xml:space="preserve">
    <value>Email template processed: {0}.</value>
  </data>
  <data name="Logger_Format_UnassigningContact" xml:space="preserve">
    <value>Removing Contact {0} to Discussion List {1}.</value>
  </data>
  <data name="Logger_Format_UserUnsubscribing" xml:space="preserve">
    <value>User {0} unsubscribing from {1}.</value>
  </data>
  <data name="Logger_FoundResources" xml:space="preserve">
    <value>Found the following resource names in the assembly manifest:</value>
  </data>
  <data name="Logger_FoundResourcesLine" xml:space="preserve">
    <value>-- {0}</value>
  </data>
  <data name="Logger_GeneratingEmail" xml:space="preserve">
    <value>Generating an email.</value>
  </data>
  <data name="Logger_GettingMessages" xml:space="preserve">
    <value>Getting messages.</value>
  </data>
  <data name="Logger_InitializingControllerDatabase" xml:space="preserve">
    <value>Initializing database for controller.</value>
  </data>
  <data name="Logger_InvalidUnsubscriptionSubscription" xml:space="preserve">
    <value>Invalid unsubscription request. No subscription status found.</value>
  </data>
  <data name="Logger_LoadingHTMLTemplate" xml:space="preserve">
    <value>Loading main HTML email template.</value>
  </data>
  <data name="Logger_MessageContainsHTML" xml:space="preserve">
    <value>Mesasge body determined to contain HTML.</value>
  </data>
  <data name="Logger_MessageContainsPlainText" xml:space="preserve">
    <value>Message body determined to contain plain text.</value>
  </data>
  <data name="Logger_RelayingMessage" xml:space="preserve">
    <value>Relaying message to {0} ({1})</value>
  </data>
  <data name="Logger_RequestOnExternalPort" xml:space="preserve">
    <value>The request is being processed from the designated external port. Request Origin: {0}</value>
  </data>
  <data name="Logger_RequestOnInternalPort" xml:space="preserve">
    <value>The request is being processed from the designated internal port.</value>
  </data>
  <data name="Logger_RequestOnUnknownPort" xml:space="preserve">
    <value>The request is being processed from an unknown port ({0})). The docker container is likely misconfigured. Remote Origin: {1}</value>
  </data>
  <data name="Logger_SavingAssignments" xml:space="preserve">
    <value>Saving assignments.</value>
  </data>
  <data name="Logger_SMTPNotConnected" xml:space="preserve">
    <value>The SMTP client is not connected. Connecting now.</value>
  </data>
  <data name="Logger_TemplateInMemory" xml:space="preserve">
    <value>Email template read into memory.</value>
  </data>
  <data name="Logger_UnknownClientType" xml:space="preserve">
    <value>An unknown client type was requested.</value>
  </data>
  <data name="Logger_UsingIMAP" xml:space="preserve">
    <value>Using IMAP client.</value>
  </data>
  <data name="Logger_UsingPOP3" xml:space="preserve">
    <value>Using POP3 client.</value>
  </data>
  <data name="Mail_Format_HTMLUnsubscribeEmailMessage" xml:space="preserve">
    <value>This message is part of the '{0}' discussion list. You can unsubscribe by sending any message to &lt;a href='mailto:{1}'&gt;{1}&lt;/a&gt;</value>
  </data>
  <data name="Mail_Format_HTMLUnsubscribeLinkMessage" xml:space="preserve">
    <value>This message is part of the '{0}' discussion list. You can unsubscribe by clicking here: &lt;a href='{1}'&gt;{1}&lt;/a&gt;</value>
  </data>
  <data name="Mail_Format_OnboardingBody" xml:space="preserve">
    <value>The '{0}' email list administator has invited you to participate. To confirm your subscription, simply reply to this e-mail. If you do not wish to participate, you can ignore this email.</value>
  </data>
  <data name="Mail_Format_OnboardingSubheading" xml:space="preserve">
    <value>You've been invited to the '{0}' Email Discussion List</value>
  </data>
  <data name="Mail_Format_OnboardingSubject" xml:space="preserve">
    <value>Subscribe to {0}</value>
  </data>
  <data name="Mail_Format_OwnerNotificationSubheading" xml:space="preserve">
    <value>{0} has requested access to the '{0}' Email Discussion List</value>
  </data>
  <data name="Mail_Format_OwnerNotificationSubject" xml:space="preserve">
    <value>Request to join {0}</value>
  </data>
  <data name="Mail_Format_Subject" xml:space="preserve">
    <value>{0} - Message from {1}</value>
  </data>
  <data name="Mail_Format_SubjectReplace" xml:space="preserve">
    <value> - Message from {0}</value>
    <comment>It is important that this message mirrors Mail_Format_Subject with all characters after {0}, including the first space.</comment>
  </data>
  <data name="Mail_Format_SubscriptionConfirmationBody" xml:space="preserve">
    <value>Glad to have you. To send a message to everyone on the discussion list, just send an email to &lt;a href='mailto:{0}'&gt;{0}&lt;/a&gt;. When you recieve a message from someone in the group, you can simply reply to that email and everyone on the discussion list will get a copy.</value>
  </data>
  <data name="Mail_Format_SubscriptionConfirmationSubheading" xml:space="preserve">
    <value>You've been subscribed to the '{0}' Email Discussion List</value>
  </data>
  <data name="Mail_Format_SubscriptionConfirmationSubject" xml:space="preserve">
    <value>Welcome to {0}</value>
  </data>
  <data name="Mail_Format_TextUnsubscribeEmailMessage" xml:space="preserve">
    <value>This message is part of the '{0}' discussion list. You can unsubscribe by sending any message to {1}.</value>
  </data>
  <data name="Mail_Format_TextUnsubscribeLinkMessage" xml:space="preserve">
    <value>This message is part of the '{0}' discussion list. You can unsubscribe by clicking here: {1}</value>
  </data>
  <data name="Mail_Format_UnsubscriptionConfirmationBody" xml:space="preserve">
    <value>You have successfully unsubscribed from this discussion list. If you'd ever like to resubscribe, send a message to &lt;a href='mailto:{0}'&gt;{0}&lt;/a&gt;.</value>
  </data>
  <data name="Mail_Format_UnsubscriptionConfirmationSubheading" xml:space="preserve">
    <value>You will no longer recieve messages from the '{0}' Email Discussion List</value>
  </data>
  <data name="Mail_Format_UnsubscriptionConfirmationSubject" xml:space="preserve">
    <value>You have been unsubscribed from {0}.</value>
  </data>
  <data name="Mail_OnboardingHeading" xml:space="preserve">
    <value>Welcome!</value>
  </data>
  <data name="Mail_Owner" xml:space="preserve">
    <value>Owner</value>
  </data>
  <data name="Mail_OwnerNotificationBody" xml:space="preserve">
    <value>Please visit the the web administration interface to process this request.</value>
  </data>
  <data name="Mail_OwnerNotificationHeading" xml:space="preserve">
    <value>Discussion List Access Request</value>
  </data>
  <data name="Mail_SubscriptionConfirmationHeading" xml:space="preserve">
    <value>Thanks for subscribing!</value>
  </data>
  <data name="Mail_UnsubscriptionConfirmationHeading" xml:space="preserve">
    <value>Sorry to see you go.</value>
  </data>
</root>