@using GrayDuckMail.Common
@using GrayDuckMail.Common.Database
@using GrayDuckMail.Common.Localization;
@using GrayDuckMail.Web.Models.Forms
@model DiscussionListAssignModel
@{
    ViewData["Title"] = LanguageHelper.GetValue(ResourceName.View_List_Assign_Title);
}

<hgroup>
    <h1>@LanguageHelper.GetValue(ResourceName.View_List_Assign_Title)</h1>
    <h2>@LanguageHelper.GetValue(ResourceName.View_List_Assign_SubheadingPart1) <strong>@Model.DiscussionList.Name</strong>@LanguageHelper.GetValue(ResourceName.View_List_Assign_SubheadingPart1) </h2>
    @if (@Model.Subscriptions.Any(subscription => subscription.Status == SubscriptionStatus.Created))
    {
        <h3>
            <mark>
                @LanguageHelper.FormatValue(ResourceName.View_List_Assign_InvitationsProcessing, DockerEnvironmentVariables.FetchTime.TotalMinutes)
            </mark>
        </h3>
    }
</hgroup>

<form action="/List/Assign" method="post">
    <input type="hidden" name="discussionListID" id="discussionListID" value="@Model.DiscussionList.ID" />

    @foreach (var contact in Model.Contacts)
    {
        <div class="grid">
            <div>
                <fieldset>
                    <input type="hidden" name="contactID" id="contactID_@contact.ID" value="@contact.ID" />
                    <label for="assigned">
                        <input type="checkbox"
                           name="assigned"
                           id="assigned"
                           @(EmailHelper.IsAuthorizedForMailDistribution(Model.DiscussionList, contact) ? "checked" : "" )
                           @(EmailHelper.ContactUnassignableStatuses.Contains(Model.GetSubscription(contact.ID)) ? "disabled" : "")
                           value="@contact.ID" />
                        @contact.Name
                    </label>
                </fieldset>
            </div>
            <div>
                @switch (Model.GetSubscription(contact.ID))
                {
                    case SubscriptionStatus.AwaitingConfirmation:
                        <span data-tooltip="@LanguageHelper.GetValue(ResourceName.View_List_Assign_AwaitingConfirmation)"><i class="icofont-hour-glass"></i></span>
                        break;
                    case SubscriptionStatus.Bounced:
                        <span data-tooltip="@LanguageHelper.FormatValue(ResourceName.View_List_Assign_Format_EmailBounced, contact.Email)"><i class="icofont-exclamation-circle"></i></span>
                        break;
                    case SubscriptionStatus.Created:
                        <span data-tooltip="@LanguageHelper.GetValue(ResourceName.View_List_Assign_Created)"><i class="icofont-plus-circle"></i></span>
                        break;
                    case SubscriptionStatus.Denied:
                        <span data-tooltip="@LanguageHelper.GetValue(ResourceName.View_List_Assign_Denied)"><i class="icofont-not-allowed"></i></span>
                        break;
                    case SubscriptionStatus.Requested:
                        <span data-tooltip="@LanguageHelper.GetValue(ResourceName.View_List_Assign_Requested)"><i class="icofont-question-circle"></i></span>
                        break;
                    case SubscriptionStatus.Subscribed:
                        <span data-tooltip="@LanguageHelper.GetValue(ResourceName.View_List_Assign_Subscribed)"><i class="icofont-check-circled"></i></span>
                        break;
                    case SubscriptionStatus.Unsubscribed:
                        <span data-tooltip="@LanguageHelper.GetValue(ResourceName.View_List_Assign_Unsubscribed)"><i class="icofont-eye-blocked"></i></span>
                        break;
                    default:
                        <!-- Unknown Subscription Status. -->
                        break;
                }
            </div>
        </div>
    }
    <button type="submit">@LanguageHelper.GetValue(ResourceName.View_Common_SaveChanges)</button>
</form>