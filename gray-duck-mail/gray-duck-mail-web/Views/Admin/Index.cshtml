@model AdminModel
@using GrayDuckMail.Common.Localization
@{
    ViewData["Title"] = LanguageHelper.GetValue(ResourceName.View_Administration_Title);
}

<hgroup>
    <h1>@LanguageHelper.GetValue(ResourceName.View_Administration_Heading)</h1>
    <h2>@LanguageHelper.GetValue(ResourceName.View_Administration_Subheading)</h2>
</hgroup>

<article>
    <header>
        <h3>
            @LanguageHelper.GetValue(ResourceName.View_Administration_WebSettings)
        </h3>
    </header>
    <form id="webSettings" action="/Admin/SaveSettings" method="post">
        <fieldset>
            <label for="useFuzzySearch">
                <input type="checkbox" role="switch" id="useFuzzySearch" name="useFuzzySearch" @((Model.UseFuzzySearch) ? "checked" : "") />
                @LanguageHelper.GetValue(ResourceName.View_Administration_AllowFuzzySearch)
            </label>
            <mark><i class="icofont-warning"></i> Fuzzy search can give you better search results, but can be very slow.</mark>
        </fieldset>
        <label>
            Number of items per page
            <input type="number" id="pageSize" name="pageSize" value="@Model.PageSize" />
        </label>
        <label for="theme">Site Theme</label>
        <select id="theme" name=theme>
            @foreach (var theme in ThemeHelper.Themes)
            {
                <!option value="@theme" @(Model.Theme.Equals(theme, StringComparison.OrdinalIgnoreCase) ? "selected" : string.Empty)>
                    @(string.IsNullOrWhiteSpace(theme) ? "System Theme" : theme)
                </!option>
            }
        </select>
    </form>
    <footer>
        <button type="submit" form="webSettings"><i class="icofont-save"></i> Save Settings</button>
    </footer>
</article>
<article>
    <header>
        <h3>Export Database</h3>
    </header>
    <p>
        Save a copy of your database, including contacts, discussion lists, and messages.
    </p>
    <footer>
        <a href="/Admin/ExportDatabase" role="button" style="width: 100%"><i class="icofont-download"></i> Export</a>
    </footer>
</article>
<article>
    <header>
        <h3>Import Database</h3>
    </header>
    <p>
        Import a database file to transfer contacts, discussion lists, and messages.
    </p>
    <form id="importDatabase" action="/Admin/ImportDatabase" method="post" enctype="multipart/form-data">
        <label for="databaseFile">
            Choose a SQLite database file to import
            <input type="file" id="databaseFileUpldate" name="databaseFile">
        </label>
    </form>
    <p>
        <mark><i class="icofont-warning"></i> <strong>WARNING: This will overwrite your existing database file. Please make sure you have a backup of your database before proceeding.</strong></mark>
    </p>
    <footer>
        <button type="submit" form="importDatabase"><i class="icofont-upload"></i> Import</button>
    </footer>
</article>
<article>
    <header>
        <h3>System</h3>
    </header>
    <p>
        @{
            var maxPerHour = Convert.ToInt32((60 * 60 / DockerEnvironmentVariables.RateLimitRoundWaitTime.TotalSeconds) * DockerEnvironmentVariables.RateLimitPerRoundCount);
        }
        Your system is currently configured to send <strong>@DockerEnvironmentVariables.RateLimitPerRoundCount</strong> emails at once, with a maximum of <strong>@maxPerHour</strong> emails sent per hour.
    </p>
    <p>
        Docker environment variable runtime values.
    </p>
    <table role="grid" ">
        <thead>
            <tr>
                <th scope="col">ENV</th>
                <th scope="col">Value</th>
            </tr>
        </thead>
        <tbody>
            <tr>
                <th scope="row">LOG_LEVEL</th>
                <td>@DockerEnvironmentVariables.LogLevel</td>
            </tr>
            <tr>
                <th scope="row">EMAIL_PROTOCOL</th>
                <td>@DockerEnvironmentVariables.EmailProtocol</td>
            </tr>
            <tr>
                <th scope="row">IMAP FOLDER</th>
                <td>@DockerEnvironmentVariables.IMAPFolder</td>
            </tr>
            <tr>
                <th scope="row">FETCH_TIME</th>
                <td>@DockerEnvironmentVariables.FetchTime</td>
            </tr>
            <tr>
                <th scope="row">RATE_LIMIT_PER_ROUND_COUNT</th>
                <td>@DockerEnvironmentVariables.RateLimitPerRoundCount</td>
            </tr>
            <tr>
                <th scope="row">RATE_LIMIT_ROUND_WAIT_TIME</th>
                <td>@DockerEnvironmentVariables.RateLimitRoundWaitTime</td>
            </tr>
            <tr>
                <th scope="row">WEB_ONLY</th>
                <td>@DockerEnvironmentVariables.WebOnly</td>
            </tr>
            <tr>
                <th scope="row">WEB_UNSUBSCRIBE</th>
                <td>@DockerEnvironmentVariables.WebUnsubscribe</td>
            </tr>
            <tr>
                <th scope="row">WEB_USE_HTTPS</th>
                <td>@DockerEnvironmentVariables.WebUseHTTPS</td>
            </tr>
            <tr>
                <th scope="row">WEB_EXTERNAL_URL</th>
                <td>@DockerEnvironmentVariables.WebExternalURL</td>
            </tr>
            <tr>
                <th scope="row">MIN_SEARCH_SCORE</th>
                <td>@DockerEnvironmentVariables.MinimumSearchScore</td>
            </tr>
        </tbody>
    </table>
</article>